- url       = (defined? edit) ? chapter_path(@chapter) : story_chapters_path
- method    = (defined? edit) ? 'patch' : 'post'
= form_for :chapter, url: url, method: method, html: { id: 'chapter-dropzone', class: 'form-default dropzone', multipart: true } do |f|
  = f.hidden_field :story_id, value: @story.id
  .media-upload
    %p.media-upload-title
      Chapter photo
    %p.media-upload-description
      Your chapter photo should be about 320px wide and under 1MB
    .media
      .media-left.dropzone-previews
        -#%img.img-circle.media-object{src: (@chapter and @chapter.image) ? @chapter.image.medium.url : '' }
      .media-body
        .form-group
          %p.dz-message{style: 'display: none;'} Drop your photo here to upload
          = f.label :image, "Upload from your computer"
          %span.btn.btn-primary.btn-file
            %i.glyphicon.glyphicon-folder-open
            Browse
            = f.file_field :image, class: 'form-control'
            = f.hidden_field :image_cache
          %p.btn-file-output
          .clearfix
        .form-group
          = f.label :remote_image_url, "Or choose it from internet"
          = f.text_field :remote_image_url, class: 'form-control'
      %hr
  .form-group
    = f.label "chapter-input-title", "Chapter Title"
    = f.text_field :name, class: "form-control", required: true
  .form-group
    = f.label "chapter-input-description", "Description"
    = f.text_field :description, type: "hidden"
    %trix-toolbar{ id: "wysiwig-toolbar", input: "chapter_description" }
    %trix-editor{ input: "chapter_description", toolbar: "wysiwig-toolbar", class: "form-control" }
  %p
    Choose the relationships that appear in this chapter.
  .visualization-table
    %table.table.table-fixed
      %thead
        %tr
          %th 
            = check_box_tag 'relations_select_all'
          %th Source
          %th Relationship
          %th Target
          %th Date
      %tbody
        = f.collection_check_boxes :relation_ids, @story.visualization.dataset.relations, :id, :to_s do |b|
          %tr
            %td
              = b.check_box
            %td= b.object.source && b.object.source.name
            %td= b.object.relation_type
            %td= b.object.target && b.object.target.name
            %td= b.object.at
  = f.submit "Save", class: "btn btn-default btn-primary"
  %a.btn.btn-default{href: edit_story_path(@story)} Cancel

#dropzone-preview-template{style: 'display: none;'}
  .dz-preview.dz-file-preview
    .dz-details
      -#.dz-filename
      -#  %span.data-dz-name
      -#.dz-size{"data-dz-size": ""}
      %img.img-circle.media-object{"data-dz-thumbnail": ""}
    -#.dz-progress
    -#  %span.dz-upload{"data-dz-uploadprogress": ""}
    -#.dz-success-mark
    -#  %span ✔
    -#.dz-error-mask
    -#  %span ✘
    -#.dz-error-message
    -#  %span{"data-dz-errormessage": ""}


:javascript
  App.Dropzone.options.chapterDropzone = {
    autoProcessQueue: false,
    uploadMultiple: false,
    clickable: false,
    maxFiles: 1,
    acceptedFiles: "image/*",
    paramName: "chapter[image]",
    previewsContainer: ".media-left",
    previewTemplate: document.getElementById('dropzone-preview-template').innerHTML,

    init: function() {
      var theDropzone = this;

      this.element.querySelector("input[type=submit]").addEventListener("click", function(e) {
        e.preventDefault();
        e.stopPropagation();
        if (theDropzone.getQueuedFiles().length > 0) {
          theDropzone.processQueue();
        } else {
          e.srcElement.parentElement.submit();
        }
      });

      var mockFile = { name: "__mockfile__", size: 0 };
      var imageUrl = "#{@chapter.image_url(:medium)}";
      if (imageUrl) {
        this.emit("addedfile", mockFile);
        this.emit("thumbnail", mockFile, imageUrl);
        this.emit("complete", mockFile);
        this.files.push(mockFile);
      }

      this.on("addedfile", function() {
        var first_file = this.files[0];
        if (first_file.name == "__mockfile__" && first_file.size == 0) {
          this.removeFile(first_file);
        }
      });

      this.on("maxfilesexceeded", function() {
        var old_file = this.files[0];
        this.removeFile(old_file);
      });

      this.on("success", function(file, response) {
        window.location = response.location
      });
    }
  }