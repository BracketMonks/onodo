/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$home-icon-collaboration-name: 'home-icon-collaboration';
$home-icon-collaboration-x: 0px;
$home-icon-collaboration-y: 0px;
$home-icon-collaboration-offset-x: 0px;
$home-icon-collaboration-offset-y: 0px;
$home-icon-collaboration-width: 440px;
$home-icon-collaboration-height: 216px;
$home-icon-collaboration-total-width: 880px;
$home-icon-collaboration-total-height: 648px;
$home-icon-collaboration-image: '/images/sprites-home-2x.png';
$home-icon-collaboration: (0px, 0px, 0px, 0px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-collaboration', );
$home-icon-creation-name: 'home-icon-creation';
$home-icon-creation-x: 0px;
$home-icon-creation-y: 216px;
$home-icon-creation-offset-x: 0px;
$home-icon-creation-offset-y: -216px;
$home-icon-creation-width: 440px;
$home-icon-creation-height: 216px;
$home-icon-creation-total-width: 880px;
$home-icon-creation-total-height: 648px;
$home-icon-creation-image: '/images/sprites-home-2x.png';
$home-icon-creation: (0px, 216px, 0px, -216px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-creation', );
$home-icon-information-name: 'home-icon-information';
$home-icon-information-x: 440px;
$home-icon-information-y: 0px;
$home-icon-information-offset-x: -440px;
$home-icon-information-offset-y: 0px;
$home-icon-information-width: 440px;
$home-icon-information-height: 216px;
$home-icon-information-total-width: 880px;
$home-icon-information-total-height: 648px;
$home-icon-information-image: '/images/sprites-home-2x.png';
$home-icon-information: (440px, 0px, -440px, 0px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-information', );
$home-icon-preview-name: 'home-icon-preview';
$home-icon-preview-x: 440px;
$home-icon-preview-y: 216px;
$home-icon-preview-offset-x: -440px;
$home-icon-preview-offset-y: -216px;
$home-icon-preview-width: 440px;
$home-icon-preview-height: 216px;
$home-icon-preview-total-width: 880px;
$home-icon-preview-total-height: 648px;
$home-icon-preview-image: '/images/sprites-home-2x.png';
$home-icon-preview: (440px, 216px, -440px, -216px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-preview', );
$home-icon-share-name: 'home-icon-share';
$home-icon-share-x: 0px;
$home-icon-share-y: 432px;
$home-icon-share-offset-x: 0px;
$home-icon-share-offset-y: -432px;
$home-icon-share-width: 440px;
$home-icon-share-height: 216px;
$home-icon-share-total-width: 880px;
$home-icon-share-total-height: 648px;
$home-icon-share-image: '/images/sprites-home-2x.png';
$home-icon-share: (0px, 432px, 0px, -432px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-share', );
$home-icon-story-name: 'home-icon-story';
$home-icon-story-x: 440px;
$home-icon-story-y: 432px;
$home-icon-story-offset-x: -440px;
$home-icon-story-offset-y: -432px;
$home-icon-story-width: 440px;
$home-icon-story-height: 216px;
$home-icon-story-total-width: 880px;
$home-icon-story-total-height: 648px;
$home-icon-story-image: '/images/sprites-home-2x.png';
$home-icon-story: (440px, 432px, -440px, -432px, 440px, 216px, 880px, 648px, '/images/sprites-home-2x.png', 'home-icon-story', );
$spritesheet-width: 880px;
$spritesheet-height: 648px;
$spritesheet-image: '/images/sprites-home-2x.png';
$spritesheet-sprites: ($home-icon-collaboration, $home-icon-creation, $home-icon-information, $home-icon-preview, $home-icon-share, $home-icon-story, );
$spritesheet: (880px, 648px, '/images/sprites-home-2x.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
