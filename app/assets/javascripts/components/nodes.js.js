// Generated by CoffeeScript 1.6.3
var Nodes, div, h2, table, tbody, th, thead, tr, _ref;

_ref = React.DOM, div = _ref.div, h2 = _ref.h2, table = _ref.table, thead = _ref.thead, tbody = _ref.tbody, tr = _ref.tr, th = _ref.th;

Nodes = React.createClass({
  displayName: 'Nodes',
  getInitialState: function() {
    return {
      nodes: this.props.data
    };
  },
  getDefaultProps: function() {
    return {
      nodes: []
    };
  },
  addNode: function(node) {
    var nodes;
    nodes = React.addons.update(this.state.nodes, {
      $push: [node]
    });
    return this.setState({
      nodes: nodes
    });
  },
  updateNode: function(node, data) {
    var index, nodes;
    index = this.state.nodes.indexOf(node);
    nodes = React.addons.update(this.state.nodes, {
      $splice: [[index, 1, data]]
    });
    return this.replaceState({
      nodes: nodes
    });
  },
  deleteNode: function(node) {
    var index, nodes;
    index = this.state.nodes.indexOf(node);
    nodes = React.addons.update(this.state.nodes, {
      $splice: [[index, 1]]
    });
    return this.replaceState({
      nodes: nodes
    });
  },
  render: function() {
    var node;
    return div({
      className: "nodes row"
    }, table({
      className: "table"
    }, thead({}, tr({}, th({}, th({}, "Name")), th({}, "Description"))), tbody({}, (function() {
      var _i, _len, _ref1, _results;
      _ref1 = this.state.nodes;
      _results = [];
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        node = _ref1[_i];
        _results.push(React.createElement(Node, {
          key: node.id,
          node: node,
          handleEditNode: this.updateNode,
          handleDeleteNode: this.deleteNode
        }));
      }
      return _results;
    }).call(this))));
  }
});
