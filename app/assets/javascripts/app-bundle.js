/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	window.App || (window.App = {});

	App.VisualizationShow = __webpack_require__(1);

	App.VisualizationEdit = __webpack_require__(48);

	$(document).ready(function() {
	  var appVisualizationEdit, appVisualizationShow;
	  if ($('body.visualizations.edit').length > 0) {
	    appVisualizationEdit = new App.VisualizationEdit($('body').data('id'));
	    appVisualizationEdit.render();
	    return $(window).resize(appVisualizationEdit.resize);
	  } else if ($('body.visualizations.show').length > 0) {
	    appVisualizationShow = new App.VisualizationShow($('body').data('id'));
	    appVisualizationShow.render();
	    return $(window).resize(appVisualizationShow.resize);
	  }
	});


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var NodesCollection, RelationsCollection, VisualizationGraph, VisualizationShow, VisualizationTableNodes, VisualizationTableRelations,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

	NodesCollection = __webpack_require__(2);

	RelationsCollection = __webpack_require__(4);

	VisualizationGraph = __webpack_require__(53);

	VisualizationTableNodes = __webpack_require__(54);

	VisualizationTableRelations = __webpack_require__(55);

	VisualizationShow = (function() {
	  VisualizationShow.prototype.id = null;

	  VisualizationShow.prototype.nodes = null;

	  VisualizationShow.prototype.visualizationGraph = null;

	  VisualizationShow.prototype.visualizationTableNodes = null;

	  VisualizationShow.prototype.visualizationTableRelations = null;

	  VisualizationShow.prototype.$tableSelector = null;

	  function VisualizationShow(_id) {
	    this.resize = bind(this.resize, this);
	    this.updateTable = bind(this.updateTable, this);
	    console.log('setup visualization', _id);
	    this.id = _id;
	    this.nodes = new NodesCollection();
	    this.relations = new RelationsCollection();
	    this.visualizationGraph = new VisualizationGraph({
	      collection: {
	        nodes: this.nodes,
	        relations: this.relations
	      }
	    });
	    this.$tableSelector = $('#visualization-table-selector .btn').click(this.updateTable);
	  }

	  VisualizationShow.prototype.updateTable = function(e) {
	    e.preventDefault();
	    if ($(e.target).hasClass('active')) {
	      return;
	    }
	    this.$tableSelector.filter('.active').removeClass('active btn-primary').addClass('btn-default');
	    $(e.target).addClass('active btn-primary');
	    if ($(e.target).attr('href') === '#nodes') {
	      $('.visualization-table-nodes').show();
	      return $('.visualization-table-relations').hide();
	    } else {
	      $('.visualization-table-nodes').hide();
	      return $('.visualization-table-relations').show();
	    }
	  };

	  VisualizationShow.prototype.resize = function() {
	    var graphHeight, windowHeight;
	    windowHeight = $(window).height();
	    graphHeight = windowHeight - 50 - 64 - 64;
	    this.visualizationGraph.$el.height(graphHeight);
	    return this.visualizationGraph.resize();
	  };

	  VisualizationShow.prototype.render = function() {
	    this.resize();
	    this.nodes.fetch({
	      url: '/api/visualizations/' + this.id + '/nodes/'
	    });
	    return this.relations.fetch({
	      url: '/api/visualizations/' + this.id + '/relations/'
	    });
	  };

	  return VisualizationShow;

	})();

	module.exports = VisualizationShow;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var Node, NodesCollection,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Node = __webpack_require__(3);

	NodesCollection = (function(superClass) {
	  extend(NodesCollection, superClass);

	  function NodesCollection() {
	    return NodesCollection.__super__.constructor.apply(this, arguments);
	  }

	  NodesCollection.prototype.model = Node;

	  NodesCollection.prototype.url = '/api/nodes';

	  return NodesCollection;

	})(Backbone.Collection);

	module.exports = NodesCollection;


/***/ },
/* 3 */
/***/ function(module, exports) {

	var Node,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Node = (function(superClass) {
	  extend(Node, superClass);

	  function Node() {
	    return Node.__super__.constructor.apply(this, arguments);
	  }

	  Node.prototype.paramRoot = 'node';

	  Node.prototype.defaults = {
	    name: null,
	    description: null,
	    visible: false,
	    node_type: null
	  };

	  return Node;

	})(Backbone.Model);

	module.exports = Node;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var Relation, RelationsCollection,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Relation = __webpack_require__(5);

	RelationsCollection = (function(superClass) {
	  extend(RelationsCollection, superClass);

	  function RelationsCollection() {
	    return RelationsCollection.__super__.constructor.apply(this, arguments);
	  }

	  RelationsCollection.prototype.model = Relation;

	  RelationsCollection.prototype.url = '/api/relations';

	  return RelationsCollection;

	})(Backbone.Collection);

	module.exports = RelationsCollection;


/***/ },
/* 5 */
/***/ function(module, exports) {

	var Relation,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Relation = (function(superClass) {
	  extend(Relation, superClass);

	  function Relation() {
	    return Relation.__super__.constructor.apply(this, arguments);
	  }

	  Relation.prototype.paramRoot = 'relation';

	  Relation.prototype.defaults = {
	    source_id: null,
	    target_id: null,
	    relation_type: null
	  };

	  return Relation;

	})(Backbone.Model);

	module.exports = Relation;


/***/ },
/* 6 */,
/* 7 */,
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.5.6"
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = this.document;
	  function d3_documentElement(node) {
	    return node && (node.ownerDocument || node.document || node).documentElement;
	  }
	  function d3_window(node) {
	    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
	  }
	  if (d3_document) {
	    try {
	      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
	    } catch (e) {
	      d3_array = function(list) {
	        var i = list.length, array = new Array(i);
	        while (i--) array[i] = list[i];
	        return array;
	      };
	    }
	  }
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  if (d3_document) {
	    try {
	      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
	    } catch (error) {
	      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	      d3_element_prototype.setAttribute = function(name, value) {
	        d3_element_setAttribute.call(this, name, value + "");
	      };
	      d3_element_prototype.setAttributeNS = function(space, local, value) {
	        d3_element_setAttributeNS.call(this, space, local, value + "");
	      };
	      d3_style_prototype.setProperty = function(name, value, priority) {
	        d3_style_setProperty.call(this, name, value + "", priority);
	      };
	    }
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  function d3_number(x) {
	    return x === null ? NaN : +x;
	  }
	  function d3_numeric(x) {
	    return !isNaN(x);
	  }
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
	    }
	    if (j) return s / j;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    var numbers = [], n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
	    }
	    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
	  };
	  d3.variance = function(array, f) {
	    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
	    if (arguments.length === 1) {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    } else {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	    if (j > 1) return s / (j - 1);
	  };
	  d3.deviation = function() {
	    var v = d3.variance.apply(this, arguments);
	    return v ? Math.sqrt(v) : v;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array, i0, i1) {
	    if ((m = arguments.length) < 3) {
	      i1 = array.length;
	      if (m < 2) i0 = 0;
	    }
	    var m = i1 - i0, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.zip = function() {
	    if (!(n = arguments.length)) return [];
	    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
	      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
	        zip[j] = arguments[j][i];
	      }
	    }
	    return zips;
	  };
	  function d3_zipLength(d) {
	    return d.length;
	  }
	  d3.transpose = function(matrix) {
	    return d3.zip.apply(d3, matrix);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    for (var key in properties) {
	      Object.defineProperty(ctor.prototype, key, {
	        value: properties[key],
	        enumerable: false
	      });
	    }
	  }
	  d3.map = function(object, f) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) {
	      object.forEach(function(key, value) {
	        map.set(key, value);
	      });
	    } else if (Array.isArray(object)) {
	      var i = -1, n = object.length, o;
	      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
	    } else {
	      for (var key in object) map.set(key, object[key]);
	    }
	    return map;
	  };
	  function d3_Map() {
	    this._ = Object.create(null);
	  }
	  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this._[d3_map_escape(key)];
	    },
	    set: function(key, value) {
	      return this._[d3_map_escape(key)] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      for (var key in this._) values.push(this._[key]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var key in this._) entries.push({
	        key: d3_map_unescape(key),
	        value: this._[key]
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
	    }
	  });
	  function d3_map_escape(key) {
	    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
	  }
	  function d3_map_unescape(key) {
	    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
	  }
	  function d3_map_has(key) {
	    return d3_map_escape(key) in this._;
	  }
	  function d3_map_remove(key) {
	    return (key = d3_map_escape(key)) in this._ && delete this._[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    for (var key in this._) keys.push(d3_map_unescape(key));
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this._) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this._) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {
	    this._ = Object.create(null);
	  }
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(key) {
	      this._[d3_map_escape(key += "")] = true;
	      return key;
	    },
	    remove: d3_map_remove,
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key));
	    }
	  });
	  d3.behavior = {};
	  function d3_identity(d) {
	    return d;
	  }
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.slice(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.slice(i + 1);
	      type = type.slice(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatches = function(n, s) {
	    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
	    d3_selectMatches = function(n, s) {
	      return d3_selectMatcher.call(n, s);
	    };
	    return d3_selectMatches(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3.select(d3_document.documentElement);
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: "http://www.w3.org/1999/xhtml",
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0) {
	        prefix = name.slice(0, i);
	        name = name.slice(i + 1);
	      }
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return (name + "").trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) {
	        var node = this.node();
	        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
	      }
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    function create() {
	      var document = this.ownerDocument, namespace = this.namespaceURI;
	      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);
	    }
	    function createNS() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    }
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(d3_selectionRemove);
	  };
	  function d3_selectionRemove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
	        for (i = -1; ++i < n; ) {
	          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {
	            exitNodes[i] = node;
	          } else {
	            nodeByKeyValue.set(keyValue, node);
	          }
	          keyValues[i] = keyValue;
	        }
	        for (i = -1; ++i < m; ) {
	          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          } else if (node !== true) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          }
	          nodeByKeyValue.set(keyValue, true);
	        }
	        for (i = -1; ++i < n; ) {
	          if (nodeByKeyValue.get(keyValues[i]) !== true) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    d3_selection_each(this, function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3.select = function(node) {
	    var group;
	    if (typeof node === "string") {
	      group = [ d3_select(node, d3_document) ];
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = [ node ];
	      group.parentNode = d3_documentElement(node);
	    }
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group;
	    if (typeof nodes === "string") {
	      group = d3_array(d3_selectAll(nodes, d3_document));
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = nodes;
	      group.parentNode = null;
	    }
	    return d3_selection([ group ]);
	  };
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.slice(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  if (d3_document) {
	    d3_selection_onFilters.forEach(function(k) {
	      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	    });
	  }
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect, d3_event_dragId = 0;
	  function d3_event_dragSuppress(node) {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect == null) {
	      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
	    }
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        var off = function() {
	          w.on(click, null);
	        };
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      if (d3_mouse_bug44083 < 0) {
	        var window = d3_window(container);
	        if (window.scrollX || window.scrollY) {
	          svg = d3.select("body").append("svg").style({
	            position: "absolute",
	            top: 0,
	            left: 0,
	            margin: 0,
	            padding: 0,
	            border: "none"
	          }, "important");
	          var ctm = svg[0][0].getScreenCTM();
	          d3_mouse_bug44083 = !(ctm.f || ctm.e);
	          svg.remove();
	        }
	      }
	      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
	      point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged && d3.event.target === target);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
	    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
	    function interpolate(t) {
	      var s = t * S;
	      if (dr) {
	        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      }
	      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
	    }
	    interpolate.duration = S * 1e3;
	    return interpolate;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    if (!d3_behavior_zoomWheel) {
	      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return d3.event.wheelDelta;
	      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	        return -d3.event.detail;
	      }, "MozMousePixelScroll");
	    }
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("interrupt.zoom", function() {
	            zoomended(dispatch);
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: +_
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.duration = function(_) {
	      if (!arguments.length) return duration;
	      duration = +_;
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function zoomTo(that, p, l, k) {
	      that.__chart__ = {
	        x: view.x,
	        y: view.y,
	        k: view.k
	      };
	      scaleTo(Math.pow(2, k));
	      translateTo(center0 = p, l);
	      that = d3.select(that);
	      if (duration > 0) that = that.transition().duration(duration);
	      that.call(zoom.event);
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      if (!zooming++) dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      if (!--zooming) dispatch({
	        type: "zoomend"
	      }), center0 = null;
	    }
	    function mousedowned() {
	      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, null).on(mouseup, null);
	        dragRestore(dragged && d3.event.target === target);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
	      started();
	      zoomstarted(dispatch);
	      subject.on(mousedown, null).on(touchstart, started);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0];
	            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
	            d3_eventPreventDefault();
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        d3_selection_interrupt.call(that);
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
	      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(center0, translate0);
	      zoomed(dispatch);
	    }
	    function dblclicked() {
	      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
	      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
	  d3.color = d3_color;
	  function d3_color() {}
	  d3_color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = d3_hsl;
	  function d3_hsl(h, s, l) {
	    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
	  }
	  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = d3_hcl;
	  function d3_hcl(h, c, l) {
	    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
	  }
	  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
	  d3_hclPrototype.brighter = function(k) {
	    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = d3_lab;
	  function d3_lab(l, a, b) {
	    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_lab.prototype = new d3_color();
	  d3_labPrototype.brighter = function(k) {
	    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = d3_rgb;
	  function d3_rgb(r, g, b) {
	    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
	  }
	  function d3_rgbNumber(value) {
	    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return new d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_rgb(k * this.r, k * this.g, k * this.b);
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    format = format.toLowerCase();
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/.exec(format);
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }

	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) {
	      return rgb(color.r, color.g, color.b);
	    }
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    rebeccapurple: 6697881,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  function d3_xhrHasResponse(request) {
	    var type = request.responseType;
	    return type && type !== "text" ? request.response : request.responseText;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	        return text.slice(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      f: false,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  };
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now();
	    d3_timer_active = d3_timer_queueHead;
	    while (d3_timer_active) {
	      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
	      d3_timer_active = d3_timer_active.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.f) {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      } else {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;

	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;

	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;

	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();

	       case "c":
	        exponent = false;

	       case "d":
	        integer = true;
	        precision = 0;
	        break;

	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before, after;
	        if (i < 0) {
	          var j = exponent ? value.lastIndexOf("e") : -1;
	          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
	        } else {
	          before = value.substring(0, i);
	          after = locale_decimal + value.substring(i + 1);
	        }
	        if (!zfill && comma) before = formatGroup(before, Infinity);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.slice(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.slice(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return rotate([ 0, 0, 90 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = xm; else x2 = xm;
	        if (below) y1 = ym; else y2 = ym;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      root.find = function(point) {
	        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
	    var minDistance2 = Infinity, closestPoint;
	    (function find(node, x1, y1, x2, y2) {
	      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
	      if (point = node.point) {
	        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
	        if (distance2 < minDistance2) {
	          var distance = Math.sqrt(minDistance2 = distance2);
	          x0 = x - distance, y0 = y - distance;
	          x3 = x + distance, y3 = y + distance;
	          closestPoint = point;
	        }
	      }
	      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
	      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
	        if (node = children[i & 3]) switch (i & 3) {
	         case 0:
	          find(node, x1, y1, xm, ym);
	          break;

	         case 1:
	          find(node, xm, y1, x2, ym);
	          break;

	         case 2:
	          find(node, x1, ym, xm, y2);
	          break;

	         case 3:
	          find(node, xm, ym, x2, y2);
	          break;
	        }
	      }
	    })(root, x0, y0, x3, y3);
	    return closestPoint;
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    a = +a, b = +b;
	    return function(t) {
	      return a * (1 - t) + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
	    if (ta[0] != tb[0] || ta[1] != tb[1]) {
	      s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: 1,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: 3,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    } else {
	      s.push("");
	    }
	    if (ra != rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(s.pop() + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(s.pop() + "rotate(" + rb + ")");
	    }
	    if (wa != wb) {
	      q.push({
	        i: s.push(s.pop() + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(s.pop() + "skewX(" + wb + ")");
	    }
	    if (ka[0] != kb[0] || ka[1] != kb[1]) {
	      n = s.push(s.pop() + "scale(", null, ",", null, ")");
	      q.push({
	        i: n - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: n - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] != 1 || kb[1] != 1) {
	      s.push(s.pop() + "scale(" + kb + ")");
	    }
	    n = q.length;
	    return function(t) {
	      var i = -1, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return (x - a) / b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) / b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: (x - x0) / k
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight / (t.weight + s.weight));
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) alpha = x; else alpha = 0;
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        d3.timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, l = candidates.length, x;
	        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
	    function pie(data) {
	      var n = data.length, values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      index.forEach(function(i) {
	        arcs[i] = {
	          data: data[i],
	          value: v = values[i],
	          startAngle: a,
	          endAngle: a += v * k + pa,
	          padAngle: p
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(_) {
	      if (!arguments.length) return value;
	      value = _;
	      return pie;
	    };
	    pie.sort = function(_) {
	      if (!arguments.length) return sort;
	      sort = _;
	      return pie;
	    };
	    pie.startAngle = function(_) {
	      if (!arguments.length) return startAngle;
	      startAngle = _;
	      return pie;
	    };
	    pie.endAngle = function(_) {
	      if (!arguments.length) return endAngle;
	      endAngle = _;
	      return pie;
	    };
	    pie.padAngle = function(_) {
	      if (!arguments.length) return padAngle;
	      padAngle = _;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      if (!(n = data.length)) return data;
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var m = series[0].length, n, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = 0;
	      root.y = 0;
	      root.dx = size[0];
	      root.dy = size[1];
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
	      Math.floor), e;
	      return function(d) {
	        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
	      0) : (stop - start) / (domain.length - 1 + padding);
	      range = steps(start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundPoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
	      0) : (stop - start) / (domain.length - 1 + padding) | 0;
	      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangeRoundPoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
	      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  function d3_zero() {
	    return 0;
	  }
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
	    function arc() {
	      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
	      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
	      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
	      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
	      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
	        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
	        if (!cw) p1 *= -1;
	        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
	        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
	      }
	      if (r1) {
	        x0 = r1 * Math.cos(a0 + p1);
	        y0 = r1 * Math.sin(a0 + p1);
	        x1 = r1 * Math.cos(a1 - p1);
	        y1 = r1 * Math.sin(a1 - p1);
	        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
	        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
	          var h1 = (a0 + a1) / 2;
	          x0 = r1 * Math.cos(h1);
	          y0 = r1 * Math.sin(h1);
	          x1 = y1 = null;
	        }
	      } else {
	        x0 = y0 = 0;
	      }
	      if (r0) {
	        x2 = r0 * Math.cos(a1 - p0);
	        y2 = r0 * Math.sin(a1 - p0);
	        x3 = r0 * Math.cos(a0 + p0);
	        y3 = r0 * Math.sin(a0 + p0);
	        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
	        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
	          var h0 = (a0 + a1) / 2;
	          x2 = r0 * Math.cos(h0);
	          y2 = r0 * Math.sin(h0);
	          x3 = y3 = null;
	        }
	      } else {
	        x2 = y2 = 0;
	      }
	      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
	        cr = r0 < r1 ^ cw ? 0 : 1;
	        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	        if (x1 != null) {
	          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
	          if (rc === rc1) {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
	          } else {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
	          }
	        } else {
	          path.push("M", x0, ",", y0);
	        }
	        if (x3 != null) {
	          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
	          if (rc === rc0) {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          } else {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          }
	        } else {
	          path.push("L", x2, ",", y2);
	        }
	      } else {
	        path.push("M", x0, ",", y0);
	        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
	        path.push("L", x2, ",", y2);
	        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
	      }
	      path.push("Z");
	      return path.join("");
	    }
	    function circleSegment(r1, cw) {
	      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.cornerRadius = function(v) {
	      if (!arguments.length) return cornerRadius;
	      cornerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.padRadius = function(v) {
	      if (!arguments.length) return padRadius;
	      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.padAngle = function(v) {
	      if (!arguments.length) return padAngle;
	      padAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcAuto = "auto";
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_arcPadAngle(d) {
	    return d && d.padAngle;
	  }
	  function d3_svg_arcSweep(x0, y0, x1, y1) {
	    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
	  }
	  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
	    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.join("L");
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return d3_svg_lineLinear(points) + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] - halfπ;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  d3_selectionPrototype.transition = function(name) {
	    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_selectionPrototype.interrupt = function(name) {
	    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
	  };
	  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
	  function d3_selection_interruptNS(ns) {
	    return function() {
	      var lock, active;
	      if ((lock = this[ns]) && (active = lock[lock.active])) {
	        if (--lock.count) delete lock[lock.active]; else delete this[ns];
	        lock.active += .5;
	        active.event && active.event.interrupt.call(this, this.__data__, active.index);
	      }
	    };
	  }
	  function d3_transition(groups, ns, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.namespace = ns;
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection, name) {
	    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node[ns][id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.namespace, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node[ns][id].tween.remove(name);
	    } : function(node) {
	      node[ns][id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id, ns = groups.namespace;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node[ns][id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    var ns = this.namespace;
	    return this.each("end.transition", function() {
	      var p;
	      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node[ns][id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node[ns][id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node[ns][id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      try {
	        d3_transitionInheritId = id;
	        d3_selection_each(this, function(node, i, j) {
	          d3_transitionInherit = node[ns][id];
	          type.call(node, node.__data__, i, j);
	        });
	      } finally {
	        d3_transitionInherit = inherit;
	        d3_transitionInheritId = inheritId;
	      }
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node[ns][id];
	        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = node[ns][id0];
	          d3_transitionNode(node, i, ns, id1, {
	            time: transition.time,
	            ease: transition.ease,
	            delay: transition.delay + transition.duration,
	            duration: transition.duration
	          });
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id1);
	  };
	  function d3_transitionNamespace(name) {
	    return name == null ? "__transition__" : "__transition_" + name + "__";
	  }
	  function d3_transitionNode(node, i, ns, id, inherit) {
	    var lock = node[ns] || (node[ns] = {
	      active: 0,
	      count: 0
	    }), transition = lock[id];
	    if (!transition) {
	      var time = inherit.time;
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        delay: inherit.delay,
	        duration: inherit.duration,
	        ease: inherit.ease,
	        index: i
	      };
	      inherit = null;
	      ++lock.count;
	      d3.timer(function(elapsed) {
	        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];
	        timer.t = delay + time;
	        if (delay <= elapsed) return start(elapsed - delay);
	        timer.c = start;
	        function start(elapsed) {
	          if (lock.active > id) return stop();
	          var active = lock[lock.active];
	          if (active) {
	            --lock.count;
	            delete lock[lock.active];
	            active.event && active.event.interrupt.call(node, node.__data__, active.index);
	          }
	          lock.active = id;
	          transition.event && transition.event.start.call(node, node.__data__, i);
	          transition.tween.forEach(function(key, value) {
	            if (value = value.call(node, node.__data__, i)) {
	              tweened.push(value);
	            }
	          });
	          ease = transition.ease;
	          duration = transition.duration;
	          d3.timer(function() {
	            timer.c = tick(elapsed || 1) ? d3_true : tick;
	            return 1;
	          }, 0, time);
	        }
	        function tick(elapsed) {
	          if (lock.active !== id) return 1;
	          var t = elapsed / duration, e = ease(t), n = tweened.length;
	          while (n > 0) {
	            tweened[--n].call(node, e);
	          }
	          if (t >= 1) {
	            transition.event && transition.event.end.call(node, node.__data__, i);
	            return stop();
	          }
	        }
	        function stop() {
	          if (--lock.count) delete lock[id]; else delete node[ns];
	          return 1;
	        }
	      }, 0, time);
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
	        if (orient === "bottom" || orient === "top") {
	          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
	          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
	          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
	        } else {
	          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
	          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
	          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
	        }
	        lineEnter.attr(y2, sign * innerTickSize);
	        textEnter.attr(y1, sign * tickSpacing);
	        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
	        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1, scale0);
	        }
	        tickEnter.call(tickTransform, scale0, scale1);
	        tickUpdate.call(tickTransform, scale1, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = arguments;
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x0, x1) {
	    selection.attr("transform", function(d) {
	      var v0 = x0(d);
	      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y0, y1) {
	    selection.attr("transform", function(d) {
	      var v0 = y0(d);
	      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3;
	  this.d3 = d3;
	}();

/***/ },
/* 9 */,
/* 10 */,
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var Handlebars, VisualizationGraphInfo,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Handlebars = __webpack_require__(12);

	VisualizationGraphInfo = (function(superClass) {
	  extend(VisualizationGraphInfo, superClass);

	  function VisualizationGraphInfo() {
	    return VisualizationGraphInfo.__super__.constructor.apply(this, arguments);
	  }

	  VisualizationGraphInfo.prototype.el = '.visualization-graph-info';

	  VisualizationGraphInfo.prototype.show = function(node) {
	    this.node = node;
	    this.$el.addClass('active');
	    return this.render();
	  };

	  VisualizationGraphInfo.prototype.hide = function() {
	    return this.$el.removeClass('active');
	  };

	  VisualizationGraphInfo.prototype.initialize = function() {
	    return this.render();
	  };

	  VisualizationGraphInfo.prototype.render = function() {
	    var result;
	    this.template = Handlebars.compile($('#visualization-graph-info-template').html());
	    if (this.node) {
	      result = this.template({
	        name: this.node.name,
	        description: this.node.description
	      });
	      console.log('template', result);
	      this.$el.find('.panel-body').html(result, this);
	    }
	    return this;
	  };

	  return VisualizationGraphInfo;

	})(Backbone.View);

	module.exports = VisualizationGraphInfo;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	// USAGE:
	// var handlebars = require('handlebars');
	/* eslint-disable no-var */

	// var local = handlebars.create();

	var handlebars = __webpack_require__(13)['default'];

	var printer = __webpack_require__(41);
	handlebars.PrintVisitor = printer.PrintVisitor;
	handlebars.print = printer.print;

	module.exports = handlebars;

	// Publish a Node.js require() handler for .handlebars and .hbs files
	function extension(module, filename) {
	  var fs = __webpack_require__(42);
	  var templateString = fs.readFileSync(filename, 'utf8');
	  module.exports = handlebars.compile(templateString);
	}
	/* istanbul ignore else */
	if ("function" !== 'undefined' && (void 0)) {
	  (void 0)['.handlebars'] = extension;
	  (void 0)['.hbs'] = extension;
	}


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _handlebarsRuntime = __webpack_require__(14);

	var _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);

	// Compiler imports

	var _handlebarsCompilerAst = __webpack_require__(32);

	var _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);

	var _handlebarsCompilerBase = __webpack_require__(33);

	var _handlebarsCompilerCompiler = __webpack_require__(38);

	var _handlebarsCompilerJavascriptCompiler = __webpack_require__(39);

	var _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);

	var _handlebarsCompilerVisitor = __webpack_require__(36);

	var _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);

	var _handlebarsNoConflict = __webpack_require__(31);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	var _create = _handlebarsRuntime2['default'].create;
	function create() {
	  var hb = _create();

	  hb.compile = function (input, options) {
	    return _handlebarsCompilerCompiler.compile(input, options, hb);
	  };
	  hb.precompile = function (input, options) {
	    return _handlebarsCompilerCompiler.precompile(input, options, hb);
	  };

	  hb.AST = _handlebarsCompilerAst2['default'];
	  hb.Compiler = _handlebarsCompilerCompiler.Compiler;
	  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];
	  hb.Parser = _handlebarsCompilerBase.parser;
	  hb.parse = _handlebarsCompilerBase.parse;

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst.Visitor = _handlebarsCompilerVisitor2['default'];

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7aUNBQW9CLHNCQUFzQjs7Ozs7O3FDQUcxQiwyQkFBMkI7Ozs7c0NBQ0gsNEJBQTRCOzswQ0FDdEIsZ0NBQWdDOztvREFDL0MsMkNBQTJDOzs7O3lDQUN0RCwrQkFBK0I7Ozs7b0NBRTVCLDBCQUEwQjs7OztBQUVqRCxJQUFJLE9BQU8sR0FBRywrQkFBUSxNQUFNLENBQUM7QUFDN0IsU0FBUyxNQUFNLEdBQUc7QUFDaEIsTUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7O0FBRW5CLElBQUUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLFdBQU8sb0NBQVEsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNwQyxDQUFDO0FBQ0YsSUFBRSxDQUFDLFVBQVUsR0FBRyxVQUFTLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDdkMsV0FBTyx1Q0FBVyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3ZDLENBQUM7O0FBRUYsSUFBRSxDQUFDLEdBQUcscUNBQU0sQ0FBQztBQUNiLElBQUUsQ0FBQyxRQUFRLHVDQUFXLENBQUM7QUFDdkIsSUFBRSxDQUFDLGtCQUFrQixvREFBcUIsQ0FBQztBQUMzQyxJQUFFLENBQUMsTUFBTSxpQ0FBUyxDQUFDO0FBQ25CLElBQUUsQ0FBQyxLQUFLLGdDQUFRLENBQUM7O0FBRWpCLFNBQU8sRUFBRSxDQUFDO0NBQ1g7O0FBRUQsSUFBSSxJQUFJLEdBQUcsTUFBTSxFQUFFLENBQUM7QUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7O0FBRXJCLGtDQUFXLElBQUksQ0FBQyxDQUFDOztBQUVqQixJQUFJLENBQUMsT0FBTyx5Q0FBVSxDQUFDOztBQUV2QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDOztxQkFFUixJQUFJIiwiZmlsZSI6ImhhbmRsZWJhcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcnVudGltZSBmcm9tICcuL2hhbmRsZWJhcnMucnVudGltZSc7XG5cbi8vIENvbXBpbGVyIGltcG9ydHNcbmltcG9ydCBBU1QgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdCc7XG5pbXBvcnQgeyBwYXJzZXIgYXMgUGFyc2VyLCBwYXJzZSB9IGZyb20gJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJztcbmltcG9ydCB7IENvbXBpbGVyLCBjb21waWxlLCBwcmVjb21waWxlIH0gZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyJztcbmltcG9ydCBKYXZhU2NyaXB0Q29tcGlsZXIgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2phdmFzY3JpcHQtY29tcGlsZXInO1xuaW1wb3J0IFZpc2l0b3IgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL3Zpc2l0b3InO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG5sZXQgX2NyZWF0ZSA9IHJ1bnRpbWUuY3JlYXRlO1xuZnVuY3Rpb24gY3JlYXRlKCkge1xuICBsZXQgaGIgPSBfY3JlYXRlKCk7XG5cbiAgaGIuY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcblxuICBoYi5BU1QgPSBBU1Q7XG4gIGhiLkNvbXBpbGVyID0gQ29tcGlsZXI7XG4gIGhiLkphdmFTY3JpcHRDb21waWxlciA9IEphdmFTY3JpcHRDb21waWxlcjtcbiAgaGIuUGFyc2VyID0gUGFyc2VyO1xuICBoYi5wYXJzZSA9IHBhcnNlO1xuXG4gIHJldHVybiBoYjtcbn1cblxubGV0IGluc3QgPSBjcmVhdGUoKTtcbmluc3QuY3JlYXRlID0gY3JlYXRlO1xuXG5ub0NvbmZsaWN0KGluc3QpO1xuXG5pbnN0LlZpc2l0b3IgPSBWaXNpdG9yO1xuXG5pbnN0WydkZWZhdWx0J10gPSBpbnN0O1xuXG5leHBvcnQgZGVmYXVsdCBpbnN0O1xuIl19


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	// istanbul ignore next

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _handlebarsBase = __webpack_require__(15);

	var base = _interopRequireWildcard(_handlebarsBase);

	// Each of these augment the Handlebars object. No need to setup here.
	// (This is done to easily share code between commonjs and browse envs)

	var _handlebarsSafeString = __webpack_require__(29);

	var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

	var _handlebarsException = __webpack_require__(17);

	var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

	var _handlebarsUtils = __webpack_require__(16);

	var Utils = _interopRequireWildcard(_handlebarsUtils);

	var _handlebarsRuntime = __webpack_require__(30);

	var runtime = _interopRequireWildcard(_handlebarsRuntime);

	var _handlebarsNoConflict = __webpack_require__(31);

	var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

	// For compatibility and usage outside of module systems, make the Handlebars object a namespace
	function create() {
	  var hb = new base.HandlebarsEnvironment();

	  Utils.extend(hb, base);
	  hb.SafeString = _handlebarsSafeString2['default'];
	  hb.Exception = _handlebarsException2['default'];
	  hb.Utils = Utils;
	  hb.escapeExpression = Utils.escapeExpression;

	  hb.VM = runtime;
	  hb.template = function (spec) {
	    return runtime.template(spec, hb);
	  };

	  return hb;
	}

	var inst = create();
	inst.create = create;

	_handlebarsNoConflict2['default'](inst);

	inst['default'] = inst;

	exports['default'] = inst;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.HandlebarsEnvironment = HandlebarsEnvironment;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utils = __webpack_require__(16);

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	var _helpers = __webpack_require__(18);

	var _decorators = __webpack_require__(26);

	var _logger = __webpack_require__(28);

	var _logger2 = _interopRequireDefault(_logger);

	var VERSION = '4.0.5';
	exports.VERSION = VERSION;
	var COMPILER_REVISION = 7;

	exports.COMPILER_REVISION = COMPILER_REVISION;
	var REVISION_CHANGES = {
	  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
	  2: '== 1.0.0-rc.3',
	  3: '== 1.0.0-rc.4',
	  4: '== 1.x.x',
	  5: '== 2.0.0-alpha.x',
	  6: '>= 2.0.0-beta.1',
	  7: '>= 4.0.0'
	};

	exports.REVISION_CHANGES = REVISION_CHANGES;
	var objectType = '[object Object]';

	function HandlebarsEnvironment(helpers, partials, decorators) {
	  this.helpers = helpers || {};
	  this.partials = partials || {};
	  this.decorators = decorators || {};

	  _helpers.registerDefaultHelpers(this);
	  _decorators.registerDefaultDecorators(this);
	}

	HandlebarsEnvironment.prototype = {
	  constructor: HandlebarsEnvironment,

	  logger: _logger2['default'],
	  log: _logger2['default'].log,

	  registerHelper: function registerHelper(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple helpers');
	      }
	      _utils.extend(this.helpers, name);
	    } else {
	      this.helpers[name] = fn;
	    }
	  },
	  unregisterHelper: function unregisterHelper(name) {
	    delete this.helpers[name];
	  },

	  registerPartial: function registerPartial(name, partial) {
	    if (_utils.toString.call(name) === objectType) {
	      _utils.extend(this.partials, name);
	    } else {
	      if (typeof partial === 'undefined') {
	        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
	      }
	      this.partials[name] = partial;
	    }
	  },
	  unregisterPartial: function unregisterPartial(name) {
	    delete this.partials[name];
	  },

	  registerDecorator: function registerDecorator(name, fn) {
	    if (_utils.toString.call(name) === objectType) {
	      if (fn) {
	        throw new _exception2['default']('Arg not supported with multiple decorators');
	      }
	      _utils.extend(this.decorators, name);
	    } else {
	      this.decorators[name] = fn;
	    }
	  },
	  unregisterDecorator: function unregisterDecorator(name) {
	    delete this.decorators[name];
	  }
	};

	var log = _logger2['default'].log;

	exports.log = log;
	exports.createFrame = _utils.createFrame;
	exports.logger = _logger2['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQTRDLFNBQVM7O3lCQUMvQixhQUFhOzs7O3VCQUNFLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNuQyxVQUFVOzs7O0FBRXRCLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQzs7QUFDeEIsSUFBTSxpQkFBaUIsR0FBRyxDQUFDLENBQUM7OztBQUU1QixJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxVQUFVO0NBQ2QsQ0FBQzs7O0FBRUYsSUFBTSxVQUFVLEdBQUcsaUJBQWlCLENBQUM7O0FBRTlCLFNBQVMscUJBQXFCLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUU7QUFDbkUsTUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQzdCLE1BQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxJQUFJLEVBQUUsQ0FBQztBQUMvQixNQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsSUFBSSxFQUFFLENBQUM7O0FBRW5DLGtDQUF1QixJQUFJLENBQUMsQ0FBQztBQUM3Qix3Q0FBMEIsSUFBSSxDQUFDLENBQUM7Q0FDakM7O0FBRUQscUJBQXFCLENBQUMsU0FBUyxHQUFHO0FBQ2hDLGFBQVcsRUFBRSxxQkFBcUI7O0FBRWxDLFFBQU0scUJBQVE7QUFDZCxLQUFHLEVBQUUsb0JBQU8sR0FBRzs7QUFFZixnQkFBYyxFQUFFLHdCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDakMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQUUsY0FBTSwyQkFBYyx5Q0FBeUMsQ0FBQyxDQUFDO09BQUU7QUFDM0Usb0JBQU8sSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUM1QixNQUFNO0FBQ0wsVUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDekI7R0FDRjtBQUNELGtCQUFnQixFQUFFLDBCQUFTLElBQUksRUFBRTtBQUMvQixXQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDM0I7O0FBRUQsaUJBQWUsRUFBRSx5QkFBUyxJQUFJLEVBQUUsT0FBTyxFQUFFO0FBQ3ZDLFFBQUksZ0JBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLFVBQVUsRUFBRTtBQUN0QyxvQkFBTyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzdCLE1BQU07QUFDTCxVQUFJLE9BQU8sT0FBTyxLQUFLLFdBQVcsRUFBRTtBQUNsQyxjQUFNLHlFQUEwRCxJQUFJLG9CQUFpQixDQUFDO09BQ3ZGO0FBQ0QsVUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUM7S0FDL0I7R0FDRjtBQUNELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRTtBQUNoQyxXQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDNUI7O0FBRUQsbUJBQWlCLEVBQUUsMkJBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNwQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFBRSxjQUFNLDJCQUFjLDRDQUE0QyxDQUFDLENBQUM7T0FBRTtBQUM5RSxvQkFBTyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQy9CLE1BQU07QUFDTCxVQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUM1QjtHQUNGO0FBQ0QscUJBQW1CLEVBQUUsNkJBQVMsSUFBSSxFQUFFO0FBQ2xDLFdBQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUM5QjtDQUNGLENBQUM7O0FBRUssSUFBSSxHQUFHLEdBQUcsb0JBQU8sR0FBRyxDQUFDOzs7UUFFcEIsV0FBVztRQUFFLE1BQU0iLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlRnJhbWUsIGV4dGVuZCwgdG9TdHJpbmd9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQge3JlZ2lzdGVyRGVmYXVsdEhlbHBlcnN9IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQge3JlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnN9IGZyb20gJy4vZGVjb3JhdG9ycyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcblxuZXhwb3J0IGNvbnN0IFZFUlNJT04gPSAnNC4wLjUnO1xuZXhwb3J0IGNvbnN0IENPTVBJTEVSX1JFVklTSU9OID0gNztcblxuZXhwb3J0IGNvbnN0IFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnLFxuICA3OiAnPj0gNC4wLjAnXG59O1xuXG5jb25zdCBvYmplY3RUeXBlID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBIYW5kbGViYXJzRW52aXJvbm1lbnQoaGVscGVycywgcGFydGlhbHMsIGRlY29yYXRvcnMpIHtcbiAgdGhpcy5oZWxwZXJzID0gaGVscGVycyB8fCB7fTtcbiAgdGhpcy5wYXJ0aWFscyA9IHBhcnRpYWxzIHx8IHt9O1xuICB0aGlzLmRlY29yYXRvcnMgPSBkZWNvcmF0b3JzIHx8IHt9O1xuXG4gIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnModGhpcyk7XG4gIHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnModGhpcyk7XG59XG5cbkhhbmRsZWJhcnNFbnZpcm9ubWVudC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBIYW5kbGViYXJzRW52aXJvbm1lbnQsXG5cbiAgbG9nZ2VyOiBsb2dnZXIsXG4gIGxvZzogbG9nZ2VyLmxvZyxcblxuICByZWdpc3RlckhlbHBlcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7IHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgaGVscGVycycpOyB9XG4gICAgICBleHRlbmQodGhpcy5oZWxwZXJzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5oZWxwZXJzW25hbWVdID0gZm47XG4gICAgfVxuICB9LFxuICB1bnJlZ2lzdGVySGVscGVyOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMuaGVscGVyc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUsIHBhcnRpYWwpIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgZXh0ZW5kKHRoaXMucGFydGlhbHMsIG5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIHBhcnRpYWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oYEF0dGVtcHRpbmcgdG8gcmVnaXN0ZXIgYSBwYXJ0aWFsIGNhbGxlZCBcIiR7bmFtZX1cIiBhcyB1bmRlZmluZWRgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFydGlhbHNbbmFtZV0gPSBwYXJ0aWFsO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7IHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgZGVjb3JhdG9ycycpOyB9XG4gICAgICBleHRlbmQodGhpcy5kZWNvcmF0b3JzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kZWNvcmF0b3JzW25hbWVdID0gZm47XG4gICAgfVxuICB9LFxuICB1bnJlZ2lzdGVyRGVjb3JhdG9yOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMuZGVjb3JhdG9yc1tuYW1lXTtcbiAgfVxufTtcblxuZXhwb3J0IGxldCBsb2cgPSBsb2dnZXIubG9nO1xuXG5leHBvcnQge2NyZWF0ZUZyYW1lLCBsb2dnZXJ9O1xuIl19


/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.extend = extend;
	exports.indexOf = indexOf;
	exports.escapeExpression = escapeExpression;
	exports.isEmpty = isEmpty;
	exports.createFrame = createFrame;
	exports.blockParams = blockParams;
	exports.appendContextPath = appendContextPath;
	var escape = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&#x27;',
	  '`': '&#x60;',
	  '=': '&#x3D;'
	};

	var badChars = /[&<>"'`=]/g,
	    possible = /[&<>"'`=]/;

	function escapeChar(chr) {
	  return escape[chr];
	}

	function extend(obj /* , ...source */) {
	  for (var i = 1; i < arguments.length; i++) {
	    for (var key in arguments[i]) {
	      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
	        obj[key] = arguments[i][key];
	      }
	    }
	  }

	  return obj;
	}

	var toString = Object.prototype.toString;

	exports.toString = toString;
	// Sourced from lodash
	// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
	/* eslint-disable func-style */
	var isFunction = function isFunction(value) {
	  return typeof value === 'function';
	};
	// fallback for older versions of Chrome and Safari
	/* istanbul ignore next */
	if (isFunction(/x/)) {
	  exports.isFunction = isFunction = function (value) {
	    return typeof value === 'function' && toString.call(value) === '[object Function]';
	  };
	}
	exports.isFunction = isFunction;

	/* eslint-enable func-style */

	/* istanbul ignore next */
	var isArray = Array.isArray || function (value) {
	  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
	};

	exports.isArray = isArray;
	// Older IE versions do not directly support indexOf so we must implement our own, sadly.

	function indexOf(array, value) {
	  for (var i = 0, len = array.length; i < len; i++) {
	    if (array[i] === value) {
	      return i;
	    }
	  }
	  return -1;
	}

	function escapeExpression(string) {
	  if (typeof string !== 'string') {
	    // don't escape SafeStrings, since they're already safe
	    if (string && string.toHTML) {
	      return string.toHTML();
	    } else if (string == null) {
	      return '';
	    } else if (!string) {
	      return string + '';
	    }

	    // Force a string conversion as this will be done by the append regardless and
	    // the regex test will do this transparently behind the scenes, causing issues if
	    // an object's to string has escaped characters in it.
	    string = '' + string;
	  }

	  if (!possible.test(string)) {
	    return string;
	  }
	  return string.replace(badChars, escapeChar);
	}

	function isEmpty(value) {
	  if (!value && value !== 0) {
	    return true;
	  } else if (isArray(value) && value.length === 0) {
	    return true;
	  } else {
	    return false;
	  }
	}

	function createFrame(object) {
	  var frame = extend({}, object);
	  frame._parent = object;
	  return frame;
	}

	function blockParams(params, ids) {
	  params.path = ids;
	  return params;
	}

	function appendContextPath(contextPath, id) {
	  return (contextPath ? contextPath + '.' : '') + id;
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQ3ZCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRTdCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFtQjtBQUMzQyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQUlNLFVBQVUsR0FKaEIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQU8sT0FBTyxLQUFLLEtBQUssVUFBVSxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssbUJBQW1CLENBQUM7R0FDcEYsQ0FBQztDQUNIO1FBQ08sVUFBVSxHQUFWLFVBQVU7Ozs7O0FBSVgsSUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sSUFBSSxVQUFTLEtBQUssRUFBRTtBQUN0RCxTQUFPLEFBQUMsS0FBSyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsR0FBSSxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUFHLEtBQUssQ0FBQztDQUNqRyxDQUFDOzs7OztBQUdLLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUdNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUFFLFdBQU8sTUFBTSxDQUFDO0dBQUU7QUFDOUMsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gICAgICBwb3NzaWJsZSA9IC9bJjw+XCInYD1dLztcblxuZnVuY3Rpb24gZXNjYXBlQ2hhcihjaHIpIHtcbiAgcmV0dXJuIGVzY2FwZVtjaHJdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKG9iai8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfTtcbn1cbmV4cG9ydCB7aXNGdW5jdGlvbn07XG4vKiBlc2xpbnQtZW5hYmxlIGZ1bmMtc3R5bGUgKi9cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmV4cG9ydCBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpID8gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEFycmF5XScgOiBmYWxzZTtcbn07XG5cbi8vIE9sZGVyIElFIHZlcnNpb25zIGRvIG5vdCBkaXJlY3RseSBzdXBwb3J0IGluZGV4T2Ygc28gd2UgbXVzdCBpbXBsZW1lbnQgb3VyIG93biwgc2FkbHkuXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhPZihhcnJheSwgdmFsdWUpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKGFycmF5W2ldID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIGk7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkgeyByZXR1cm4gc3RyaW5nOyB9XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShiYWRDaGFycywgZXNjYXBlQ2hhcik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7XG4gIGlmICghdmFsdWUgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZyYW1lKG9iamVjdCkge1xuICBsZXQgZnJhbWUgPSBleHRlbmQoe30sIG9iamVjdCk7XG4gIGZyYW1lLl9wYXJlbnQgPSBvYmplY3Q7XG4gIHJldHVybiBmcmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJsb2NrUGFyYW1zKHBhcmFtcywgaWRzKSB7XG4gIHBhcmFtcy5wYXRoID0gaWRzO1xuICByZXR1cm4gcGFyYW1zO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kQ29udGV4dFBhdGgoY29udGV4dFBhdGgsIGlkKSB7XG4gIHJldHVybiAoY29udGV4dFBhdGggPyBjb250ZXh0UGF0aCArICcuJyA6ICcnKSArIGlkO1xufVxuIl19


/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

	function Exception(message, node) {
	  var loc = node && node.loc,
	      line = undefined,
	      column = undefined;
	  if (loc) {
	    line = loc.start.line;
	    column = loc.start.column;

	    message += ' - ' + line + ':' + column;
	  }

	  var tmp = Error.prototype.constructor.call(this, message);

	  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
	  for (var idx = 0; idx < errorProps.length; idx++) {
	    this[errorProps[idx]] = tmp[errorProps[idx]];
	  }

	  /* istanbul ignore else */
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, Exception);
	  }

	  if (loc) {
	    this.lineNumber = line;
	    this.column = column;
	  }
	}

	Exception.prototype = new Error();

	exports['default'] = Exception;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsSUFBTSxVQUFVLEdBQUcsQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQzs7QUFFbkcsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDdEIsSUFBSSxZQUFBO01BQ0osTUFBTSxZQUFBLENBQUM7QUFDWCxNQUFJLEdBQUcsRUFBRTtBQUNQLFFBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztBQUN0QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7O0FBRTFCLFdBQU8sSUFBSSxLQUFLLEdBQUcsSUFBSSxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUM7R0FDeEM7O0FBRUQsTUFBSSxHQUFHLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQzs7O0FBRzFELE9BQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFO0FBQ2hELFFBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7R0FDOUM7OztBQUdELE1BQUksS0FBSyxDQUFDLGlCQUFpQixFQUFFO0FBQzNCLFNBQUssQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7R0FDMUM7O0FBRUQsTUFBSSxHQUFHLEVBQUU7QUFDUCxRQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztBQUN2QixRQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztHQUN0QjtDQUNGOztBQUVELFNBQVMsQ0FBQyxTQUFTLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQzs7cUJBRW5CLFNBQVMiLCJmaWxlIjoiZXhjZXB0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBlcnJvclByb3BzID0gWydkZXNjcmlwdGlvbicsICdmaWxlTmFtZScsICdsaW5lTnVtYmVyJywgJ21lc3NhZ2UnLCAnbmFtZScsICdudW1iZXInLCAnc3RhY2snXTtcblxuZnVuY3Rpb24gRXhjZXB0aW9uKG1lc3NhZ2UsIG5vZGUpIHtcbiAgbGV0IGxvYyA9IG5vZGUgJiYgbm9kZS5sb2MsXG4gICAgICBsaW5lLFxuICAgICAgY29sdW1uO1xuICBpZiAobG9jKSB7XG4gICAgbGluZSA9IGxvYy5zdGFydC5saW5lO1xuICAgIGNvbHVtbiA9IGxvYy5zdGFydC5jb2x1bW47XG5cbiAgICBtZXNzYWdlICs9ICcgLSAnICsgbGluZSArICc6JyArIGNvbHVtbjtcbiAgfVxuXG4gIGxldCB0bXAgPSBFcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3IuY2FsbCh0aGlzLCBtZXNzYWdlKTtcblxuICAvLyBVbmZvcnR1bmF0ZWx5IGVycm9ycyBhcmUgbm90IGVudW1lcmFibGUgaW4gQ2hyb21lIChhdCBsZWFzdCksIHNvIGBmb3IgcHJvcCBpbiB0bXBgIGRvZXNuJ3Qgd29yay5cbiAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgZXJyb3JQcm9wcy5sZW5ndGg7IGlkeCsrKSB7XG4gICAgdGhpc1tlcnJvclByb3BzW2lkeF1dID0gdG1wW2Vycm9yUHJvcHNbaWR4XV07XG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBFeGNlcHRpb24pO1xuICB9XG5cbiAgaWYgKGxvYykge1xuICAgIHRoaXMubGluZU51bWJlciA9IGxpbmU7XG4gICAgdGhpcy5jb2x1bW4gPSBjb2x1bW47XG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb247XG4iXX0=


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.registerDefaultHelpers = registerDefaultHelpers;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _helpersBlockHelperMissing = __webpack_require__(19);

	var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

	var _helpersEach = __webpack_require__(20);

	var _helpersEach2 = _interopRequireDefault(_helpersEach);

	var _helpersHelperMissing = __webpack_require__(21);

	var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

	var _helpersIf = __webpack_require__(22);

	var _helpersIf2 = _interopRequireDefault(_helpersIf);

	var _helpersLog = __webpack_require__(23);

	var _helpersLog2 = _interopRequireDefault(_helpersLog);

	var _helpersLookup = __webpack_require__(24);

	var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

	var _helpersWith = __webpack_require__(25);

	var _helpersWith2 = _interopRequireDefault(_helpersWith);

	function registerDefaultHelpers(instance) {
	  _helpersBlockHelperMissing2['default'](instance);
	  _helpersEach2['default'](instance);
	  _helpersHelperMissing2['default'](instance);
	  _helpersIf2['default'](instance);
	  _helpersLog2['default'](instance);
	  _helpersLookup2['default'](instance);
	  _helpersWith2['default'](instance);
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7eUNBQXVDLGdDQUFnQzs7OzsyQkFDOUMsZ0JBQWdCOzs7O29DQUNQLDBCQUEwQjs7Ozt5QkFDckMsY0FBYzs7OzswQkFDYixlQUFlOzs7OzZCQUNaLGtCQUFrQjs7OzsyQkFDcEIsZ0JBQWdCOzs7O0FBRWxDLFNBQVMsc0JBQXNCLENBQUMsUUFBUSxFQUFFO0FBQy9DLHlDQUEyQixRQUFRLENBQUMsQ0FBQztBQUNyQywyQkFBYSxRQUFRLENBQUMsQ0FBQztBQUN2QixvQ0FBc0IsUUFBUSxDQUFDLENBQUM7QUFDaEMseUJBQVcsUUFBUSxDQUFDLENBQUM7QUFDckIsMEJBQVksUUFBUSxDQUFDLENBQUM7QUFDdEIsNkJBQWUsUUFBUSxDQUFDLENBQUM7QUFDekIsMkJBQWEsUUFBUSxDQUFDLENBQUM7Q0FDeEIiLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZWdpc3RlckJsb2NrSGVscGVyTWlzc2luZyBmcm9tICcuL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcnO1xuaW1wb3J0IHJlZ2lzdGVyRWFjaCBmcm9tICcuL2hlbHBlcnMvZWFjaCc7XG5pbXBvcnQgcmVnaXN0ZXJIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJJZiBmcm9tICcuL2hlbHBlcnMvaWYnO1xuaW1wb3J0IHJlZ2lzdGVyTG9nIGZyb20gJy4vaGVscGVycy9sb2cnO1xuaW1wb3J0IHJlZ2lzdGVyTG9va3VwIGZyb20gJy4vaGVscGVycy9sb29rdXAnO1xuaW1wb3J0IHJlZ2lzdGVyV2l0aCBmcm9tICcuL2hlbHBlcnMvd2l0aCc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlckRlZmF1bHRIZWxwZXJzKGluc3RhbmNlKSB7XG4gIHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJFYWNoKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJIZWxwZXJNaXNzaW5nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJJZihpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyTG9nKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb29rdXAoaW5zdGFuY2UpO1xuICByZWdpc3RlcldpdGgoaW5zdGFuY2UpO1xufVxuIl19


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	exports['default'] = function (instance) {
	  instance.registerHelper('blockHelperMissing', function (context, options) {
	    var inverse = options.inverse,
	        fn = options.fn;

	    if (context === true) {
	      return fn(this);
	    } else if (context === false || context == null) {
	      return inverse(this);
	    } else if (_utils.isArray(context)) {
	      if (context.length > 0) {
	        if (options.ids) {
	          options.ids = [options.name];
	        }

	        return instance.helpers.each(context, options);
	      } else {
	        return inverse(this);
	      }
	    } else {
	      if (options.data && options.ids) {
	        var data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
	        options = { data: data };
	      }

	      return fn(context, options);
	    }
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBc0QsVUFBVTs7cUJBRWpELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQ3pCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVwQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzdFLGVBQU8sR0FBRyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQztPQUN4Qjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXBwZW5kQ29udGV4dFBhdGgsIGNyZWF0ZUZyYW1lLCBpc0FycmF5fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdibG9ja0hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgbGV0IGludmVyc2UgPSBvcHRpb25zLmludmVyc2UsXG4gICAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCwgb3B0aW9ucy5uYW1lKTtcbiAgICAgICAgb3B0aW9ucyA9IHtkYXRhOiBkYXRhfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _utils = __webpack_require__(16);

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('each', function (context, options) {
	    if (!options) {
	      throw new _exception2['default']('Must pass iterator to #each');
	    }

	    var fn = options.fn,
	        inverse = options.inverse,
	        i = 0,
	        ret = '',
	        data = undefined,
	        contextPath = undefined;

	    if (options.data && options.ids) {
	      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
	    }

	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    if (options.data) {
	      data = _utils.createFrame(options.data);
	    }

	    function execIteration(field, index, last) {
	      if (data) {
	        data.key = field;
	        data.index = index;
	        data.first = index === 0;
	        data.last = !!last;

	        if (contextPath) {
	          data.contextPath = contextPath + field;
	        }
	      }

	      ret = ret + fn(context[field], {
	        data: data,
	        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
	      });
	    }

	    if (context && typeof context === 'object') {
	      if (_utils.isArray(context)) {
	        for (var j = context.length; i < j; i++) {
	          if (i in context) {
	            execIteration(i, i, i === context.length - 1);
	          }
	        }
	      } else {
	        var priorKey = undefined;

	        for (var key in context) {
	          if (context.hasOwnProperty(key)) {
	            // We're running the iterations one step out of sync so we can detect
	            // the last iteration without have to scan the object twice and create
	            // an itermediate keys array.
	            if (priorKey !== undefined) {
	              execIteration(priorKey, i - 1);
	            }
	            priorKey = key;
	            i++;
	          }
	        }
	        if (priorKey !== undefined) {
	          execIteration(priorKey, i - 1, true);
	        }
	      }
	    }

	    if (i === 0) {
	      ret = inverse(this);
	    }

	    return ret;
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQUErRSxVQUFVOzt5QkFDbkUsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3pELFFBQUksQ0FBQyxPQUFPLEVBQUU7QUFDWixZQUFNLDJCQUFjLDZCQUE2QixDQUFDLENBQUM7S0FDcEQ7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUU7UUFDZixPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU87UUFDekIsQ0FBQyxHQUFHLENBQUM7UUFDTCxHQUFHLEdBQUcsRUFBRTtRQUNSLElBQUksWUFBQTtRQUNKLFdBQVcsWUFBQSxDQUFDOztBQUVoQixRQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixpQkFBVyxHQUFHLHlCQUFrQixPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0tBQ2pGOztBQUVELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFBRSxhQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUFFOztBQUUxRCxRQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7QUFDaEIsVUFBSSxHQUFHLG1CQUFZLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNsQzs7QUFFRCxhQUFTLGFBQWEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtBQUN6QyxVQUFJLElBQUksRUFBRTtBQUNSLFlBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBQ2pCLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ25CLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxLQUFLLENBQUMsQ0FBQztBQUN6QixZQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7O0FBRW5CLFlBQUksV0FBVyxFQUFFO0FBQ2YsY0FBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQ3hDO09BQ0Y7O0FBRUQsU0FBRyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQzdCLFlBQUksRUFBRSxJQUFJO0FBQ1YsbUJBQVcsRUFBRSxtQkFBWSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7T0FDL0UsQ0FBQyxDQUFDO0tBQ0o7O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNO0FBQ0wsWUFBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixhQUFLLElBQUksR0FBRyxJQUFJLE9BQU8sRUFBRTtBQUN2QixjQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7Ozs7QUFJL0IsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0w7U0FDRjtBQUNELFlBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQix1QkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3RDO09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YXBwZW5kQ29udGV4dFBhdGgsIGJsb2NrUGFyYW1zLCBjcmVhdGVGcmFtZSwgaXNBcnJheSwgaXNGdW5jdGlvbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICAgIGludmVyc2UgPSBvcHRpb25zLmludmVyc2UsXG4gICAgICAgIGkgPSAwLFxuICAgICAgICByZXQgPSAnJyxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgY29udGV4dFBhdGg7XG5cbiAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICBjb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCwgb3B0aW9ucy5pZHNbMF0pICsgJy4nO1xuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7IGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7IH1cblxuICAgIGlmIChvcHRpb25zLmRhdGEpIHtcbiAgICAgIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGV4ZWNJdGVyYXRpb24oZmllbGQsIGluZGV4LCBsYXN0KSB7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBkYXRhLmtleSA9IGZpZWxkO1xuICAgICAgICBkYXRhLmluZGV4ID0gaW5kZXg7XG4gICAgICAgIGRhdGEuZmlyc3QgPSBpbmRleCA9PT0gMDtcbiAgICAgICAgZGF0YS5sYXN0ID0gISFsYXN0O1xuXG4gICAgICAgIGlmIChjb250ZXh0UGF0aCkge1xuICAgICAgICAgIGRhdGEuY29udGV4dFBhdGggPSBjb250ZXh0UGF0aCArIGZpZWxkO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldCA9IHJldCArIGZuKGNvbnRleHRbZmllbGRdLCB7XG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhbY29udGV4dFtmaWVsZF0sIGZpZWxkXSwgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdKVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgICBmb3IgKGxldCBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBpZiAoaSBpbiBjb250ZXh0KSB7XG4gICAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgcHJpb3JLZXk7XG5cbiAgICAgICAgZm9yIChsZXQga2V5IGluIGNvbnRleHQpIHtcbiAgICAgICAgICBpZiAoY29udGV4dC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAvLyBXZSdyZSBydW5uaW5nIHRoZSBpdGVyYXRpb25zIG9uZSBzdGVwIG91dCBvZiBzeW5jIHNvIHdlIGNhbiBkZXRlY3RcbiAgICAgICAgICAgIC8vIHRoZSBsYXN0IGl0ZXJhdGlvbiB3aXRob3V0IGhhdmUgdG8gc2NhbiB0aGUgb2JqZWN0IHR3aWNlIGFuZCBjcmVhdGVcbiAgICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgICBpZiAocHJpb3JLZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmlvcktleSA9IGtleTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	exports['default'] = function (instance) {
	  instance.registerHelper('helperMissing', function () /* [args, ]options */{
	    if (arguments.length === 1) {
	      // A missing field in a {{foo}} construct.
	      return undefined;
	    } else {
	      // Someone is actually trying to call something, blow up.
	      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
	    }
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFBYyxtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDdkY7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ01pc3NpbmcgaGVscGVyOiBcIicgKyBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdLm5hbWUgKyAnXCInKTtcbiAgICB9XG4gIH0pO1xufVxuIl19


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	exports['default'] = function (instance) {
	  instance.registerHelper('if', function (conditional, options) {
	    if (_utils.isFunction(conditional)) {
	      conditional = conditional.call(this);
	    }

	    // Default behavior is to render the positive path if the value is truthy and not empty.
	    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
	    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
	    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
	      return options.inverse(this);
	    } else {
	      return options.fn(this);
	    }
	  });

	  instance.registerHelper('unless', function (conditional, options) {
	    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBa0MsVUFBVTs7cUJBRTdCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLGtCQUFXLFdBQVcsQ0FBQyxFQUFFO0FBQUUsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQUU7Ozs7O0FBS3RFLFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFdBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxFQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQztHQUN2SCxDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJpZi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNFbXB0eSwgaXNGdW5jdGlvbn0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignaWYnLCBmdW5jdGlvbihjb25kaXRpb25hbCwgb3B0aW9ucykge1xuICAgIGlmIChpc0Z1bmN0aW9uKGNvbmRpdGlvbmFsKSkgeyBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7IH1cblxuICAgIC8vIERlZmF1bHQgYmVoYXZpb3IgaXMgdG8gcmVuZGVyIHRoZSBwb3NpdGl2ZSBwYXRoIGlmIHRoZSB2YWx1ZSBpcyB0cnV0aHkgYW5kIG5vdCBlbXB0eS5cbiAgICAvLyBUaGUgYGluY2x1ZGVaZXJvYCBvcHRpb24gbWF5IGJlIHNldCB0byB0cmVhdCB0aGUgY29uZHRpb25hbCBhcyBwdXJlbHkgbm90IGVtcHR5IGJhc2VkIG9uIHRoZVxuICAgIC8vIGJlaGF2aW9yIG9mIGlzRW1wdHkuIEVmZmVjdGl2ZWx5IHRoaXMgZGV0ZXJtaW5lcyBpZiAwIGlzIGhhbmRsZWQgYnkgdGhlIHBvc2l0aXZlIHBhdGggb3IgbmVnYXRpdmUuXG4gICAgaWYgKCghb3B0aW9ucy5oYXNoLmluY2x1ZGVaZXJvICYmICFjb25kaXRpb25hbCkgfHwgaXNFbXB0eShjb25kaXRpb25hbCkpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmZuKHRoaXMpO1xuICAgIH1cbiAgfSk7XG5cbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ3VubGVzcycsIGZ1bmN0aW9uKGNvbmRpdGlvbmFsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnNbJ2lmJ10uY2FsbCh0aGlzLCBjb25kaXRpb25hbCwge2ZuOiBvcHRpb25zLmludmVyc2UsIGludmVyc2U6IG9wdGlvbnMuZm4sIGhhc2g6IG9wdGlvbnMuaGFzaH0pO1xuICB9KTtcbn1cbiJdfQ==


/***/ },
/* 23 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('log', function () /* message, options */{
	    var args = [undefined],
	        options = arguments[arguments.length - 1];
	    for (var i = 0; i < arguments.length - 1; i++) {
	      args.push(arguments[i]);
	    }

	    var level = 1;
	    if (options.hash.level != null) {
	      level = options.hash.level;
	    } else if (options.data && options.data.level != null) {
	      level = options.data.level;
	    }
	    args[0] = level;

	    instance.log.apply(instance, args);
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ2xCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM5QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVMsSUFBSSxDQUFDLENBQUM7R0FDeEIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgICBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgIGFyZ3MucHVzaChhcmd1bWVudHNbaV0pO1xuICAgIH1cblxuICAgIGxldCBsZXZlbCA9IDE7XG4gICAgaWYgKG9wdGlvbnMuaGFzaC5sZXZlbCAhPSBudWxsKSB7XG4gICAgICBsZXZlbCA9IG9wdGlvbnMuaGFzaC5sZXZlbDtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmRhdGEubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmRhdGEubGV2ZWw7XG4gICAgfVxuICAgIGFyZ3NbMF0gPSBsZXZlbDtcblxuICAgIGluc3RhbmNlLmxvZyguLi4gYXJncyk7XG4gIH0pO1xufVxuIl19


/***/ },
/* 24 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	exports['default'] = function (instance) {
	  instance.registerHelper('lookup', function (obj, field) {
	    return obj && obj[field];
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQ3JELFdBQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztHQUMxQixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJsb29rdXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignbG9va3VwJywgZnVuY3Rpb24ob2JqLCBmaWVsZCkge1xuICAgIHJldHVybiBvYmogJiYgb2JqW2ZpZWxkXTtcbiAgfSk7XG59XG4iXX0=


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	exports['default'] = function (instance) {
	  instance.registerHelper('with', function (context, options) {
	    if (_utils.isFunction(context)) {
	      context = context.call(this);
	    }

	    var fn = options.fn;

	    if (!_utils.isEmpty(context)) {
	      var data = options.data;
	      if (options.data && options.ids) {
	        data = _utils.createFrame(options.data);
	        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
	      }

	      return fn(context, {
	        data: data,
	        blockParams: _utils.blockParams([context], [data && data.contextPath])
	      });
	    } else {
	      return options.inverse(this);
	    }
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUErRSxVQUFVOztxQkFFMUUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3pELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFBRSxhQUFPLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUFFOztBQUUxRCxRQUFJLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVwQixRQUFJLENBQUMsZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNyQixVQUFJLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO0FBQ3hCLFVBQUksT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO0FBQy9CLFlBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO09BQ2hGOztBQUVELGFBQU8sRUFBRSxDQUFDLE9BQU8sRUFBRTtBQUNqQixZQUFJLEVBQUUsSUFBSTtBQUNWLG1CQUFXLEVBQUUsbUJBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7T0FDaEUsQ0FBQyxDQUFDO0tBQ0osTUFBTTtBQUNMLGFBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM5QjtHQUNGLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6IndpdGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FwcGVuZENvbnRleHRQYXRoLCBibG9ja1BhcmFtcywgY3JlYXRlRnJhbWUsIGlzRW1wdHksIGlzRnVuY3Rpb259IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ3dpdGgnLCBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHsgY29udGV4dCA9IGNvbnRleHQuY2FsbCh0aGlzKTsgfVxuXG4gICAgbGV0IGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmICghaXNFbXB0eShjb250ZXh0KSkge1xuICAgICAgbGV0IGRhdGEgPSBvcHRpb25zLmRhdGE7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGRhdGEgPSBjcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmbihjb250ZXh0LCB7XG4gICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhbY29udGV4dF0sIFtkYXRhICYmIGRhdGEuY29udGV4dFBhdGhdKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmludmVyc2UodGhpcyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.registerDefaultDecorators = registerDefaultDecorators;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _decoratorsInline = __webpack_require__(27);

	var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

	function registerDefaultDecorators(instance) {
	  _decoratorsInline2['default'](instance);
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG5cbiJdfQ==


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	exports['default'] = function (instance) {
	  instance.registerDecorator('inline', function (fn, props, container, options) {
	    var ret = fn;
	    if (!props.partials) {
	      props.partials = {};
	      ret = function (context, options) {
	        // Create a new partials stack frame prior to exec.
	        var original = container.partials;
	        container.partials = _utils.extend({}, original, props.partials);
	        var ret = fn(context, options);
	        container.partials = original;
	        return ret;
	      };
	    }

	    props.partials[options.args[0]] = options.fn;

	    return ret;
	  });
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXFCLFVBQVU7O3FCQUVoQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZXh0ZW5kfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVyRGVjb3JhdG9yKCdpbmxpbmUnLCBmdW5jdGlvbihmbiwgcHJvcHMsIGNvbnRhaW5lciwgb3B0aW9ucykge1xuICAgIGxldCByZXQgPSBmbjtcbiAgICBpZiAoIXByb3BzLnBhcnRpYWxzKSB7XG4gICAgICBwcm9wcy5wYXJ0aWFscyA9IHt9O1xuICAgICAgcmV0ID0gZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgcGFydGlhbHMgc3RhY2sgZnJhbWUgcHJpb3IgdG8gZXhlYy5cbiAgICAgICAgbGV0IG9yaWdpbmFsID0gY29udGFpbmVyLnBhcnRpYWxzO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBleHRlbmQoe30sIG9yaWdpbmFsLCBwcm9wcy5wYXJ0aWFscyk7XG4gICAgICAgIGxldCByZXQgPSBmbihjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgICAgY29udGFpbmVyLnBhcnRpYWxzID0gb3JpZ2luYWw7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHByb3BzLnBhcnRpYWxzW29wdGlvbnMuYXJnc1swXV0gPSBvcHRpb25zLmZuO1xuXG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59XG4iXX0=


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	var logger = {
	  methodMap: ['debug', 'info', 'warn', 'error'],
	  level: 'info',

	  // Maps a given level value to the `methodMap` indexes above.
	  lookupLevel: function lookupLevel(level) {
	    if (typeof level === 'string') {
	      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
	      if (levelMap >= 0) {
	        level = levelMap;
	      } else {
	        level = parseInt(level, 10);
	      }
	    }

	    return level;
	  },

	  // Can be overridden in the host environment
	  log: function log(level) {
	    level = logger.lookupLevel(level);

	    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
	      var method = logger.methodMap[level];
	      if (!console[method]) {
	        // eslint-disable-line no-console
	        method = 'log';
	      }

	      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        message[_key - 1] = arguments[_key];
	      }

	      console[method].apply(console, message); // eslint-disable-line no-console
	    }
	  }
	};

	exports['default'] = logger;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUFzQixTQUFTOztBQUUvQixJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUFJLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7QUFDL0UsVUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyQyxVQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFOztBQUNwQixjQUFNLEdBQUcsS0FBSyxDQUFDO09BQ2hCOzt3Q0FQbUIsT0FBTztBQUFQLGVBQU87OztBQVEzQixhQUFPLENBQUMsTUFBTSxPQUFDLENBQWYsT0FBTyxFQUFZLE9BQU8sQ0FBQyxDQUFDO0tBQzdCO0dBQ0Y7Q0FDRixDQUFDOztxQkFFYSxNQUFNIiwiZmlsZSI6ImxvZ2dlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5kZXhPZn0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWwpIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIGlmICghY29uc29sZVttZXRob2RdKSB7ICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgICAgIG1ldGhvZCA9ICdsb2cnO1xuICAgICAgfVxuICAgICAgY29uc29sZVttZXRob2RdKC4uLm1lc3NhZ2UpOyAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGxvZ2dlcjtcbiJdfQ==


/***/ },
/* 29 */
/***/ function(module, exports) {

	// Build out our basic SafeString type
	'use strict';

	exports.__esModule = true;
	function SafeString(string) {
	  this.string = string;
	}

	SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
	  return '' + this.string;
	};

	exports['default'] = SafeString;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.checkRevision = checkRevision;
	exports.template = template;
	exports.wrapProgram = wrapProgram;
	exports.resolvePartial = resolvePartial;
	exports.invokePartial = invokePartial;
	exports.noop = noop;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	// istanbul ignore next

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	var _utils = __webpack_require__(16);

	var Utils = _interopRequireWildcard(_utils);

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	var _base = __webpack_require__(15);

	function checkRevision(compilerInfo) {
	  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
	      currentRevision = _base.COMPILER_REVISION;

	  if (compilerRevision !== currentRevision) {
	    if (compilerRevision < currentRevision) {
	      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
	          compilerVersions = _base.REVISION_CHANGES[compilerRevision];
	      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
	    } else {
	      // Use the embedded version info since the runtime doesn't know about this revision yet
	      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
	    }
	  }
	}

	function template(templateSpec, env) {
	  /* istanbul ignore next */
	  if (!env) {
	    throw new _exception2['default']('No environment passed to template');
	  }
	  if (!templateSpec || !templateSpec.main) {
	    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
	  }

	  templateSpec.main.decorator = templateSpec.main_d;

	  // Note: Using env.VM references rather than local var references throughout this section to allow
	  // for external users to override these as psuedo-supported APIs.
	  env.VM.checkRevision(templateSpec.compiler);

	  function invokePartialWrapper(partial, context, options) {
	    if (options.hash) {
	      context = Utils.extend({}, context, options.hash);
	      if (options.ids) {
	        options.ids[0] = true;
	      }
	    }

	    partial = env.VM.resolvePartial.call(this, partial, context, options);
	    var result = env.VM.invokePartial.call(this, partial, context, options);

	    if (result == null && env.compile) {
	      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
	      result = options.partials[options.name](context, options);
	    }
	    if (result != null) {
	      if (options.indent) {
	        var lines = result.split('\n');
	        for (var i = 0, l = lines.length; i < l; i++) {
	          if (!lines[i] && i + 1 === l) {
	            break;
	          }

	          lines[i] = options.indent + lines[i];
	        }
	        result = lines.join('\n');
	      }
	      return result;
	    } else {
	      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
	    }
	  }

	  // Just add water
	  var container = {
	    strict: function strict(obj, name) {
	      if (!(name in obj)) {
	        throw new _exception2['default']('"' + name + '" not defined in ' + obj);
	      }
	      return obj[name];
	    },
	    lookup: function lookup(depths, name) {
	      var len = depths.length;
	      for (var i = 0; i < len; i++) {
	        if (depths[i] && depths[i][name] != null) {
	          return depths[i][name];
	        }
	      }
	    },
	    lambda: function lambda(current, context) {
	      return typeof current === 'function' ? current.call(context) : current;
	    },

	    escapeExpression: Utils.escapeExpression,
	    invokePartial: invokePartialWrapper,

	    fn: function fn(i) {
	      var ret = templateSpec[i];
	      ret.decorator = templateSpec[i + '_d'];
	      return ret;
	    },

	    programs: [],
	    program: function program(i, data, declaredBlockParams, blockParams, depths) {
	      var programWrapper = this.programs[i],
	          fn = this.fn(i);
	      if (data || depths || blockParams || declaredBlockParams) {
	        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
	      } else if (!programWrapper) {
	        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
	      }
	      return programWrapper;
	    },

	    data: function data(value, depth) {
	      while (value && depth--) {
	        value = value._parent;
	      }
	      return value;
	    },
	    merge: function merge(param, common) {
	      var obj = param || common;

	      if (param && common && param !== common) {
	        obj = Utils.extend({}, common, param);
	      }

	      return obj;
	    },

	    noop: env.VM.noop,
	    compilerInfo: templateSpec.compiler
	  };

	  function ret(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var data = options.data;

	    ret._setup(options);
	    if (!options.partial && templateSpec.useData) {
	      data = initData(context, data);
	    }
	    var depths = undefined,
	        blockParams = templateSpec.useBlockParams ? [] : undefined;
	    if (templateSpec.useDepths) {
	      if (options.depths) {
	        depths = context !== options.depths[0] ? [context].concat(options.depths) : options.depths;
	      } else {
	        depths = [context];
	      }
	    }

	    function main(context /*, options*/) {
	      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
	    }
	    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
	    return main(context, options);
	  }
	  ret.isTop = true;

	  ret._setup = function (options) {
	    if (!options.partial) {
	      container.helpers = container.merge(options.helpers, env.helpers);

	      if (templateSpec.usePartial) {
	        container.partials = container.merge(options.partials, env.partials);
	      }
	      if (templateSpec.usePartial || templateSpec.useDecorators) {
	        container.decorators = container.merge(options.decorators, env.decorators);
	      }
	    } else {
	      container.helpers = options.helpers;
	      container.partials = options.partials;
	      container.decorators = options.decorators;
	    }
	  };

	  ret._child = function (i, data, blockParams, depths) {
	    if (templateSpec.useBlockParams && !blockParams) {
	      throw new _exception2['default']('must pass block params');
	    }
	    if (templateSpec.useDepths && !depths) {
	      throw new _exception2['default']('must pass parent depths');
	    }

	    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
	  };
	  return ret;
	}

	function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
	  function prog(context) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    var currentDepths = depths;
	    if (depths && context !== depths[0]) {
	      currentDepths = [context].concat(depths);
	    }

	    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
	  }

	  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

	  prog.program = i;
	  prog.depth = depths ? depths.length : 0;
	  prog.blockParams = declaredBlockParams || 0;
	  return prog;
	}

	function resolvePartial(partial, context, options) {
	  if (!partial) {
	    if (options.name === '@partial-block') {
	      partial = options.data['partial-block'];
	    } else {
	      partial = options.partials[options.name];
	    }
	  } else if (!partial.call && !options.name) {
	    // This is a dynamic partial that returned a string
	    options.name = partial;
	    partial = options.partials[partial];
	  }
	  return partial;
	}

	function invokePartial(partial, context, options) {
	  options.partial = true;
	  if (options.ids) {
	    options.data.contextPath = options.ids[0] || options.data.contextPath;
	  }

	  var partialBlock = undefined;
	  if (options.fn && options.fn !== noop) {
	    options.data = _base.createFrame(options.data);
	    partialBlock = options.data['partial-block'] = options.fn;

	    if (partialBlock.partials) {
	      options.partials = Utils.extend({}, options.partials, partialBlock.partials);
	    }
	  }

	  if (partial === undefined && partialBlock) {
	    partial = partialBlock;
	  }

	  if (partial === undefined) {
	    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
	  } else if (partial instanceof Function) {
	    return partial(context, options);
	  }
	}

	function noop() {
	  return '';
	}

	function initData(context, data) {
	  if (!data || !('root' in data)) {
	    data = data ? _base.createFrame(data) : {};
	    data.root = context;
	  }
	  return data;
	}

	function executeDecorators(fn, prog, container, depths, data, blockParams) {
	  if (fn.decorator) {
	    var props = {};
	    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
	    Utils.extend(prog, props);
	  }
	  return prog;
	}
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 31 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/* global window */
	'use strict';

	exports.__esModule = true;

	exports['default'] = function (Handlebars) {
	  /* istanbul ignore next */
	  var root = typeof global !== 'undefined' ? global : window,
	      $Handlebars = root.Handlebars;
	  /* istanbul ignore next */
	  Handlebars.noConflict = function () {
	    if (root.Handlebars === Handlebars) {
	      root.Handlebars = $Handlebars;
	    }
	    return Handlebars;
	  };
	};

	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUNlLFVBQVMsVUFBVSxFQUFFOztBQUVsQyxNQUFJLElBQUksR0FBRyxPQUFPLE1BQU0sS0FBSyxXQUFXLEdBQUcsTUFBTSxHQUFHLE1BQU07TUFDdEQsV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7O0FBRWxDLFlBQVUsQ0FBQyxVQUFVLEdBQUcsWUFBVztBQUNqQyxRQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssVUFBVSxFQUFFO0FBQ2xDLFVBQUksQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDO0tBQy9CO0FBQ0QsV0FBTyxVQUFVLENBQUM7R0FDbkIsQ0FBQztDQUNIIiwiZmlsZSI6Im5vLWNvbmZsaWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIHdpbmRvdyAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oSGFuZGxlYmFycykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBsZXQgcm9vdCA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDogd2luZG93LFxuICAgICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyb290LkhhbmRsZWJhcnMgPT09IEhhbmRsZWJhcnMpIHtcbiAgICAgIHJvb3QuSGFuZGxlYmFycyA9ICRIYW5kbGViYXJzO1xuICAgIH1cbiAgICByZXR1cm4gSGFuZGxlYmFycztcbiAgfTtcbn1cbiJdfQ==

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var AST = {
	  // Public API used to evaluate derived attributes regarding AST nodes
	  helpers: {
	    // a mustache is definitely a helper if:
	    // * it is an eligible helper, and
	    // * it has at least one parameter or hash segment
	    helperExpression: function helperExpression(node) {
	      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);
	    },

	    scopedId: function scopedId(path) {
	      return (/^\.|this\b/.test(path.original)
	      );
	    },

	    // an ID is simple if it only has one part, and that part is not
	    // `..` or `this`.
	    simpleId: function simpleId(path) {
	      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;
	    }
	  }
	};

	// Must be exported as an object rather than the root of the module as the jison lexer
	// must modify the object to operate properly.
	exports['default'] = AST;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJLEdBQUcsR0FBRzs7QUFFUixTQUFPLEVBQUU7Ozs7QUFJUCxvQkFBZ0IsRUFBRSwwQkFBUyxJQUFJLEVBQUU7QUFDL0IsYUFBTyxBQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssZUFBZSxJQUM3QixDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssbUJBQW1CLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxnQkFBZ0IsQ0FBQSxJQUNuRSxDQUFDLEVBQUUsQUFBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFLLElBQUksQ0FBQyxJQUFJLENBQUEsQUFBQyxBQUFDLENBQUM7S0FDaEU7O0FBRUQsWUFBUSxFQUFFLGtCQUFTLElBQUksRUFBRTtBQUN2QixhQUFPLEFBQUMsYUFBWSxDQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQUM7S0FDM0M7Ozs7QUFJRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0tBQzlFO0dBQ0Y7Q0FDRixDQUFDOzs7O3FCQUthLEdBQUciLCJmaWxlIjoiYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEFTVCA9IHtcbiAgLy8gUHVibGljIEFQSSB1c2VkIHRvIGV2YWx1YXRlIGRlcml2ZWQgYXR0cmlidXRlcyByZWdhcmRpbmcgQVNUIG5vZGVzXG4gIGhlbHBlcnM6IHtcbiAgICAvLyBhIG11c3RhY2hlIGlzIGRlZmluaXRlbHkgYSBoZWxwZXIgaWY6XG4gICAgLy8gKiBpdCBpcyBhbiBlbGlnaWJsZSBoZWxwZXIsIGFuZFxuICAgIC8vICogaXQgaGFzIGF0IGxlYXN0IG9uZSBwYXJhbWV0ZXIgb3IgaGFzaCBzZWdtZW50XG4gICAgaGVscGVyRXhwcmVzc2lvbjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgcmV0dXJuIChub2RlLnR5cGUgPT09ICdTdWJFeHByZXNzaW9uJylcbiAgICAgICAgICB8fCAoKG5vZGUudHlwZSA9PT0gJ011c3RhY2hlU3RhdGVtZW50JyB8fCBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcpXG4gICAgICAgICAgICAmJiAhISgobm9kZS5wYXJhbXMgJiYgbm9kZS5wYXJhbXMubGVuZ3RoKSB8fCBub2RlLmhhc2gpKTtcbiAgICB9LFxuXG4gICAgc2NvcGVkSWQ6IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICAgIHJldHVybiAoL15cXC58dGhpc1xcYi8pLnRlc3QocGF0aC5vcmlnaW5hbCk7XG4gICAgfSxcblxuICAgIC8vIGFuIElEIGlzIHNpbXBsZSBpZiBpdCBvbmx5IGhhcyBvbmUgcGFydCwgYW5kIHRoYXQgcGFydCBpcyBub3RcbiAgICAvLyBgLi5gIG9yIGB0aGlzYC5cbiAgICBzaW1wbGVJZDogZnVuY3Rpb24ocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGgucGFydHMubGVuZ3RoID09PSAxICYmICFBU1QuaGVscGVycy5zY29wZWRJZChwYXRoKSAmJiAhcGF0aC5kZXB0aDtcbiAgICB9XG4gIH1cbn07XG5cblxuLy8gTXVzdCBiZSBleHBvcnRlZCBhcyBhbiBvYmplY3QgcmF0aGVyIHRoYW4gdGhlIHJvb3Qgb2YgdGhlIG1vZHVsZSBhcyB0aGUgamlzb24gbGV4ZXJcbi8vIG11c3QgbW9kaWZ5IHRoZSBvYmplY3QgdG8gb3BlcmF0ZSBwcm9wZXJseS5cbmV4cG9ydCBkZWZhdWx0IEFTVDtcbiJdfQ==


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.parse = parse;
	// istanbul ignore next

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _parser = __webpack_require__(34);

	var _parser2 = _interopRequireDefault(_parser);

	var _whitespaceControl = __webpack_require__(35);

	var _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);

	var _helpers = __webpack_require__(37);

	var Helpers = _interopRequireWildcard(_helpers);

	var _utils = __webpack_require__(16);

	exports.parser = _parser2['default'];

	var yy = {};
	_utils.extend(yy, Helpers);

	function parse(input, options) {
	  // Just return if an already-compiled AST was passed in.
	  if (input.type === 'Program') {
	    return input;
	  }

	  _parser2['default'].yy = yy;

	  // Altering the shared object here, but this is ok as parser is a sync operation
	  yy.locInfo = function (locInfo) {
	    return new yy.SourceLocation(options && options.srcName, locInfo);
	  };

	  var strip = new _whitespaceControl2['default'](options);
	  return strip.accept(_parser2['default'].parse(input));
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O3NCQUFtQixVQUFVOzs7O2lDQUNDLHNCQUFzQjs7Ozt1QkFDM0IsV0FBVzs7SUFBeEIsT0FBTzs7cUJBQ0ksVUFBVTs7UUFFeEIsTUFBTTs7QUFFZixJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFDWixjQUFPLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQzs7QUFFYixTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFOztBQUVwQyxNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO0FBQUUsV0FBTyxLQUFLLENBQUM7R0FBRTs7QUFFL0Msc0JBQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7O0FBR2YsSUFBRSxDQUFDLE9BQU8sR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM3QixXQUFPLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNuRSxDQUFDOztBQUVGLE1BQUksS0FBSyxHQUFHLG1DQUFzQixPQUFPLENBQUMsQ0FBQztBQUMzQyxTQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsb0JBQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Q0FDMUMiLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXJzZXIgZnJvbSAnLi9wYXJzZXInO1xuaW1wb3J0IFdoaXRlc3BhY2VDb250cm9sIGZyb20gJy4vd2hpdGVzcGFjZS1jb250cm9sJztcbmltcG9ydCAqIGFzIEhlbHBlcnMgZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IHsgcGFyc2VyIH07XG5cbmxldCB5eSA9IHt9O1xuZXh0ZW5kKHl5LCBIZWxwZXJzKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKGlucHV0LCBvcHRpb25zKSB7XG4gIC8vIEp1c3QgcmV0dXJuIGlmIGFuIGFscmVhZHktY29tcGlsZWQgQVNUIHdhcyBwYXNzZWQgaW4uXG4gIGlmIChpbnB1dC50eXBlID09PSAnUHJvZ3JhbScpIHsgcmV0dXJuIGlucHV0OyB9XG5cbiAgcGFyc2VyLnl5ID0geXk7XG5cbiAgLy8gQWx0ZXJpbmcgdGhlIHNoYXJlZCBvYmplY3QgaGVyZSwgYnV0IHRoaXMgaXMgb2sgYXMgcGFyc2VyIGlzIGEgc3luYyBvcGVyYXRpb25cbiAgeXkubG9jSW5mbyA9IGZ1bmN0aW9uKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICBsZXQgc3RyaXAgPSBuZXcgV2hpdGVzcGFjZUNvbnRyb2wob3B0aW9ucyk7XG4gIHJldHVybiBzdHJpcC5hY2NlcHQocGFyc2VyLnBhcnNlKGlucHV0KSk7XG59XG4iXX0=


/***/ },
/* 34 */
/***/ function(module, exports) {

	/* istanbul ignore next */
	/* Jison generated parser */
	"use strict";

	var handlebars = (function () {
	    var parser = { trace: function trace() {},
	        yy: {},
	        symbols_: { "error": 2, "root": 3, "program": 4, "EOF": 5, "program_repetition0": 6, "statement": 7, "mustache": 8, "block": 9, "rawBlock": 10, "partial": 11, "partialBlock": 12, "content": 13, "COMMENT": 14, "CONTENT": 15, "openRawBlock": 16, "rawBlock_repetition_plus0": 17, "END_RAW_BLOCK": 18, "OPEN_RAW_BLOCK": 19, "helperName": 20, "openRawBlock_repetition0": 21, "openRawBlock_option0": 22, "CLOSE_RAW_BLOCK": 23, "openBlock": 24, "block_option0": 25, "closeBlock": 26, "openInverse": 27, "block_option1": 28, "OPEN_BLOCK": 29, "openBlock_repetition0": 30, "openBlock_option0": 31, "openBlock_option1": 32, "CLOSE": 33, "OPEN_INVERSE": 34, "openInverse_repetition0": 35, "openInverse_option0": 36, "openInverse_option1": 37, "openInverseChain": 38, "OPEN_INVERSE_CHAIN": 39, "openInverseChain_repetition0": 40, "openInverseChain_option0": 41, "openInverseChain_option1": 42, "inverseAndProgram": 43, "INVERSE": 44, "inverseChain": 45, "inverseChain_option0": 46, "OPEN_ENDBLOCK": 47, "OPEN": 48, "mustache_repetition0": 49, "mustache_option0": 50, "OPEN_UNESCAPED": 51, "mustache_repetition1": 52, "mustache_option1": 53, "CLOSE_UNESCAPED": 54, "OPEN_PARTIAL": 55, "partialName": 56, "partial_repetition0": 57, "partial_option0": 58, "openPartialBlock": 59, "OPEN_PARTIAL_BLOCK": 60, "openPartialBlock_repetition0": 61, "openPartialBlock_option0": 62, "param": 63, "sexpr": 64, "OPEN_SEXPR": 65, "sexpr_repetition0": 66, "sexpr_option0": 67, "CLOSE_SEXPR": 68, "hash": 69, "hash_repetition_plus0": 70, "hashSegment": 71, "ID": 72, "EQUALS": 73, "blockParams": 74, "OPEN_BLOCK_PARAMS": 75, "blockParams_repetition_plus0": 76, "CLOSE_BLOCK_PARAMS": 77, "path": 78, "dataName": 79, "STRING": 80, "NUMBER": 81, "BOOLEAN": 82, "UNDEFINED": 83, "NULL": 84, "DATA": 85, "pathSegments": 86, "SEP": 87, "$accept": 0, "$end": 1 },
	        terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" },
	        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
	        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$
	        /**/) {

	            var $0 = $$.length - 1;
	            switch (yystate) {
	                case 1:
	                    return $$[$0 - 1];
	                    break;
	                case 2:
	                    this.$ = yy.prepareProgram($$[$0]);
	                    break;
	                case 3:
	                    this.$ = $$[$0];
	                    break;
	                case 4:
	                    this.$ = $$[$0];
	                    break;
	                case 5:
	                    this.$ = $$[$0];
	                    break;
	                case 6:
	                    this.$ = $$[$0];
	                    break;
	                case 7:
	                    this.$ = $$[$0];
	                    break;
	                case 8:
	                    this.$ = $$[$0];
	                    break;
	                case 9:
	                    this.$ = {
	                        type: 'CommentStatement',
	                        value: yy.stripComment($$[$0]),
	                        strip: yy.stripFlags($$[$0], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 10:
	                    this.$ = {
	                        type: 'ContentStatement',
	                        original: $$[$0],
	                        value: $$[$0],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 11:
	                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 12:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
	                    break;
	                case 13:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
	                    break;
	                case 14:
	                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
	                    break;
	                case 15:
	                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 16:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 17:
	                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
	                    break;
	                case 18:
	                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
	                    break;
	                case 19:
	                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
	                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
	                    program.chained = true;

	                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

	                    break;
	                case 20:
	                    this.$ = $$[$0];
	                    break;
	                case 21:
	                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
	                    break;
	                case 22:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 23:
	                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
	                    break;
	                case 24:
	                    this.$ = {
	                        type: 'PartialStatement',
	                        name: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        indent: '',
	                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 25:
	                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
	                    break;
	                case 26:
	                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
	                    break;
	                case 27:
	                    this.$ = $$[$0];
	                    break;
	                case 28:
	                    this.$ = $$[$0];
	                    break;
	                case 29:
	                    this.$ = {
	                        type: 'SubExpression',
	                        path: $$[$0 - 3],
	                        params: $$[$0 - 2],
	                        hash: $$[$0 - 1],
	                        loc: yy.locInfo(this._$)
	                    };

	                    break;
	                case 30:
	                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 31:
	                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 32:
	                    this.$ = yy.id($$[$0 - 1]);
	                    break;
	                case 33:
	                    this.$ = $$[$0];
	                    break;
	                case 34:
	                    this.$ = $$[$0];
	                    break;
	                case 35:
	                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
	                    break;
	                case 36:
	                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
	                    break;
	                case 37:
	                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };
	                    break;
	                case 38:
	                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };
	                    break;
	                case 39:
	                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };
	                    break;
	                case 40:
	                    this.$ = $$[$0];
	                    break;
	                case 41:
	                    this.$ = $$[$0];
	                    break;
	                case 42:
	                    this.$ = yy.preparePath(true, $$[$0], this._$);
	                    break;
	                case 43:
	                    this.$ = yy.preparePath(false, $$[$0], this._$);
	                    break;
	                case 44:
	                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
	                    break;
	                case 45:
	                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
	                    break;
	                case 46:
	                    this.$ = [];
	                    break;
	                case 47:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 48:
	                    this.$ = [$$[$0]];
	                    break;
	                case 49:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 50:
	                    this.$ = [];
	                    break;
	                case 51:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 58:
	                    this.$ = [];
	                    break;
	                case 59:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 64:
	                    this.$ = [];
	                    break;
	                case 65:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 70:
	                    this.$ = [];
	                    break;
	                case 71:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 78:
	                    this.$ = [];
	                    break;
	                case 79:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 82:
	                    this.$ = [];
	                    break;
	                case 83:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 86:
	                    this.$ = [];
	                    break;
	                case 87:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 90:
	                    this.$ = [];
	                    break;
	                case 91:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 94:
	                    this.$ = [];
	                    break;
	                case 95:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 98:
	                    this.$ = [$$[$0]];
	                    break;
	                case 99:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	                case 100:
	                    this.$ = [$$[$0]];
	                    break;
	                case 101:
	                    $$[$0 - 1].push($$[$0]);
	                    break;
	            }
	        },
	        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],
	        defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },
	        parseError: function parseError(str, hash) {
	            throw new Error(str);
	        },
	        parse: function parse(input) {
	            var self = this,
	                stack = [0],
	                vstack = [null],
	                lstack = [],
	                table = this.table,
	                yytext = "",
	                yylineno = 0,
	                yyleng = 0,
	                recovering = 0,
	                TERROR = 2,
	                EOF = 1;
	            this.lexer.setInput(input);
	            this.lexer.yy = this.yy;
	            this.yy.lexer = this.lexer;
	            this.yy.parser = this;
	            if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
	            var yyloc = this.lexer.yylloc;
	            lstack.push(yyloc);
	            var ranges = this.lexer.options && this.lexer.options.ranges;
	            if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
	            function popStack(n) {
	                stack.length = stack.length - 2 * n;
	                vstack.length = vstack.length - n;
	                lstack.length = lstack.length - n;
	            }
	            function lex() {
	                var token;
	                token = self.lexer.lex() || 1;
	                if (typeof token !== "number") {
	                    token = self.symbols_[token] || token;
	                }
	                return token;
	            }
	            var symbol,
	                preErrorSymbol,
	                state,
	                action,
	                a,
	                r,
	                yyval = {},
	                p,
	                len,
	                newState,
	                expected;
	            while (true) {
	                state = stack[stack.length - 1];
	                if (this.defaultActions[state]) {
	                    action = this.defaultActions[state];
	                } else {
	                    if (symbol === null || typeof symbol == "undefined") {
	                        symbol = lex();
	                    }
	                    action = table[state] && table[state][symbol];
	                }
	                if (typeof action === "undefined" || !action.length || !action[0]) {
	                    var errStr = "";
	                    if (!recovering) {
	                        expected = [];
	                        for (p in table[state]) if (this.terminals_[p] && p > 2) {
	                            expected.push("'" + this.terminals_[p] + "'");
	                        }
	                        if (this.lexer.showPosition) {
	                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
	                        } else {
	                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
	                        }
	                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
	                    }
	                }
	                if (action[0] instanceof Array && action.length > 1) {
	                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
	                }
	                switch (action[0]) {
	                    case 1:
	                        stack.push(symbol);
	                        vstack.push(this.lexer.yytext);
	                        lstack.push(this.lexer.yylloc);
	                        stack.push(action[1]);
	                        symbol = null;
	                        if (!preErrorSymbol) {
	                            yyleng = this.lexer.yyleng;
	                            yytext = this.lexer.yytext;
	                            yylineno = this.lexer.yylineno;
	                            yyloc = this.lexer.yylloc;
	                            if (recovering > 0) recovering--;
	                        } else {
	                            symbol = preErrorSymbol;
	                            preErrorSymbol = null;
	                        }
	                        break;
	                    case 2:
	                        len = this.productions_[action[1]][1];
	                        yyval.$ = vstack[vstack.length - len];
	                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
	                        if (ranges) {
	                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
	                        }
	                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
	                        if (typeof r !== "undefined") {
	                            return r;
	                        }
	                        if (len) {
	                            stack = stack.slice(0, -1 * len * 2);
	                            vstack = vstack.slice(0, -1 * len);
	                            lstack = lstack.slice(0, -1 * len);
	                        }
	                        stack.push(this.productions_[action[1]][0]);
	                        vstack.push(yyval.$);
	                        lstack.push(yyval._$);
	                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
	                        stack.push(newState);
	                        break;
	                    case 3:
	                        return true;
	                }
	            }
	            return true;
	        }
	    };
	    /* Jison generated lexer */
	    var lexer = (function () {
	        var lexer = { EOF: 1,
	            parseError: function parseError(str, hash) {
	                if (this.yy.parser) {
	                    this.yy.parser.parseError(str, hash);
	                } else {
	                    throw new Error(str);
	                }
	            },
	            setInput: function setInput(input) {
	                this._input = input;
	                this._more = this._less = this.done = false;
	                this.yylineno = this.yyleng = 0;
	                this.yytext = this.matched = this.match = '';
	                this.conditionStack = ['INITIAL'];
	                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
	                if (this.options.ranges) this.yylloc.range = [0, 0];
	                this.offset = 0;
	                return this;
	            },
	            input: function input() {
	                var ch = this._input[0];
	                this.yytext += ch;
	                this.yyleng++;
	                this.offset++;
	                this.match += ch;
	                this.matched += ch;
	                var lines = ch.match(/(?:\r\n?|\n).*/g);
	                if (lines) {
	                    this.yylineno++;
	                    this.yylloc.last_line++;
	                } else {
	                    this.yylloc.last_column++;
	                }
	                if (this.options.ranges) this.yylloc.range[1]++;

	                this._input = this._input.slice(1);
	                return ch;
	            },
	            unput: function unput(ch) {
	                var len = ch.length;
	                var lines = ch.split(/(?:\r\n?|\n)/g);

	                this._input = ch + this._input;
	                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
	                //this.yyleng -= len;
	                this.offset -= len;
	                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
	                this.match = this.match.substr(0, this.match.length - 1);
	                this.matched = this.matched.substr(0, this.matched.length - 1);

	                if (lines.length - 1) this.yylineno -= lines.length - 1;
	                var r = this.yylloc.range;

	                this.yylloc = { first_line: this.yylloc.first_line,
	                    last_line: this.yylineno + 1,
	                    first_column: this.yylloc.first_column,
	                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
	                };

	                if (this.options.ranges) {
	                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
	                }
	                return this;
	            },
	            more: function more() {
	                this._more = true;
	                return this;
	            },
	            less: function less(n) {
	                this.unput(this.match.slice(n));
	            },
	            pastInput: function pastInput() {
	                var past = this.matched.substr(0, this.matched.length - this.match.length);
	                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
	            },
	            upcomingInput: function upcomingInput() {
	                var next = this.match;
	                if (next.length < 20) {
	                    next += this._input.substr(0, 20 - next.length);
	                }
	                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
	            },
	            showPosition: function showPosition() {
	                var pre = this.pastInput();
	                var c = new Array(pre.length + 1).join("-");
	                return pre + this.upcomingInput() + "\n" + c + "^";
	            },
	            next: function next() {
	                if (this.done) {
	                    return this.EOF;
	                }
	                if (!this._input) this.done = true;

	                var token, match, tempMatch, index, col, lines;
	                if (!this._more) {
	                    this.yytext = '';
	                    this.match = '';
	                }
	                var rules = this._currentRules();
	                for (var i = 0; i < rules.length; i++) {
	                    tempMatch = this._input.match(this.rules[rules[i]]);
	                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
	                        match = tempMatch;
	                        index = i;
	                        if (!this.options.flex) break;
	                    }
	                }
	                if (match) {
	                    lines = match[0].match(/(?:\r\n?|\n).*/g);
	                    if (lines) this.yylineno += lines.length;
	                    this.yylloc = { first_line: this.yylloc.last_line,
	                        last_line: this.yylineno + 1,
	                        first_column: this.yylloc.last_column,
	                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
	                    this.yytext += match[0];
	                    this.match += match[0];
	                    this.matches = match;
	                    this.yyleng = this.yytext.length;
	                    if (this.options.ranges) {
	                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
	                    }
	                    this._more = false;
	                    this._input = this._input.slice(match[0].length);
	                    this.matched += match[0];
	                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
	                    if (this.done && this._input) this.done = false;
	                    if (token) return token;else return;
	                }
	                if (this._input === "") {
	                    return this.EOF;
	                } else {
	                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), { text: "", token: null, line: this.yylineno });
	                }
	            },
	            lex: function lex() {
	                var r = this.next();
	                if (typeof r !== 'undefined') {
	                    return r;
	                } else {
	                    return this.lex();
	                }
	            },
	            begin: function begin(condition) {
	                this.conditionStack.push(condition);
	            },
	            popState: function popState() {
	                return this.conditionStack.pop();
	            },
	            _currentRules: function _currentRules() {
	                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
	            },
	            topState: function topState() {
	                return this.conditionStack[this.conditionStack.length - 2];
	            },
	            pushState: function begin(condition) {
	                this.begin(condition);
	            } };
	        lexer.options = {};
	        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START
	        /**/) {

	            function strip(start, end) {
	                return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);
	            }

	            var YYSTATE = YY_START;
	            switch ($avoiding_name_collisions) {
	                case 0:
	                    if (yy_.yytext.slice(-2) === "\\\\") {
	                        strip(0, 1);
	                        this.begin("mu");
	                    } else if (yy_.yytext.slice(-1) === "\\") {
	                        strip(0, 1);
	                        this.begin("emu");
	                    } else {
	                        this.begin("mu");
	                    }
	                    if (yy_.yytext) return 15;

	                    break;
	                case 1:
	                    return 15;
	                    break;
	                case 2:
	                    this.popState();
	                    return 15;

	                    break;
	                case 3:
	                    this.begin('raw');return 15;
	                    break;
	                case 4:
	                    this.popState();
	                    // Should be using `this.topState()` below, but it currently
	                    // returns the second top instead of the first top. Opened an
	                    // issue about it at https://github.com/zaach/jison/issues/291
	                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {
	                        return 15;
	                    } else {
	                        yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);
	                        return 'END_RAW_BLOCK';
	                    }

	                    break;
	                case 5:
	                    return 15;
	                    break;
	                case 6:
	                    this.popState();
	                    return 14;

	                    break;
	                case 7:
	                    return 65;
	                    break;
	                case 8:
	                    return 68;
	                    break;
	                case 9:
	                    return 19;
	                    break;
	                case 10:
	                    this.popState();
	                    this.begin('raw');
	                    return 23;

	                    break;
	                case 11:
	                    return 55;
	                    break;
	                case 12:
	                    return 60;
	                    break;
	                case 13:
	                    return 29;
	                    break;
	                case 14:
	                    return 47;
	                    break;
	                case 15:
	                    this.popState();return 44;
	                    break;
	                case 16:
	                    this.popState();return 44;
	                    break;
	                case 17:
	                    return 34;
	                    break;
	                case 18:
	                    return 39;
	                    break;
	                case 19:
	                    return 51;
	                    break;
	                case 20:
	                    return 48;
	                    break;
	                case 21:
	                    this.unput(yy_.yytext);
	                    this.popState();
	                    this.begin('com');

	                    break;
	                case 22:
	                    this.popState();
	                    return 14;

	                    break;
	                case 23:
	                    return 48;
	                    break;
	                case 24:
	                    return 73;
	                    break;
	                case 25:
	                    return 72;
	                    break;
	                case 26:
	                    return 72;
	                    break;
	                case 27:
	                    return 87;
	                    break;
	                case 28:
	                    // ignore whitespace
	                    break;
	                case 29:
	                    this.popState();return 54;
	                    break;
	                case 30:
	                    this.popState();return 33;
	                    break;
	                case 31:
	                    yy_.yytext = strip(1, 2).replace(/\\"/g, '"');return 80;
	                    break;
	                case 32:
	                    yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 80;
	                    break;
	                case 33:
	                    return 85;
	                    break;
	                case 34:
	                    return 82;
	                    break;
	                case 35:
	                    return 82;
	                    break;
	                case 36:
	                    return 83;
	                    break;
	                case 37:
	                    return 84;
	                    break;
	                case 38:
	                    return 81;
	                    break;
	                case 39:
	                    return 75;
	                    break;
	                case 40:
	                    return 77;
	                    break;
	                case 41:
	                    return 72;
	                    break;
	                case 42:
	                    yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');return 72;
	                    break;
	                case 43:
	                    return 'INVALID';
	                    break;
	                case 44:
	                    return 5;
	                    break;
	            }
	        };
	        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
	        lexer.conditions = { "mu": { "rules": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inclusive": false }, "emu": { "rules": [2], "inclusive": false }, "com": { "rules": [6], "inclusive": false }, "raw": { "rules": [3, 4, 5], "inclusive": false }, "INITIAL": { "rules": [0, 1, 44], "inclusive": true } };
	        return lexer;
	    })();
	    parser.lexer = lexer;
	    function Parser() {
	        this.yy = {};
	    }Parser.prototype = parser;parser.Parser = Parser;
	    return new Parser();
	})();exports.__esModule = true;
	exports['default'] = handlebars;
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _visitor = __webpack_require__(36);

	var _visitor2 = _interopRequireDefault(_visitor);

	function WhitespaceControl() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  this.options = options;
	}
	WhitespaceControl.prototype = new _visitor2['default']();

	WhitespaceControl.prototype.Program = function (program) {
	  var doStandalone = !this.options.ignoreStandalone;

	  var isRoot = !this.isRootSeen;
	  this.isRootSeen = true;

	  var body = program.body;
	  for (var i = 0, l = body.length; i < l; i++) {
	    var current = body[i],
	        strip = this.accept(current);

	    if (!strip) {
	      continue;
	    }

	    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
	        _isNextWhitespace = isNextWhitespace(body, i, isRoot),
	        openStandalone = strip.openStandalone && _isPrevWhitespace,
	        closeStandalone = strip.closeStandalone && _isNextWhitespace,
	        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

	    if (strip.close) {
	      omitRight(body, i, true);
	    }
	    if (strip.open) {
	      omitLeft(body, i, true);
	    }

	    if (doStandalone && inlineStandalone) {
	      omitRight(body, i);

	      if (omitLeft(body, i)) {
	        // If we are on a standalone node, save the indent info for partials
	        if (current.type === 'PartialStatement') {
	          // Pull out the whitespace from the final line
	          current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
	        }
	      }
	    }
	    if (doStandalone && openStandalone) {
	      omitRight((current.program || current.inverse).body);

	      // Strip out the previous content node if it's whitespace only
	      omitLeft(body, i);
	    }
	    if (doStandalone && closeStandalone) {
	      // Always strip the next node
	      omitRight(body, i);

	      omitLeft((current.inverse || current.program).body);
	    }
	  }

	  return program;
	};

	WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {
	  this.accept(block.program);
	  this.accept(block.inverse);

	  // Find the inverse program that is involed with whitespace stripping.
	  var program = block.program || block.inverse,
	      inverse = block.program && block.inverse,
	      firstInverse = inverse,
	      lastInverse = inverse;

	  if (inverse && inverse.chained) {
	    firstInverse = inverse.body[0].program;

	    // Walk the inverse chain to find the last inverse that is actually in the chain.
	    while (lastInverse.chained) {
	      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
	    }
	  }

	  var strip = {
	    open: block.openStrip.open,
	    close: block.closeStrip.close,

	    // Determine the standalone candiacy. Basically flag our content as being possibly standalone
	    // so our parent can determine if we actually are standalone
	    openStandalone: isNextWhitespace(program.body),
	    closeStandalone: isPrevWhitespace((firstInverse || program).body)
	  };

	  if (block.openStrip.close) {
	    omitRight(program.body, null, true);
	  }

	  if (inverse) {
	    var inverseStrip = block.inverseStrip;

	    if (inverseStrip.open) {
	      omitLeft(program.body, null, true);
	    }

	    if (inverseStrip.close) {
	      omitRight(firstInverse.body, null, true);
	    }
	    if (block.closeStrip.open) {
	      omitLeft(lastInverse.body, null, true);
	    }

	    // Find standalone else statments
	    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
	      omitLeft(program.body);
	      omitRight(firstInverse.body);
	    }
	  } else if (block.closeStrip.open) {
	    omitLeft(program.body, null, true);
	  }

	  return strip;
	};

	WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {
	  return mustache.strip;
	};

	WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
	  /* istanbul ignore next */
	  var strip = node.strip || {};
	  return {
	    inlineStandalone: true,
	    open: strip.open,
	    close: strip.close
	  };
	};

	function isPrevWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = body.length;
	  }

	  // Nodes that end with newlines are considered whitespace (but are special
	  // cased for strip operations)
	  var prev = body[i - 1],
	      sibling = body[i - 2];
	  if (!prev) {
	    return isRoot;
	  }

	  if (prev.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
	  }
	}
	function isNextWhitespace(body, i, isRoot) {
	  if (i === undefined) {
	    i = -1;
	  }

	  var next = body[i + 1],
	      sibling = body[i + 2];
	  if (!next) {
	    return isRoot;
	  }

	  if (next.type === 'ContentStatement') {
	    return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
	  }
	}

	// Marks the node to the right of the position as omitted.
	// I.e. {{foo}}' ' will mark the ' ' node as omitted.
	//
	// If i is undefined, then the first child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitRight(body, i, multiple) {
	  var current = body[i == null ? 0 : i + 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
	    return;
	  }

	  var original = current.value;
	  current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
	  current.rightStripped = current.value !== original;
	}

	// Marks the node to the left of the position as omitted.
	// I.e. ' '{{foo}} will mark the ' ' node as omitted.
	//
	// If i is undefined then the last child will be marked as such.
	//
	// If mulitple is truthy then all whitespace will be stripped out until non-whitespace
	// content is met.
	function omitLeft(body, i, multiple) {
	  var current = body[i == null ? body.length - 1 : i - 1];
	  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
	    return;
	  }

	  // We omit the last node if it's whitespace only and not preceeded by a non-content node.
	  var original = current.value;
	  current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
	  current.leftStripped = current.value !== original;
	  return current.leftStripped;
	}

	exports['default'] = WhitespaceControl;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	function Visitor() {
	  this.parents = [];
	}

	Visitor.prototype = {
	  constructor: Visitor,
	  mutating: false,

	  // Visits a given value. If mutating, will replace the value if necessary.
	  acceptKey: function acceptKey(node, name) {
	    var value = this.accept(node[name]);
	    if (this.mutating) {
	      // Hacky sanity check: This may have a few false positives for type for the helper
	      // methods but will generally do the right thing without a lot of overhead.
	      if (value && !Visitor.prototype[value.type]) {
	        throw new _exception2['default']('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
	      }
	      node[name] = value;
	    }
	  },

	  // Performs an accept operation with added sanity check to ensure
	  // required keys are not removed.
	  acceptRequired: function acceptRequired(node, name) {
	    this.acceptKey(node, name);

	    if (!node[name]) {
	      throw new _exception2['default'](node.type + ' requires ' + name);
	    }
	  },

	  // Traverses a given array. If mutating, empty respnses will be removed
	  // for child elements.
	  acceptArray: function acceptArray(array) {
	    for (var i = 0, l = array.length; i < l; i++) {
	      this.acceptKey(array, i);

	      if (!array[i]) {
	        array.splice(i, 1);
	        i--;
	        l--;
	      }
	    }
	  },

	  accept: function accept(object) {
	    if (!object) {
	      return;
	    }

	    /* istanbul ignore next: Sanity code */
	    if (!this[object.type]) {
	      throw new _exception2['default']('Unknown type: ' + object.type, object);
	    }

	    if (this.current) {
	      this.parents.unshift(this.current);
	    }
	    this.current = object;

	    var ret = this[object.type](object);

	    this.current = this.parents.shift();

	    if (!this.mutating || ret) {
	      return ret;
	    } else if (ret !== false) {
	      return object;
	    }
	  },

	  Program: function Program(program) {
	    this.acceptArray(program.body);
	  },

	  MustacheStatement: visitSubExpression,
	  Decorator: visitSubExpression,

	  BlockStatement: visitBlock,
	  DecoratorBlock: visitBlock,

	  PartialStatement: visitPartial,
	  PartialBlockStatement: function PartialBlockStatement(partial) {
	    visitPartial.call(this, partial);

	    this.acceptKey(partial, 'program');
	  },

	  ContentStatement: function ContentStatement() /* content */{},
	  CommentStatement: function CommentStatement() /* comment */{},

	  SubExpression: visitSubExpression,

	  PathExpression: function PathExpression() /* path */{},

	  StringLiteral: function StringLiteral() /* string */{},
	  NumberLiteral: function NumberLiteral() /* number */{},
	  BooleanLiteral: function BooleanLiteral() /* bool */{},
	  UndefinedLiteral: function UndefinedLiteral() /* literal */{},
	  NullLiteral: function NullLiteral() /* literal */{},

	  Hash: function Hash(hash) {
	    this.acceptArray(hash.pairs);
	  },
	  HashPair: function HashPair(pair) {
	    this.acceptRequired(pair, 'value');
	  }
	};

	function visitSubExpression(mustache) {
	  this.acceptRequired(mustache, 'path');
	  this.acceptArray(mustache.params);
	  this.acceptKey(mustache, 'hash');
	}
	function visitBlock(block) {
	  visitSubExpression.call(this, block);

	  this.acceptKey(block, 'program');
	  this.acceptKey(block, 'inverse');
	}
	function visitPartial(partial) {
	  this.acceptRequired(partial, 'name');
	  this.acceptArray(partial.params);
	  this.acceptKey(partial, 'hash');
	}

	exports['default'] = Visitor;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.SourceLocation = SourceLocation;
	exports.id = id;
	exports.stripFlags = stripFlags;
	exports.stripComment = stripComment;
	exports.preparePath = preparePath;
	exports.prepareMustache = prepareMustache;
	exports.prepareRawBlock = prepareRawBlock;
	exports.prepareBlock = prepareBlock;
	exports.prepareProgram = prepareProgram;
	exports.preparePartialBlock = preparePartialBlock;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	function validateClose(open, close) {
	  close = close.path ? close.path.original : close;

	  if (open.path.original !== close) {
	    var errorNode = { loc: open.path.loc };

	    throw new _exception2['default'](open.path.original + " doesn't match " + close, errorNode);
	  }
	}

	function SourceLocation(source, locInfo) {
	  this.source = source;
	  this.start = {
	    line: locInfo.first_line,
	    column: locInfo.first_column
	  };
	  this.end = {
	    line: locInfo.last_line,
	    column: locInfo.last_column
	  };
	}

	function id(token) {
	  if (/^\[.*\]$/.test(token)) {
	    return token.substr(1, token.length - 2);
	  } else {
	    return token;
	  }
	}

	function stripFlags(open, close) {
	  return {
	    open: open.charAt(2) === '~',
	    close: close.charAt(close.length - 3) === '~'
	  };
	}

	function stripComment(comment) {
	  return comment.replace(/^\{\{~?\!-?-?/, '').replace(/-?-?~?\}\}$/, '');
	}

	function preparePath(data, parts, loc) {
	  loc = this.locInfo(loc);

	  var original = data ? '@' : '',
	      dig = [],
	      depth = 0,
	      depthString = '';

	  for (var i = 0, l = parts.length; i < l; i++) {
	    var part = parts[i].part,

	    // If we have [] syntax then we do not treat path references as operators,
	    // i.e. foo.[this] resolves to approximately context.foo['this']
	    isLiteral = parts[i].original !== part;
	    original += (parts[i].separator || '') + part;

	    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
	      if (dig.length > 0) {
	        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });
	      } else if (part === '..') {
	        depth++;
	        depthString += '../';
	      }
	    } else {
	      dig.push(part);
	    }
	  }

	  return {
	    type: 'PathExpression',
	    data: data,
	    depth: depth,
	    parts: dig,
	    original: original,
	    loc: loc
	  };
	}

	function prepareMustache(path, params, hash, open, strip, locInfo) {
	  // Must use charAt to support IE pre-10
	  var escapeFlag = open.charAt(3) || open.charAt(2),
	      escaped = escapeFlag !== '{' && escapeFlag !== '&';

	  var decorator = /\*/.test(open);
	  return {
	    type: decorator ? 'Decorator' : 'MustacheStatement',
	    path: path,
	    params: params,
	    hash: hash,
	    escaped: escaped,
	    strip: strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareRawBlock(openRawBlock, contents, close, locInfo) {
	  validateClose(openRawBlock, close);

	  locInfo = this.locInfo(locInfo);
	  var program = {
	    type: 'Program',
	    body: contents,
	    strip: {},
	    loc: locInfo
	  };

	  return {
	    type: 'BlockStatement',
	    path: openRawBlock.path,
	    params: openRawBlock.params,
	    hash: openRawBlock.hash,
	    program: program,
	    openStrip: {},
	    inverseStrip: {},
	    closeStrip: {},
	    loc: locInfo
	  };
	}

	function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
	  if (close && close.path) {
	    validateClose(openBlock, close);
	  }

	  var decorator = /\*/.test(openBlock.open);

	  program.blockParams = openBlock.blockParams;

	  var inverse = undefined,
	      inverseStrip = undefined;

	  if (inverseAndProgram) {
	    if (decorator) {
	      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);
	    }

	    if (inverseAndProgram.chain) {
	      inverseAndProgram.program.body[0].closeStrip = close.strip;
	    }

	    inverseStrip = inverseAndProgram.strip;
	    inverse = inverseAndProgram.program;
	  }

	  if (inverted) {
	    inverted = inverse;
	    inverse = program;
	    program = inverted;
	  }

	  return {
	    type: decorator ? 'DecoratorBlock' : 'BlockStatement',
	    path: openBlock.path,
	    params: openBlock.params,
	    hash: openBlock.hash,
	    program: program,
	    inverse: inverse,
	    openStrip: openBlock.strip,
	    inverseStrip: inverseStrip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}

	function prepareProgram(statements, loc) {
	  if (!loc && statements.length) {
	    var firstLoc = statements[0].loc,
	        lastLoc = statements[statements.length - 1].loc;

	    /* istanbul ignore else */
	    if (firstLoc && lastLoc) {
	      loc = {
	        source: firstLoc.source,
	        start: {
	          line: firstLoc.start.line,
	          column: firstLoc.start.column
	        },
	        end: {
	          line: lastLoc.end.line,
	          column: lastLoc.end.column
	        }
	      };
	    }
	  }

	  return {
	    type: 'Program',
	    body: statements,
	    strip: {},
	    loc: loc
	  };
	}

	function preparePartialBlock(open, program, close, locInfo) {
	  validateClose(open, close);

	  return {
	    type: 'PartialBlockStatement',
	    name: open.path,
	    params: open.params,
	    hash: open.hash,
	    program: program,
	    openStrip: open.strip,
	    closeStrip: close && close.strip,
	    loc: this.locInfo(locInfo)
	  };
	}
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable new-cap */

	'use strict';

	exports.__esModule = true;
	exports.Compiler = Compiler;
	exports.precompile = precompile;
	exports.compile = compile;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(16);

	var _ast = __webpack_require__(32);

	var _ast2 = _interopRequireDefault(_ast);

	var slice = [].slice;

	function Compiler() {}

	// the foundHelper register will disambiguate helper lookup from finding a
	// function in a context. This is necessary for mustache compatibility, which
	// requires that context functions in blocks are evaluated by blockHelperMissing,
	// and then proceed as if the resulting value was provided to blockHelperMissing.

	Compiler.prototype = {
	  compiler: Compiler,

	  equals: function equals(other) {
	    var len = this.opcodes.length;
	    if (other.opcodes.length !== len) {
	      return false;
	    }

	    for (var i = 0; i < len; i++) {
	      var opcode = this.opcodes[i],
	          otherOpcode = other.opcodes[i];
	      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {
	        return false;
	      }
	    }

	    // We know that length is the same between the two arrays because they are directly tied
	    // to the opcode behavior above.
	    len = this.children.length;
	    for (var i = 0; i < len; i++) {
	      if (!this.children[i].equals(other.children[i])) {
	        return false;
	      }
	    }

	    return true;
	  },

	  guid: 0,

	  compile: function compile(program, options) {
	    this.sourceNode = [];
	    this.opcodes = [];
	    this.children = [];
	    this.options = options;
	    this.stringParams = options.stringParams;
	    this.trackIds = options.trackIds;

	    options.blockParams = options.blockParams || [];

	    // These changes will propagate to the other compiler components
	    var knownHelpers = options.knownHelpers;
	    options.knownHelpers = {
	      'helperMissing': true,
	      'blockHelperMissing': true,
	      'each': true,
	      'if': true,
	      'unless': true,
	      'with': true,
	      'log': true,
	      'lookup': true
	    };
	    if (knownHelpers) {
	      for (var _name in knownHelpers) {
	        /* istanbul ignore else */
	        if (_name in knownHelpers) {
	          options.knownHelpers[_name] = knownHelpers[_name];
	        }
	      }
	    }

	    return this.accept(program);
	  },

	  compileProgram: function compileProgram(program) {
	    var childCompiler = new this.compiler(),
	        // eslint-disable-line new-cap
	    result = childCompiler.compile(program, this.options),
	        guid = this.guid++;

	    this.usePartial = this.usePartial || result.usePartial;

	    this.children[guid] = result;
	    this.useDepths = this.useDepths || result.useDepths;

	    return guid;
	  },

	  accept: function accept(node) {
	    /* istanbul ignore next: Sanity code */
	    if (!this[node.type]) {
	      throw new _exception2['default']('Unknown type: ' + node.type, node);
	    }

	    this.sourceNode.unshift(node);
	    var ret = this[node.type](node);
	    this.sourceNode.shift();
	    return ret;
	  },

	  Program: function Program(program) {
	    this.options.blockParams.unshift(program.blockParams);

	    var body = program.body,
	        bodyLength = body.length;
	    for (var i = 0; i < bodyLength; i++) {
	      this.accept(body[i]);
	    }

	    this.options.blockParams.shift();

	    this.isSimple = bodyLength === 1;
	    this.blockParams = program.blockParams ? program.blockParams.length : 0;

	    return this;
	  },

	  BlockStatement: function BlockStatement(block) {
	    transformLiteralToPath(block);

	    var program = block.program,
	        inverse = block.inverse;

	    program = program && this.compileProgram(program);
	    inverse = inverse && this.compileProgram(inverse);

	    var type = this.classifySexpr(block);

	    if (type === 'helper') {
	      this.helperSexpr(block, program, inverse);
	    } else if (type === 'simple') {
	      this.simpleSexpr(block);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('blockValue', block.path.original);
	    } else {
	      this.ambiguousSexpr(block, program, inverse);

	      // now that the simple mustache is resolved, we need to
	      // evaluate it by executing `blockHelperMissing`
	      this.opcode('pushProgram', program);
	      this.opcode('pushProgram', inverse);
	      this.opcode('emptyHash');
	      this.opcode('ambiguousBlockValue');
	    }

	    this.opcode('append');
	  },

	  DecoratorBlock: function DecoratorBlock(decorator) {
	    var program = decorator.program && this.compileProgram(decorator.program);
	    var params = this.setupFullMustacheParams(decorator, program, undefined),
	        path = decorator.path;

	    this.useDecorators = true;
	    this.opcode('registerDecorator', params.length, path.original);
	  },

	  PartialStatement: function PartialStatement(partial) {
	    this.usePartial = true;

	    var program = partial.program;
	    if (program) {
	      program = this.compileProgram(partial.program);
	    }

	    var params = partial.params;
	    if (params.length > 1) {
	      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);
	    } else if (!params.length) {
	      if (this.options.explicitPartialContext) {
	        this.opcode('pushLiteral', 'undefined');
	      } else {
	        params.push({ type: 'PathExpression', parts: [], depth: 0 });
	      }
	    }

	    var partialName = partial.name.original,
	        isDynamic = partial.name.type === 'SubExpression';
	    if (isDynamic) {
	      this.accept(partial.name);
	    }

	    this.setupFullMustacheParams(partial, program, undefined, true);

	    var indent = partial.indent || '';
	    if (this.options.preventIndent && indent) {
	      this.opcode('appendContent', indent);
	      indent = '';
	    }

	    this.opcode('invokePartial', isDynamic, partialName, indent);
	    this.opcode('append');
	  },
	  PartialBlockStatement: function PartialBlockStatement(partialBlock) {
	    this.PartialStatement(partialBlock);
	  },

	  MustacheStatement: function MustacheStatement(mustache) {
	    this.SubExpression(mustache);

	    if (mustache.escaped && !this.options.noEscape) {
	      this.opcode('appendEscaped');
	    } else {
	      this.opcode('append');
	    }
	  },
	  Decorator: function Decorator(decorator) {
	    this.DecoratorBlock(decorator);
	  },

	  ContentStatement: function ContentStatement(content) {
	    if (content.value) {
	      this.opcode('appendContent', content.value);
	    }
	  },

	  CommentStatement: function CommentStatement() {},

	  SubExpression: function SubExpression(sexpr) {
	    transformLiteralToPath(sexpr);
	    var type = this.classifySexpr(sexpr);

	    if (type === 'simple') {
	      this.simpleSexpr(sexpr);
	    } else if (type === 'helper') {
	      this.helperSexpr(sexpr);
	    } else {
	      this.ambiguousSexpr(sexpr);
	    }
	  },
	  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
	    var path = sexpr.path,
	        name = path.parts[0],
	        isBlock = program != null || inverse != null;

	    this.opcode('getContext', path.depth);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    path.strict = true;
	    this.accept(path);

	    this.opcode('invokeAmbiguous', name, isBlock);
	  },

	  simpleSexpr: function simpleSexpr(sexpr) {
	    var path = sexpr.path;
	    path.strict = true;
	    this.accept(path);
	    this.opcode('resolvePossibleLambda');
	  },

	  helperSexpr: function helperSexpr(sexpr, program, inverse) {
	    var params = this.setupFullMustacheParams(sexpr, program, inverse),
	        path = sexpr.path,
	        name = path.parts[0];

	    if (this.options.knownHelpers[name]) {
	      this.opcode('invokeKnownHelper', params.length, name);
	    } else if (this.options.knownHelpersOnly) {
	      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);
	    } else {
	      path.strict = true;
	      path.falsy = true;

	      this.accept(path);
	      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));
	    }
	  },

	  PathExpression: function PathExpression(path) {
	    this.addDepth(path.depth);
	    this.opcode('getContext', path.depth);

	    var name = path.parts[0],
	        scoped = _ast2['default'].helpers.scopedId(path),
	        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);

	    if (blockParamId) {
	      this.opcode('lookupBlockParam', blockParamId, path.parts);
	    } else if (!name) {
	      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
	      this.opcode('pushContext');
	    } else if (path.data) {
	      this.options.data = true;
	      this.opcode('lookupData', path.depth, path.parts, path.strict);
	    } else {
	      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);
	    }
	  },

	  StringLiteral: function StringLiteral(string) {
	    this.opcode('pushString', string.value);
	  },

	  NumberLiteral: function NumberLiteral(number) {
	    this.opcode('pushLiteral', number.value);
	  },

	  BooleanLiteral: function BooleanLiteral(bool) {
	    this.opcode('pushLiteral', bool.value);
	  },

	  UndefinedLiteral: function UndefinedLiteral() {
	    this.opcode('pushLiteral', 'undefined');
	  },

	  NullLiteral: function NullLiteral() {
	    this.opcode('pushLiteral', 'null');
	  },

	  Hash: function Hash(hash) {
	    var pairs = hash.pairs,
	        i = 0,
	        l = pairs.length;

	    this.opcode('pushHash');

	    for (; i < l; i++) {
	      this.pushParam(pairs[i].value);
	    }
	    while (i--) {
	      this.opcode('assignToHash', pairs[i].key);
	    }
	    this.opcode('popHash');
	  },

	  // HELPERS
	  opcode: function opcode(name) {
	    this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });
	  },

	  addDepth: function addDepth(depth) {
	    if (!depth) {
	      return;
	    }

	    this.useDepths = true;
	  },

	  classifySexpr: function classifySexpr(sexpr) {
	    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);

	    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

	    // a mustache is an eligible helper if:
	    // * its id is simple (a single part, not `this` or `..`)
	    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);

	    // if a mustache is an eligible helper but not a definite
	    // helper, it is ambiguous, and will be resolved in a later
	    // pass or at runtime.
	    var isEligible = !isBlockParam && (isHelper || isSimple);

	    // if ambiguous, we can possibly resolve the ambiguity now
	    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
	    if (isEligible && !isHelper) {
	      var _name2 = sexpr.path.parts[0],
	          options = this.options;

	      if (options.knownHelpers[_name2]) {
	        isHelper = true;
	      } else if (options.knownHelpersOnly) {
	        isEligible = false;
	      }
	    }

	    if (isHelper) {
	      return 'helper';
	    } else if (isEligible) {
	      return 'ambiguous';
	    } else {
	      return 'simple';
	    }
	  },

	  pushParams: function pushParams(params) {
	    for (var i = 0, l = params.length; i < l; i++) {
	      this.pushParam(params[i]);
	    }
	  },

	  pushParam: function pushParam(val) {
	    var value = val.value != null ? val.value : val.original || '';

	    if (this.stringParams) {
	      if (value.replace) {
	        value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
	      }

	      if (val.depth) {
	        this.addDepth(val.depth);
	      }
	      this.opcode('getContext', val.depth || 0);
	      this.opcode('pushStringParam', value, val.type);

	      if (val.type === 'SubExpression') {
	        // SubExpressions get evaluated and passed in
	        // in string params mode.
	        this.accept(val);
	      }
	    } else {
	      if (this.trackIds) {
	        var blockParamIndex = undefined;
	        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {
	          blockParamIndex = this.blockParamIndex(val.parts[0]);
	        }
	        if (blockParamIndex) {
	          var blockParamChild = val.parts.slice(1).join('.');
	          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);
	        } else {
	          value = val.original || value;
	          if (value.replace) {
	            value = value.replace(/^this(?:\.|$)/, '').replace(/^\.\//, '').replace(/^\.$/, '');
	          }

	          this.opcode('pushId', val.type, value);
	        }
	      }
	      this.accept(val);
	    }
	  },

	  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {
	    var params = sexpr.params;
	    this.pushParams(params);

	    this.opcode('pushProgram', program);
	    this.opcode('pushProgram', inverse);

	    if (sexpr.hash) {
	      this.accept(sexpr.hash);
	    } else {
	      this.opcode('emptyHash', omitEmpty);
	    }

	    return params;
	  },

	  blockParamIndex: function blockParamIndex(name) {
	    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
	      var blockParams = this.options.blockParams[depth],
	          param = blockParams && _utils.indexOf(blockParams, name);
	      if (blockParams && param >= 0) {
	        return [depth, param];
	      }
	    }
	  }
	};

	function precompile(input, options, env) {
	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);
	  }

	  options = options || {};
	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var ast = env.parse(input, options),
	      environment = new env.Compiler().compile(ast, options);
	  return new env.JavaScriptCompiler().compile(environment, options);
	}

	function compile(input, options, env) {
	  if (options === undefined) options = {};

	  if (input == null || typeof input !== 'string' && input.type !== 'Program') {
	    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);
	  }

	  if (!('data' in options)) {
	    options.data = true;
	  }
	  if (options.compat) {
	    options.useDepths = true;
	  }

	  var compiled = undefined;

	  function compileInput() {
	    var ast = env.parse(input, options),
	        environment = new env.Compiler().compile(ast, options),
	        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);
	    return env.template(templateSpec);
	  }

	  // Template is only compiled on first use and cached after that point.
	  function ret(context, execOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled.call(this, context, execOptions);
	  }
	  ret._setup = function (setupOptions) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._setup(setupOptions);
	  };
	  ret._child = function (i, data, blockParams, depths) {
	    if (!compiled) {
	      compiled = compileInput();
	    }
	    return compiled._child(i, data, blockParams, depths);
	  };
	  return ret;
	}

	function argEquals(a, b) {
	  if (a === b) {
	    return true;
	  }

	  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
	    for (var i = 0; i < a.length; i++) {
	      if (!argEquals(a[i], b[i])) {
	        return false;
	      }
	    }
	    return true;
	  }
	}

	function transformLiteralToPath(sexpr) {
	  if (!sexpr.path.parts) {
	    var literal = sexpr.path;
	    // Casting to string here to make false and 0 literal values play nicely with the rest
	    // of the system.
	    sexpr.path = {
	      type: 'PathExpression',
	      data: false,
	      depth: 0,
	      parts: [literal.original + ''],
	      original: literal.original + '',
	      loc: literal.loc
	    };
	  }
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozt5QkFFc0IsY0FBYzs7OztxQkFDTCxVQUFVOzttQkFDekIsT0FBTzs7OztBQUV2QixJQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDOztBQUVoQixTQUFTLFFBQVEsR0FBRyxFQUFFOzs7Ozs7O0FBTzdCLFFBQVEsQ0FBQyxTQUFTLEdBQUc7QUFDbkIsVUFBUSxFQUFFLFFBQVE7O0FBRWxCLFFBQU0sRUFBRSxnQkFBUyxLQUFLLEVBQUU7QUFDdEIsUUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDOUIsUUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7QUFDaEMsYUFBTyxLQUFLLENBQUM7S0FDZDs7QUFFRCxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzVCLFVBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1VBQ3hCLFdBQVcsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25DLFVBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxXQUFXLENBQUMsTUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFO0FBQ3JGLGVBQU8sS0FBSyxDQUFDO09BQ2Q7S0FDRjs7OztBQUlELE9BQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztBQUMzQixTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzVCLFVBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDL0MsZUFBTyxLQUFLLENBQUM7T0FDZDtLQUNGOztBQUVELFdBQU8sSUFBSSxDQUFDO0dBQ2I7O0FBRUQsTUFBSSxFQUFFLENBQUM7O0FBRVAsU0FBTyxFQUFFLGlCQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7QUFDbEMsUUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDckIsUUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDbEIsUUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7QUFDbkIsUUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDdkIsUUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDO0FBQ3pDLFFBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFakMsV0FBTyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQzs7O0FBR2hELFFBQUksWUFBWSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFDeEMsV0FBTyxDQUFDLFlBQVksR0FBRztBQUNyQixxQkFBZSxFQUFFLElBQUk7QUFDckIsMEJBQW9CLEVBQUUsSUFBSTtBQUMxQixZQUFNLEVBQUUsSUFBSTtBQUNaLFVBQUksRUFBRSxJQUFJO0FBQ1YsY0FBUSxFQUFFLElBQUk7QUFDZCxZQUFNLEVBQUUsSUFBSTtBQUNaLFdBQUssRUFBRSxJQUFJO0FBQ1gsY0FBUSxFQUFFLElBQUk7S0FDZixDQUFDO0FBQ0YsUUFBSSxZQUFZLEVBQUU7QUFDaEIsV0FBSyxJQUFJLEtBQUksSUFBSSxZQUFZLEVBQUU7O0FBRTdCLFlBQUksS0FBSSxJQUFJLFlBQVksRUFBRTtBQUN4QixpQkFBTyxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsR0FBRyxZQUFZLENBQUMsS0FBSSxDQUFDLENBQUM7U0FDakQ7T0FDRjtLQUNGOztBQUVELFdBQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztHQUM3Qjs7QUFFRCxnQkFBYyxFQUFFLHdCQUFTLE9BQU8sRUFBRTtBQUNoQyxRQUFJLGFBQWEsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7O0FBQ25DLFVBQU0sR0FBRyxhQUFhLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3JELElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7O0FBRXZCLFFBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxNQUFNLENBQUMsVUFBVSxDQUFDOztBQUV2RCxRQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQztBQUM3QixRQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQzs7QUFFcEQsV0FBTyxJQUFJLENBQUM7R0FDYjs7QUFFRCxRQUFNLEVBQUUsZ0JBQVMsSUFBSSxFQUFFOztBQUVyQixRQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUNwQixZQUFNLDJCQUFjLGdCQUFnQixHQUFHLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDekQ7O0FBRUQsUUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDOUIsUUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQyxRQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3hCLFdBQU8sR0FBRyxDQUFDO0dBQ1o7O0FBRUQsU0FBTyxFQUFFLGlCQUFTLE9BQU8sRUFBRTtBQUN6QixRQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDOztBQUV0RCxRQUFJLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSTtRQUNuQixVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUM3QixTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ25DLFVBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdEI7O0FBRUQsUUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRWpDLFFBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxLQUFLLENBQUMsQ0FBQztBQUNqQyxRQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDOztBQUV4RSxXQUFPLElBQUksQ0FBQztHQUNiOztBQUVELGdCQUFjLEVBQUUsd0JBQVMsS0FBSyxFQUFFO0FBQzlCLDBCQUFzQixDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUU5QixRQUFJLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTztRQUN2QixPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQzs7QUFFNUIsV0FBTyxHQUFHLE9BQU8sSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xELFdBQU8sR0FBRyxPQUFPLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7QUFFbEQsUUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFckMsUUFBSSxJQUFJLEtBQUssUUFBUSxFQUFFO0FBQ3JCLFVBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztLQUMzQyxNQUFNLElBQUksSUFBSSxLQUFLLFFBQVEsRUFBRTtBQUM1QixVQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOzs7O0FBSXhCLFVBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BDLFVBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BDLFVBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDekIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUNoRCxNQUFNO0FBQ0wsVUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDOzs7O0FBSTdDLFVBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BDLFVBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BDLFVBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDekIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0tBQ3BDOztBQUVELFFBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7R0FDdkI7O0FBRUQsZ0JBQWMsRUFBQSx3QkFBQyxTQUFTLEVBQUU7QUFDeEIsUUFBSSxPQUFPLEdBQUcsU0FBUyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUMxRSxRQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUM7UUFDcEUsSUFBSSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUM7O0FBRTFCLFFBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0FBQzFCLFFBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7R0FDaEU7O0FBRUQsa0JBQWdCLEVBQUUsMEJBQVMsT0FBTyxFQUFFO0FBQ2xDLFFBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDOztBQUV2QixRQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLFFBQUksT0FBTyxFQUFFO0FBQ1gsYUFBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ2hEOztBQUVELFFBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsUUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtBQUNyQixZQUFNLDJCQUFjLDJDQUEyQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDM0YsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtBQUN6QixVQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsc0JBQXNCLEVBQUU7QUFDdkMsWUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7T0FDekMsTUFBTTtBQUNMLGNBQU0sQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztPQUM1RDtLQUNGOztBQUVELFFBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUTtRQUNuQyxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssZUFBZSxDQUFDO0FBQ3RELFFBQUksU0FBUyxFQUFFO0FBQ2IsVUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDM0I7O0FBRUQsUUFBSSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDOztBQUVoRSxRQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztBQUNsQyxRQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxJQUFJLE1BQU0sRUFBRTtBQUN4QyxVQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNyQyxZQUFNLEdBQUcsRUFBRSxDQUFDO0tBQ2I7O0FBRUQsUUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM3RCxRQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0dBQ3ZCO0FBQ0QsdUJBQXFCLEVBQUUsK0JBQVMsWUFBWSxFQUFFO0FBQzVDLFFBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUNyQzs7QUFFRCxtQkFBaUIsRUFBRSwyQkFBUyxRQUFRLEVBQUU7QUFDcEMsUUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFFN0IsUUFBSSxRQUFRLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7QUFDOUMsVUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztLQUM5QixNQUFNO0FBQ0wsVUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN2QjtHQUNGO0FBQ0QsV0FBUyxFQUFBLG1CQUFDLFNBQVMsRUFBRTtBQUNuQixRQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0dBQ2hDOztBQUdELGtCQUFnQixFQUFFLDBCQUFTLE9BQU8sRUFBRTtBQUNsQyxRQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDakIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzdDO0dBQ0Y7O0FBRUQsa0JBQWdCLEVBQUUsNEJBQVcsRUFBRTs7QUFFL0IsZUFBYSxFQUFFLHVCQUFTLEtBQUssRUFBRTtBQUM3QiwwQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5QixRQUFJLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVyQyxRQUFJLElBQUksS0FBSyxRQUFRLEVBQUU7QUFDckIsVUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN6QixNQUFNLElBQUksSUFBSSxLQUFLLFFBQVEsRUFBRTtBQUM1QixVQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ3pCLE1BQU07QUFDTCxVQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzVCO0dBQ0Y7QUFDRCxnQkFBYyxFQUFFLHdCQUFTLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ2hELFFBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJO1FBQ2pCLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNwQixPQUFPLEdBQUcsT0FBTyxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksSUFBSSxDQUFDOztBQUVqRCxRQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXRDLFFBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BDLFFBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDOztBQUVwQyxRQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztBQUNuQixRQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUVsQixRQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztHQUMvQzs7QUFFRCxhQUFXLEVBQUUscUJBQVMsS0FBSyxFQUFFO0FBQzNCLFFBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFDdEIsUUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7QUFDbkIsUUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsQixRQUFJLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUM7R0FDdEM7O0FBRUQsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQzdDLFFBQUksTUFBTSxHQUFHLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQztRQUM5RCxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUk7UUFDakIsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7O0FBRXpCLFFBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDbkMsVUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQ3ZELE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFO0FBQ3hDLFlBQU0sMkJBQWMsOERBQThELEdBQUcsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ25HLE1BQU07QUFDTCxVQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztBQUNuQixVQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQzs7QUFFbEIsVUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsQixVQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsaUJBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0tBQ3ZGO0dBQ0Y7O0FBRUQsZ0JBQWMsRUFBRSx3QkFBUyxJQUFJLEVBQUU7QUFDN0IsUUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUIsUUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUV0QyxRQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNwQixNQUFNLEdBQUcsaUJBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDbkMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUV4RSxRQUFJLFlBQVksRUFBRTtBQUNoQixVQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDM0QsTUFBTSxJQUFJLENBQUMsSUFBSSxFQUFFOztBQUVoQixVQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0tBQzVCLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO0FBQ3BCLFVBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUN6QixVQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2hFLE1BQU07QUFDTCxVQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQzdFO0dBQ0Y7O0FBRUQsZUFBYSxFQUFFLHVCQUFTLE1BQU0sRUFBRTtBQUM5QixRQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7R0FDekM7O0FBRUQsZUFBYSxFQUFFLHVCQUFTLE1BQU0sRUFBRTtBQUM5QixRQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7R0FDMUM7O0FBRUQsZ0JBQWMsRUFBRSx3QkFBUyxJQUFJLEVBQUU7QUFDN0IsUUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0dBQ3hDOztBQUVELGtCQUFnQixFQUFFLDRCQUFXO0FBQzNCLFFBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0dBQ3pDOztBQUVELGFBQVcsRUFBRSx1QkFBVztBQUN0QixRQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxNQUFNLENBQUMsQ0FBQztHQUNwQzs7QUFFRCxNQUFJLEVBQUUsY0FBUyxJQUFJLEVBQUU7QUFDbkIsUUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUs7UUFDbEIsQ0FBQyxHQUFHLENBQUM7UUFDTCxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQzs7QUFFckIsUUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQzs7QUFFeEIsV0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ2pCLFVBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0FBQ0QsV0FBTyxDQUFDLEVBQUUsRUFBRTtBQUNWLFVBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUMzQztBQUNELFFBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7R0FDeEI7OztBQUdELFFBQU0sRUFBRSxnQkFBUyxJQUFJLEVBQUU7QUFDckIsUUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0dBQ2xHOztBQUVELFVBQVEsRUFBRSxrQkFBUyxLQUFLLEVBQUU7QUFDeEIsUUFBSSxDQUFDLEtBQUssRUFBRTtBQUNWLGFBQU87S0FDUjs7QUFFRCxRQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztHQUN2Qjs7QUFFRCxlQUFhLEVBQUUsdUJBQVMsS0FBSyxFQUFFO0FBQzdCLFFBQUksUUFBUSxHQUFHLGlCQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUVoRCxRQUFJLFlBQVksR0FBRyxRQUFRLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7OztBQUkzRSxRQUFJLFFBQVEsR0FBRyxDQUFDLFlBQVksSUFBSSxpQkFBSSxPQUFPLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7Ozs7O0FBS3BFLFFBQUksVUFBVSxHQUFHLENBQUMsWUFBWSxLQUFLLFFBQVEsSUFBSSxRQUFRLENBQUEsQUFBQyxDQUFDOzs7O0FBSXpELFFBQUksVUFBVSxJQUFJLENBQUMsUUFBUSxFQUFFO0FBQzNCLFVBQUksTUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztVQUMxQixPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7QUFFM0IsVUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDLE1BQUksQ0FBQyxFQUFFO0FBQzlCLGdCQUFRLEdBQUcsSUFBSSxDQUFDO09BQ2pCLE1BQU0sSUFBSSxPQUFPLENBQUMsZ0JBQWdCLEVBQUU7QUFDbkMsa0JBQVUsR0FBRyxLQUFLLENBQUM7T0FDcEI7S0FDRjs7QUFFRCxRQUFJLFFBQVEsRUFBRTtBQUNaLGFBQU8sUUFBUSxDQUFDO0tBQ2pCLE1BQU0sSUFBSSxVQUFVLEVBQUU7QUFDckIsYUFBTyxXQUFXLENBQUM7S0FDcEIsTUFBTTtBQUNMLGFBQU8sUUFBUSxDQUFDO0tBQ2pCO0dBQ0Y7O0FBRUQsWUFBVSxFQUFFLG9CQUFTLE1BQU0sRUFBRTtBQUMzQixTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzdDLFVBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDM0I7R0FDRjs7QUFFRCxXQUFTLEVBQUUsbUJBQVMsR0FBRyxFQUFFO0FBQ3ZCLFFBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7O0FBRS9ELFFBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtBQUNyQixVQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7QUFDakIsYUFBSyxHQUFHLEtBQUssQ0FDUixPQUFPLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxDQUMzQixPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO09BQzFCOztBQUVELFVBQUksR0FBRyxDQUFDLEtBQUssRUFBRTtBQUNiLFlBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO09BQzFCO0FBQ0QsVUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztBQUMxQyxVQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRWhELFVBQUksR0FBRyxDQUFDLElBQUksS0FBSyxlQUFlLEVBQUU7OztBQUdoQyxZQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO09BQ2xCO0tBQ0YsTUFBTTtBQUNMLFVBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtBQUNqQixZQUFJLGVBQWUsWUFBQSxDQUFDO0FBQ3BCLFlBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxDQUFDLGlCQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFO0FBQ3hELHlCQUFlLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDdkQ7QUFDRCxZQUFJLGVBQWUsRUFBRTtBQUNuQixjQUFJLGVBQWUsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbkQsY0FBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxlQUFlLENBQUMsQ0FBQztTQUN2RSxNQUFNO0FBQ0wsZUFBSyxHQUFHLEdBQUcsQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDO0FBQzlCLGNBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtBQUNqQixpQkFBSyxHQUFHLEtBQUssQ0FDUixPQUFPLENBQUMsZUFBZSxFQUFFLEVBQUUsQ0FBQyxDQUM1QixPQUFPLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUNwQixPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1dBQzFCOztBQUVELGNBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDeEM7T0FDRjtBQUNELFVBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDbEI7R0FDRjs7QUFFRCx5QkFBdUIsRUFBRSxpQ0FBUyxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUU7QUFDcEUsUUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztBQUMxQixRQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDOztBQUV4QixRQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNwQyxRQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQzs7QUFFcEMsUUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFO0FBQ2QsVUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekIsTUFBTTtBQUNMLFVBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0tBQ3JDOztBQUVELFdBQU8sTUFBTSxDQUFDO0dBQ2Y7O0FBRUQsaUJBQWUsRUFBRSx5QkFBUyxJQUFJLEVBQUU7QUFDOUIsU0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLEdBQUcsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO0FBQy9FLFVBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztVQUM3QyxLQUFLLEdBQUcsV0FBVyxJQUFJLGVBQVEsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3RELFVBQUksV0FBVyxJQUFJLEtBQUssSUFBSSxDQUFDLEVBQUU7QUFDN0IsZUFBTyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztPQUN2QjtLQUNGO0dBQ0Y7Q0FDRixDQUFDOztBQUVLLFNBQVMsVUFBVSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO0FBQzlDLE1BQUksS0FBSyxJQUFJLElBQUksSUFBSyxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxTQUFTLEFBQUMsRUFBRTtBQUM1RSxVQUFNLDJCQUFjLGdGQUFnRixHQUFHLEtBQUssQ0FBQyxDQUFDO0dBQy9HOztBQUVELFNBQU8sR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0FBQ3hCLE1BQUksRUFBRSxNQUFNLElBQUksT0FBTyxDQUFBLEFBQUMsRUFBRTtBQUN4QixXQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztHQUNyQjtBQUNELE1BQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtBQUNsQixXQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztHQUMxQjs7QUFFRCxNQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUM7TUFDL0IsV0FBVyxHQUFHLElBQUksR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDM0QsU0FBTyxJQUFJLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7Q0FDbkU7O0FBRU0sU0FBUyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBTyxHQUFHLEVBQUU7TUFBbkIsT0FBTyxnQkFBUCxPQUFPLEdBQUcsRUFBRTs7QUFDekMsTUFBSSxLQUFLLElBQUksSUFBSSxJQUFLLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLFNBQVMsQUFBQyxFQUFFO0FBQzVFLFVBQU0sMkJBQWMsNkVBQTZFLEdBQUcsS0FBSyxDQUFDLENBQUM7R0FDNUc7O0FBRUQsTUFBSSxFQUFFLE1BQU0sSUFBSSxPQUFPLENBQUEsQUFBQyxFQUFFO0FBQ3hCLFdBQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0dBQ3JCO0FBQ0QsTUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO0FBQ2xCLFdBQU8sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0dBQzFCOztBQUVELE1BQUksUUFBUSxZQUFBLENBQUM7O0FBRWIsV0FBUyxZQUFZLEdBQUc7QUFDdEIsUUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDO1FBQy9CLFdBQVcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQztRQUN0RCxZQUFZLEdBQUcsSUFBSSxHQUFHLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDL0YsV0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0dBQ25DOzs7QUFHRCxXQUFTLEdBQUcsQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFO0FBQ2pDLFFBQUksQ0FBQyxRQUFRLEVBQUU7QUFDYixjQUFRLEdBQUcsWUFBWSxFQUFFLENBQUM7S0FDM0I7QUFDRCxXQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztHQUNsRDtBQUNELEtBQUcsQ0FBQyxNQUFNLEdBQUcsVUFBUyxZQUFZLEVBQUU7QUFDbEMsUUFBSSxDQUFDLFFBQVEsRUFBRTtBQUNiLGNBQVEsR0FBRyxZQUFZLEVBQUUsQ0FBQztLQUMzQjtBQUNELFdBQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUN0QyxDQUFDO0FBQ0YsS0FBRyxDQUFDLE1BQU0sR0FBRyxVQUFTLENBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRTtBQUNsRCxRQUFJLENBQUMsUUFBUSxFQUFFO0FBQ2IsY0FBUSxHQUFHLFlBQVksRUFBRSxDQUFDO0tBQzNCO0FBQ0QsV0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0dBQ3RELENBQUM7QUFDRixTQUFPLEdBQUcsQ0FBQztDQUNaOztBQUVELFNBQVMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdkIsTUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ1gsV0FBTyxJQUFJLENBQUM7R0FDYjs7QUFFRCxNQUFJLGVBQVEsQ0FBQyxDQUFDLElBQUksZUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxNQUFNLEVBQUU7QUFDckQsU0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDakMsVUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDMUIsZUFBTyxLQUFLLENBQUM7T0FDZDtLQUNGO0FBQ0QsV0FBTyxJQUFJLENBQUM7R0FDYjtDQUNGOztBQUVELFNBQVMsc0JBQXNCLENBQUMsS0FBSyxFQUFFO0FBQ3JDLE1BQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtBQUNyQixRQUFJLE9BQU8sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDOzs7QUFHekIsU0FBSyxDQUFDLElBQUksR0FBRztBQUNYLFVBQUksRUFBRSxnQkFBZ0I7QUFDdEIsVUFBSSxFQUFFLEtBQUs7QUFDWCxXQUFLLEVBQUUsQ0FBQztBQUNSLFdBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQzlCLGNBQVEsRUFBRSxPQUFPLENBQUMsUUFBUSxHQUFHLEVBQUU7QUFDL0IsU0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHO0tBQ2pCLENBQUM7R0FDSDtDQUNGIiwiZmlsZSI6ImNvbXBpbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbmV3LWNhcCAqL1xuXG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4uL2V4Y2VwdGlvbic7XG5pbXBvcnQge2lzQXJyYXksIGluZGV4T2Z9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBBU1QgZnJvbSAnLi9hc3QnO1xuXG5jb25zdCBzbGljZSA9IFtdLnNsaWNlO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29tcGlsZXIoKSB7fVxuXG4vLyB0aGUgZm91bmRIZWxwZXIgcmVnaXN0ZXIgd2lsbCBkaXNhbWJpZ3VhdGUgaGVscGVyIGxvb2t1cCBmcm9tIGZpbmRpbmcgYVxuLy8gZnVuY3Rpb24gaW4gYSBjb250ZXh0LiBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgbXVzdGFjaGUgY29tcGF0aWJpbGl0eSwgd2hpY2hcbi8vIHJlcXVpcmVzIHRoYXQgY29udGV4dCBmdW5jdGlvbnMgaW4gYmxvY2tzIGFyZSBldmFsdWF0ZWQgYnkgYmxvY2tIZWxwZXJNaXNzaW5nLFxuLy8gYW5kIHRoZW4gcHJvY2VlZCBhcyBpZiB0aGUgcmVzdWx0aW5nIHZhbHVlIHdhcyBwcm92aWRlZCB0byBibG9ja0hlbHBlck1pc3NpbmcuXG5cbkNvbXBpbGVyLnByb3RvdHlwZSA9IHtcbiAgY29tcGlsZXI6IENvbXBpbGVyLFxuXG4gIGVxdWFsczogZnVuY3Rpb24ob3RoZXIpIHtcbiAgICBsZXQgbGVuID0gdGhpcy5vcGNvZGVzLmxlbmd0aDtcbiAgICBpZiAob3RoZXIub3Bjb2Rlcy5sZW5ndGggIT09IGxlbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGxldCBvcGNvZGUgPSB0aGlzLm9wY29kZXNbaV0sXG4gICAgICAgICAgb3RoZXJPcGNvZGUgPSBvdGhlci5vcGNvZGVzW2ldO1xuICAgICAgaWYgKG9wY29kZS5vcGNvZGUgIT09IG90aGVyT3Bjb2RlLm9wY29kZSB8fCAhYXJnRXF1YWxzKG9wY29kZS5hcmdzLCBvdGhlck9wY29kZS5hcmdzKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gV2Uga25vdyB0aGF0IGxlbmd0aCBpcyB0aGUgc2FtZSBiZXR3ZWVuIHRoZSB0d28gYXJyYXlzIGJlY2F1c2UgdGhleSBhcmUgZGlyZWN0bHkgdGllZFxuICAgIC8vIHRvIHRoZSBvcGNvZGUgYmVoYXZpb3IgYWJvdmUuXG4gICAgbGVuID0gdGhpcy5jaGlsZHJlbi5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgaWYgKCF0aGlzLmNoaWxkcmVuW2ldLmVxdWFscyhvdGhlci5jaGlsZHJlbltpXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIGd1aWQ6IDAsXG5cbiAgY29tcGlsZTogZnVuY3Rpb24ocHJvZ3JhbSwgb3B0aW9ucykge1xuICAgIHRoaXMuc291cmNlTm9kZSA9IFtdO1xuICAgIHRoaXMub3Bjb2RlcyA9IFtdO1xuICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMuc3RyaW5nUGFyYW1zID0gb3B0aW9ucy5zdHJpbmdQYXJhbXM7XG4gICAgdGhpcy50cmFja0lkcyA9IG9wdGlvbnMudHJhY2tJZHM7XG5cbiAgICBvcHRpb25zLmJsb2NrUGFyYW1zID0gb3B0aW9ucy5ibG9ja1BhcmFtcyB8fCBbXTtcblxuICAgIC8vIFRoZXNlIGNoYW5nZXMgd2lsbCBwcm9wYWdhdGUgdG8gdGhlIG90aGVyIGNvbXBpbGVyIGNvbXBvbmVudHNcbiAgICBsZXQga25vd25IZWxwZXJzID0gb3B0aW9ucy5rbm93bkhlbHBlcnM7XG4gICAgb3B0aW9ucy5rbm93bkhlbHBlcnMgPSB7XG4gICAgICAnaGVscGVyTWlzc2luZyc6IHRydWUsXG4gICAgICAnYmxvY2tIZWxwZXJNaXNzaW5nJzogdHJ1ZSxcbiAgICAgICdlYWNoJzogdHJ1ZSxcbiAgICAgICdpZic6IHRydWUsXG4gICAgICAndW5sZXNzJzogdHJ1ZSxcbiAgICAgICd3aXRoJzogdHJ1ZSxcbiAgICAgICdsb2cnOiB0cnVlLFxuICAgICAgJ2xvb2t1cCc6IHRydWVcbiAgICB9O1xuICAgIGlmIChrbm93bkhlbHBlcnMpIHtcbiAgICAgIGZvciAobGV0IG5hbWUgaW4ga25vd25IZWxwZXJzKSB7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICAgIGlmIChuYW1lIGluIGtub3duSGVscGVycykge1xuICAgICAgICAgIG9wdGlvbnMua25vd25IZWxwZXJzW25hbWVdID0ga25vd25IZWxwZXJzW25hbWVdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuYWNjZXB0KHByb2dyYW0pO1xuICB9LFxuXG4gIGNvbXBpbGVQcm9ncmFtOiBmdW5jdGlvbihwcm9ncmFtKSB7XG4gICAgbGV0IGNoaWxkQ29tcGlsZXIgPSBuZXcgdGhpcy5jb21waWxlcigpLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5ldy1jYXBcbiAgICAgICAgcmVzdWx0ID0gY2hpbGRDb21waWxlci5jb21waWxlKHByb2dyYW0sIHRoaXMub3B0aW9ucyksXG4gICAgICAgIGd1aWQgPSB0aGlzLmd1aWQrKztcblxuICAgIHRoaXMudXNlUGFydGlhbCA9IHRoaXMudXNlUGFydGlhbCB8fCByZXN1bHQudXNlUGFydGlhbDtcblxuICAgIHRoaXMuY2hpbGRyZW5bZ3VpZF0gPSByZXN1bHQ7XG4gICAgdGhpcy51c2VEZXB0aHMgPSB0aGlzLnVzZURlcHRocyB8fCByZXN1bHQudXNlRGVwdGhzO1xuXG4gICAgcmV0dXJuIGd1aWQ7XG4gIH0sXG5cbiAgYWNjZXB0OiBmdW5jdGlvbihub2RlKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IFNhbml0eSBjb2RlICovXG4gICAgaWYgKCF0aGlzW25vZGUudHlwZV0pIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ1Vua25vd24gdHlwZTogJyArIG5vZGUudHlwZSwgbm9kZSk7XG4gICAgfVxuXG4gICAgdGhpcy5zb3VyY2VOb2RlLnVuc2hpZnQobm9kZSk7XG4gICAgbGV0IHJldCA9IHRoaXNbbm9kZS50eXBlXShub2RlKTtcbiAgICB0aGlzLnNvdXJjZU5vZGUuc2hpZnQoKTtcbiAgICByZXR1cm4gcmV0O1xuICB9LFxuXG4gIFByb2dyYW06IGZ1bmN0aW9uKHByb2dyYW0pIHtcbiAgICB0aGlzLm9wdGlvbnMuYmxvY2tQYXJhbXMudW5zaGlmdChwcm9ncmFtLmJsb2NrUGFyYW1zKTtcblxuICAgIGxldCBib2R5ID0gcHJvZ3JhbS5ib2R5LFxuICAgICAgICBib2R5TGVuZ3RoID0gYm9keS5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBib2R5TGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuYWNjZXB0KGJvZHlbaV0pO1xuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucy5ibG9ja1BhcmFtcy5zaGlmdCgpO1xuXG4gICAgdGhpcy5pc1NpbXBsZSA9IGJvZHlMZW5ndGggPT09IDE7XG4gICAgdGhpcy5ibG9ja1BhcmFtcyA9IHByb2dyYW0uYmxvY2tQYXJhbXMgPyBwcm9ncmFtLmJsb2NrUGFyYW1zLmxlbmd0aCA6IDA7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfSxcblxuICBCbG9ja1N0YXRlbWVudDogZnVuY3Rpb24oYmxvY2spIHtcbiAgICB0cmFuc2Zvcm1MaXRlcmFsVG9QYXRoKGJsb2NrKTtcblxuICAgIGxldCBwcm9ncmFtID0gYmxvY2sucHJvZ3JhbSxcbiAgICAgICAgaW52ZXJzZSA9IGJsb2NrLmludmVyc2U7XG5cbiAgICBwcm9ncmFtID0gcHJvZ3JhbSAmJiB0aGlzLmNvbXBpbGVQcm9ncmFtKHByb2dyYW0pO1xuICAgIGludmVyc2UgPSBpbnZlcnNlICYmIHRoaXMuY29tcGlsZVByb2dyYW0oaW52ZXJzZSk7XG5cbiAgICBsZXQgdHlwZSA9IHRoaXMuY2xhc3NpZnlTZXhwcihibG9jayk7XG5cbiAgICBpZiAodHlwZSA9PT0gJ2hlbHBlcicpIHtcbiAgICAgIHRoaXMuaGVscGVyU2V4cHIoYmxvY2ssIHByb2dyYW0sIGludmVyc2UpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3NpbXBsZScpIHtcbiAgICAgIHRoaXMuc2ltcGxlU2V4cHIoYmxvY2spO1xuXG4gICAgICAvLyBub3cgdGhhdCB0aGUgc2ltcGxlIG11c3RhY2hlIGlzIHJlc29sdmVkLCB3ZSBuZWVkIHRvXG4gICAgICAvLyBldmFsdWF0ZSBpdCBieSBleGVjdXRpbmcgYGJsb2NrSGVscGVyTWlzc2luZ2BcbiAgICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIHByb2dyYW0pO1xuICAgICAgdGhpcy5vcGNvZGUoJ3B1c2hQcm9ncmFtJywgaW52ZXJzZSk7XG4gICAgICB0aGlzLm9wY29kZSgnZW1wdHlIYXNoJyk7XG4gICAgICB0aGlzLm9wY29kZSgnYmxvY2tWYWx1ZScsIGJsb2NrLnBhdGgub3JpZ2luYWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFtYmlndW91c1NleHByKGJsb2NrLCBwcm9ncmFtLCBpbnZlcnNlKTtcblxuICAgICAgLy8gbm93IHRoYXQgdGhlIHNpbXBsZSBtdXN0YWNoZSBpcyByZXNvbHZlZCwgd2UgbmVlZCB0b1xuICAgICAgLy8gZXZhbHVhdGUgaXQgYnkgZXhlY3V0aW5nIGBibG9ja0hlbHBlck1pc3NpbmdgXG4gICAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBwcm9ncmFtKTtcbiAgICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIGludmVyc2UpO1xuICAgICAgdGhpcy5vcGNvZGUoJ2VtcHR5SGFzaCcpO1xuICAgICAgdGhpcy5vcGNvZGUoJ2FtYmlndW91c0Jsb2NrVmFsdWUnKTtcbiAgICB9XG5cbiAgICB0aGlzLm9wY29kZSgnYXBwZW5kJyk7XG4gIH0sXG5cbiAgRGVjb3JhdG9yQmxvY2soZGVjb3JhdG9yKSB7XG4gICAgbGV0IHByb2dyYW0gPSBkZWNvcmF0b3IucHJvZ3JhbSAmJiB0aGlzLmNvbXBpbGVQcm9ncmFtKGRlY29yYXRvci5wcm9ncmFtKTtcbiAgICBsZXQgcGFyYW1zID0gdGhpcy5zZXR1cEZ1bGxNdXN0YWNoZVBhcmFtcyhkZWNvcmF0b3IsIHByb2dyYW0sIHVuZGVmaW5lZCksXG4gICAgICAgIHBhdGggPSBkZWNvcmF0b3IucGF0aDtcblxuICAgIHRoaXMudXNlRGVjb3JhdG9ycyA9IHRydWU7XG4gICAgdGhpcy5vcGNvZGUoJ3JlZ2lzdGVyRGVjb3JhdG9yJywgcGFyYW1zLmxlbmd0aCwgcGF0aC5vcmlnaW5hbCk7XG4gIH0sXG5cbiAgUGFydGlhbFN0YXRlbWVudDogZnVuY3Rpb24ocGFydGlhbCkge1xuICAgIHRoaXMudXNlUGFydGlhbCA9IHRydWU7XG5cbiAgICBsZXQgcHJvZ3JhbSA9IHBhcnRpYWwucHJvZ3JhbTtcbiAgICBpZiAocHJvZ3JhbSkge1xuICAgICAgcHJvZ3JhbSA9IHRoaXMuY29tcGlsZVByb2dyYW0ocGFydGlhbC5wcm9ncmFtKTtcbiAgICB9XG5cbiAgICBsZXQgcGFyYW1zID0gcGFydGlhbC5wYXJhbXM7XG4gICAgaWYgKHBhcmFtcy5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdVbnN1cHBvcnRlZCBudW1iZXIgb2YgcGFydGlhbCBhcmd1bWVudHM6ICcgKyBwYXJhbXMubGVuZ3RoLCBwYXJ0aWFsKTtcbiAgICB9IGVsc2UgaWYgKCFwYXJhbXMubGVuZ3RoKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmV4cGxpY2l0UGFydGlhbENvbnRleHQpIHtcbiAgICAgICAgdGhpcy5vcGNvZGUoJ3B1c2hMaXRlcmFsJywgJ3VuZGVmaW5lZCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyYW1zLnB1c2goe3R5cGU6ICdQYXRoRXhwcmVzc2lvbicsIHBhcnRzOiBbXSwgZGVwdGg6IDB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgcGFydGlhbE5hbWUgPSBwYXJ0aWFsLm5hbWUub3JpZ2luYWwsXG4gICAgICAgIGlzRHluYW1pYyA9IHBhcnRpYWwubmFtZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbic7XG4gICAgaWYgKGlzRHluYW1pYykge1xuICAgICAgdGhpcy5hY2NlcHQocGFydGlhbC5uYW1lKTtcbiAgICB9XG5cbiAgICB0aGlzLnNldHVwRnVsbE11c3RhY2hlUGFyYW1zKHBhcnRpYWwsIHByb2dyYW0sIHVuZGVmaW5lZCwgdHJ1ZSk7XG5cbiAgICBsZXQgaW5kZW50ID0gcGFydGlhbC5pbmRlbnQgfHwgJyc7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5wcmV2ZW50SW5kZW50ICYmIGluZGVudCkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZENvbnRlbnQnLCBpbmRlbnQpO1xuICAgICAgaW5kZW50ID0gJyc7XG4gICAgfVxuXG4gICAgdGhpcy5vcGNvZGUoJ2ludm9rZVBhcnRpYWwnLCBpc0R5bmFtaWMsIHBhcnRpYWxOYW1lLCBpbmRlbnQpO1xuICAgIHRoaXMub3Bjb2RlKCdhcHBlbmQnKTtcbiAgfSxcbiAgUGFydGlhbEJsb2NrU3RhdGVtZW50OiBmdW5jdGlvbihwYXJ0aWFsQmxvY2spIHtcbiAgICB0aGlzLlBhcnRpYWxTdGF0ZW1lbnQocGFydGlhbEJsb2NrKTtcbiAgfSxcblxuICBNdXN0YWNoZVN0YXRlbWVudDogZnVuY3Rpb24obXVzdGFjaGUpIHtcbiAgICB0aGlzLlN1YkV4cHJlc3Npb24obXVzdGFjaGUpO1xuXG4gICAgaWYgKG11c3RhY2hlLmVzY2FwZWQgJiYgIXRoaXMub3B0aW9ucy5ub0VzY2FwZSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZEVzY2FwZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZCcpO1xuICAgIH1cbiAgfSxcbiAgRGVjb3JhdG9yKGRlY29yYXRvcikge1xuICAgIHRoaXMuRGVjb3JhdG9yQmxvY2soZGVjb3JhdG9yKTtcbiAgfSxcblxuXG4gIENvbnRlbnRTdGF0ZW1lbnQ6IGZ1bmN0aW9uKGNvbnRlbnQpIHtcbiAgICBpZiAoY29udGVudC52YWx1ZSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZENvbnRlbnQnLCBjb250ZW50LnZhbHVlKTtcbiAgICB9XG4gIH0sXG5cbiAgQ29tbWVudFN0YXRlbWVudDogZnVuY3Rpb24oKSB7fSxcblxuICBTdWJFeHByZXNzaW9uOiBmdW5jdGlvbihzZXhwcikge1xuICAgIHRyYW5zZm9ybUxpdGVyYWxUb1BhdGgoc2V4cHIpO1xuICAgIGxldCB0eXBlID0gdGhpcy5jbGFzc2lmeVNleHByKHNleHByKTtcblxuICAgIGlmICh0eXBlID09PSAnc2ltcGxlJykge1xuICAgICAgdGhpcy5zaW1wbGVTZXhwcihzZXhwcik7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnaGVscGVyJykge1xuICAgICAgdGhpcy5oZWxwZXJTZXhwcihzZXhwcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuYW1iaWd1b3VzU2V4cHIoc2V4cHIpO1xuICAgIH1cbiAgfSxcbiAgYW1iaWd1b3VzU2V4cHI6IGZ1bmN0aW9uKHNleHByLCBwcm9ncmFtLCBpbnZlcnNlKSB7XG4gICAgbGV0IHBhdGggPSBzZXhwci5wYXRoLFxuICAgICAgICBuYW1lID0gcGF0aC5wYXJ0c1swXSxcbiAgICAgICAgaXNCbG9jayA9IHByb2dyYW0gIT0gbnVsbCB8fCBpbnZlcnNlICE9IG51bGw7XG5cbiAgICB0aGlzLm9wY29kZSgnZ2V0Q29udGV4dCcsIHBhdGguZGVwdGgpO1xuXG4gICAgdGhpcy5vcGNvZGUoJ3B1c2hQcm9ncmFtJywgcHJvZ3JhbSk7XG4gICAgdGhpcy5vcGNvZGUoJ3B1c2hQcm9ncmFtJywgaW52ZXJzZSk7XG5cbiAgICBwYXRoLnN0cmljdCA9IHRydWU7XG4gICAgdGhpcy5hY2NlcHQocGF0aCk7XG5cbiAgICB0aGlzLm9wY29kZSgnaW52b2tlQW1iaWd1b3VzJywgbmFtZSwgaXNCbG9jayk7XG4gIH0sXG5cbiAgc2ltcGxlU2V4cHI6IGZ1bmN0aW9uKHNleHByKSB7XG4gICAgbGV0IHBhdGggPSBzZXhwci5wYXRoO1xuICAgIHBhdGguc3RyaWN0ID0gdHJ1ZTtcbiAgICB0aGlzLmFjY2VwdChwYXRoKTtcbiAgICB0aGlzLm9wY29kZSgncmVzb2x2ZVBvc3NpYmxlTGFtYmRhJyk7XG4gIH0sXG5cbiAgaGVscGVyU2V4cHI6IGZ1bmN0aW9uKHNleHByLCBwcm9ncmFtLCBpbnZlcnNlKSB7XG4gICAgbGV0IHBhcmFtcyA9IHRoaXMuc2V0dXBGdWxsTXVzdGFjaGVQYXJhbXMoc2V4cHIsIHByb2dyYW0sIGludmVyc2UpLFxuICAgICAgICBwYXRoID0gc2V4cHIucGF0aCxcbiAgICAgICAgbmFtZSA9IHBhdGgucGFydHNbMF07XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmtub3duSGVscGVyc1tuYW1lXSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2ludm9rZUtub3duSGVscGVyJywgcGFyYW1zLmxlbmd0aCwgbmFtZSk7XG4gICAgfSBlbHNlIGlmICh0aGlzLm9wdGlvbnMua25vd25IZWxwZXJzT25seSkge1xuICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignWW91IHNwZWNpZmllZCBrbm93bkhlbHBlcnNPbmx5LCBidXQgdXNlZCB0aGUgdW5rbm93biBoZWxwZXIgJyArIG5hbWUsIHNleHByKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGF0aC5zdHJpY3QgPSB0cnVlO1xuICAgICAgcGF0aC5mYWxzeSA9IHRydWU7XG5cbiAgICAgIHRoaXMuYWNjZXB0KHBhdGgpO1xuICAgICAgdGhpcy5vcGNvZGUoJ2ludm9rZUhlbHBlcicsIHBhcmFtcy5sZW5ndGgsIHBhdGgub3JpZ2luYWwsIEFTVC5oZWxwZXJzLnNpbXBsZUlkKHBhdGgpKTtcbiAgICB9XG4gIH0sXG5cbiAgUGF0aEV4cHJlc3Npb246IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICB0aGlzLmFkZERlcHRoKHBhdGguZGVwdGgpO1xuICAgIHRoaXMub3Bjb2RlKCdnZXRDb250ZXh0JywgcGF0aC5kZXB0aCk7XG5cbiAgICBsZXQgbmFtZSA9IHBhdGgucGFydHNbMF0sXG4gICAgICAgIHNjb3BlZCA9IEFTVC5oZWxwZXJzLnNjb3BlZElkKHBhdGgpLFxuICAgICAgICBibG9ja1BhcmFtSWQgPSAhcGF0aC5kZXB0aCAmJiAhc2NvcGVkICYmIHRoaXMuYmxvY2tQYXJhbUluZGV4KG5hbWUpO1xuXG4gICAgaWYgKGJsb2NrUGFyYW1JZCkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2xvb2t1cEJsb2NrUGFyYW0nLCBibG9ja1BhcmFtSWQsIHBhdGgucGFydHMpO1xuICAgIH0gZWxzZSBpZiAoIW5hbWUpIHtcbiAgICAgIC8vIENvbnRleHQgcmVmZXJlbmNlLCBpLmUuIGB7e2ZvbyAufX1gIG9yIGB7e2ZvbyAuLn19YFxuICAgICAgdGhpcy5vcGNvZGUoJ3B1c2hDb250ZXh0Jyk7XG4gICAgfSBlbHNlIGlmIChwYXRoLmRhdGEpIHtcbiAgICAgIHRoaXMub3B0aW9ucy5kYXRhID0gdHJ1ZTtcbiAgICAgIHRoaXMub3Bjb2RlKCdsb29rdXBEYXRhJywgcGF0aC5kZXB0aCwgcGF0aC5wYXJ0cywgcGF0aC5zdHJpY3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9wY29kZSgnbG9va3VwT25Db250ZXh0JywgcGF0aC5wYXJ0cywgcGF0aC5mYWxzeSwgcGF0aC5zdHJpY3QsIHNjb3BlZCk7XG4gICAgfVxuICB9LFxuXG4gIFN0cmluZ0xpdGVyYWw6IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHRoaXMub3Bjb2RlKCdwdXNoU3RyaW5nJywgc3RyaW5nLnZhbHVlKTtcbiAgfSxcblxuICBOdW1iZXJMaXRlcmFsOiBmdW5jdGlvbihudW1iZXIpIHtcbiAgICB0aGlzLm9wY29kZSgncHVzaExpdGVyYWwnLCBudW1iZXIudmFsdWUpO1xuICB9LFxuXG4gIEJvb2xlYW5MaXRlcmFsOiBmdW5jdGlvbihib29sKSB7XG4gICAgdGhpcy5vcGNvZGUoJ3B1c2hMaXRlcmFsJywgYm9vbC52YWx1ZSk7XG4gIH0sXG5cbiAgVW5kZWZpbmVkTGl0ZXJhbDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vcGNvZGUoJ3B1c2hMaXRlcmFsJywgJ3VuZGVmaW5lZCcpO1xuICB9LFxuXG4gIE51bGxMaXRlcmFsOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLm9wY29kZSgncHVzaExpdGVyYWwnLCAnbnVsbCcpO1xuICB9LFxuXG4gIEhhc2g6IGZ1bmN0aW9uKGhhc2gpIHtcbiAgICBsZXQgcGFpcnMgPSBoYXNoLnBhaXJzLFxuICAgICAgICBpID0gMCxcbiAgICAgICAgbCA9IHBhaXJzLmxlbmd0aDtcblxuICAgIHRoaXMub3Bjb2RlKCdwdXNoSGFzaCcpO1xuXG4gICAgZm9yICg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRoaXMucHVzaFBhcmFtKHBhaXJzW2ldLnZhbHVlKTtcbiAgICB9XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2Fzc2lnblRvSGFzaCcsIHBhaXJzW2ldLmtleSk7XG4gICAgfVxuICAgIHRoaXMub3Bjb2RlKCdwb3BIYXNoJyk7XG4gIH0sXG5cbiAgLy8gSEVMUEVSU1xuICBvcGNvZGU6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB0aGlzLm9wY29kZXMucHVzaCh7IG9wY29kZTogbmFtZSwgYXJnczogc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLCBsb2M6IHRoaXMuc291cmNlTm9kZVswXS5sb2MgfSk7XG4gIH0sXG5cbiAgYWRkRGVwdGg6IGZ1bmN0aW9uKGRlcHRoKSB7XG4gICAgaWYgKCFkZXB0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudXNlRGVwdGhzID0gdHJ1ZTtcbiAgfSxcblxuICBjbGFzc2lmeVNleHByOiBmdW5jdGlvbihzZXhwcikge1xuICAgIGxldCBpc1NpbXBsZSA9IEFTVC5oZWxwZXJzLnNpbXBsZUlkKHNleHByLnBhdGgpO1xuXG4gICAgbGV0IGlzQmxvY2tQYXJhbSA9IGlzU2ltcGxlICYmICEhdGhpcy5ibG9ja1BhcmFtSW5kZXgoc2V4cHIucGF0aC5wYXJ0c1swXSk7XG5cbiAgICAvLyBhIG11c3RhY2hlIGlzIGFuIGVsaWdpYmxlIGhlbHBlciBpZjpcbiAgICAvLyAqIGl0cyBpZCBpcyBzaW1wbGUgKGEgc2luZ2xlIHBhcnQsIG5vdCBgdGhpc2Agb3IgYC4uYClcbiAgICBsZXQgaXNIZWxwZXIgPSAhaXNCbG9ja1BhcmFtICYmIEFTVC5oZWxwZXJzLmhlbHBlckV4cHJlc3Npb24oc2V4cHIpO1xuXG4gICAgLy8gaWYgYSBtdXN0YWNoZSBpcyBhbiBlbGlnaWJsZSBoZWxwZXIgYnV0IG5vdCBhIGRlZmluaXRlXG4gICAgLy8gaGVscGVyLCBpdCBpcyBhbWJpZ3VvdXMsIGFuZCB3aWxsIGJlIHJlc29sdmVkIGluIGEgbGF0ZXJcbiAgICAvLyBwYXNzIG9yIGF0IHJ1bnRpbWUuXG4gICAgbGV0IGlzRWxpZ2libGUgPSAhaXNCbG9ja1BhcmFtICYmIChpc0hlbHBlciB8fCBpc1NpbXBsZSk7XG5cbiAgICAvLyBpZiBhbWJpZ3VvdXMsIHdlIGNhbiBwb3NzaWJseSByZXNvbHZlIHRoZSBhbWJpZ3VpdHkgbm93XG4gICAgLy8gQW4gZWxpZ2libGUgaGVscGVyIGlzIG9uZSB0aGF0IGRvZXMgbm90IGhhdmUgYSBjb21wbGV4IHBhdGgsIGkuZS4gYHRoaXMuZm9vYCwgYC4uL2Zvb2AgZXRjLlxuICAgIGlmIChpc0VsaWdpYmxlICYmICFpc0hlbHBlcikge1xuICAgICAgbGV0IG5hbWUgPSBzZXhwci5wYXRoLnBhcnRzWzBdLFxuICAgICAgICAgIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG5cbiAgICAgIGlmIChvcHRpb25zLmtub3duSGVscGVyc1tuYW1lXSkge1xuICAgICAgICBpc0hlbHBlciA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKG9wdGlvbnMua25vd25IZWxwZXJzT25seSkge1xuICAgICAgICBpc0VsaWdpYmxlID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzSGVscGVyKSB7XG4gICAgICByZXR1cm4gJ2hlbHBlcic7XG4gICAgfSBlbHNlIGlmIChpc0VsaWdpYmxlKSB7XG4gICAgICByZXR1cm4gJ2FtYmlndW91cyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnc2ltcGxlJztcbiAgICB9XG4gIH0sXG5cbiAgcHVzaFBhcmFtczogZnVuY3Rpb24ocGFyYW1zKSB7XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBwYXJhbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICB0aGlzLnB1c2hQYXJhbShwYXJhbXNbaV0pO1xuICAgIH1cbiAgfSxcblxuICBwdXNoUGFyYW06IGZ1bmN0aW9uKHZhbCkge1xuICAgIGxldCB2YWx1ZSA9IHZhbC52YWx1ZSAhPSBudWxsID8gdmFsLnZhbHVlIDogdmFsLm9yaWdpbmFsIHx8ICcnO1xuXG4gICAgaWYgKHRoaXMuc3RyaW5nUGFyYW1zKSB7XG4gICAgICBpZiAodmFsdWUucmVwbGFjZSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAucmVwbGFjZSgvXihcXC4/XFwuXFwvKSovZywgJycpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFwvL2csICcuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWwuZGVwdGgpIHtcbiAgICAgICAgdGhpcy5hZGREZXB0aCh2YWwuZGVwdGgpO1xuICAgICAgfVxuICAgICAgdGhpcy5vcGNvZGUoJ2dldENvbnRleHQnLCB2YWwuZGVwdGggfHwgMCk7XG4gICAgICB0aGlzLm9wY29kZSgncHVzaFN0cmluZ1BhcmFtJywgdmFsdWUsIHZhbC50eXBlKTtcblxuICAgICAgaWYgKHZhbC50eXBlID09PSAnU3ViRXhwcmVzc2lvbicpIHtcbiAgICAgICAgLy8gU3ViRXhwcmVzc2lvbnMgZ2V0IGV2YWx1YXRlZCBhbmQgcGFzc2VkIGluXG4gICAgICAgIC8vIGluIHN0cmluZyBwYXJhbXMgbW9kZS5cbiAgICAgICAgdGhpcy5hY2NlcHQodmFsKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHRoaXMudHJhY2tJZHMpIHtcbiAgICAgICAgbGV0IGJsb2NrUGFyYW1JbmRleDtcbiAgICAgICAgaWYgKHZhbC5wYXJ0cyAmJiAhQVNULmhlbHBlcnMuc2NvcGVkSWQodmFsKSAmJiAhdmFsLmRlcHRoKSB7XG4gICAgICAgICAgIGJsb2NrUGFyYW1JbmRleCA9IHRoaXMuYmxvY2tQYXJhbUluZGV4KHZhbC5wYXJ0c1swXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJsb2NrUGFyYW1JbmRleCkge1xuICAgICAgICAgIGxldCBibG9ja1BhcmFtQ2hpbGQgPSB2YWwucGFydHMuc2xpY2UoMSkuam9pbignLicpO1xuICAgICAgICAgIHRoaXMub3Bjb2RlKCdwdXNoSWQnLCAnQmxvY2tQYXJhbScsIGJsb2NrUGFyYW1JbmRleCwgYmxvY2tQYXJhbUNoaWxkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IHZhbC5vcmlnaW5hbCB8fCB2YWx1ZTtcbiAgICAgICAgICBpZiAodmFsdWUucmVwbGFjZSkge1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9edGhpcyg/OlxcLnwkKS8sICcnKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9eXFwuXFwvLywgJycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL15cXC4kLywgJycpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMub3Bjb2RlKCdwdXNoSWQnLCB2YWwudHlwZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmFjY2VwdCh2YWwpO1xuICAgIH1cbiAgfSxcblxuICBzZXR1cEZ1bGxNdXN0YWNoZVBhcmFtczogZnVuY3Rpb24oc2V4cHIsIHByb2dyYW0sIGludmVyc2UsIG9taXRFbXB0eSkge1xuICAgIGxldCBwYXJhbXMgPSBzZXhwci5wYXJhbXM7XG4gICAgdGhpcy5wdXNoUGFyYW1zKHBhcmFtcyk7XG5cbiAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBwcm9ncmFtKTtcbiAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBpbnZlcnNlKTtcblxuICAgIGlmIChzZXhwci5oYXNoKSB7XG4gICAgICB0aGlzLmFjY2VwdChzZXhwci5oYXNoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcGNvZGUoJ2VtcHR5SGFzaCcsIG9taXRFbXB0eSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcmFtcztcbiAgfSxcblxuICBibG9ja1BhcmFtSW5kZXg6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBmb3IgKGxldCBkZXB0aCA9IDAsIGxlbiA9IHRoaXMub3B0aW9ucy5ibG9ja1BhcmFtcy5sZW5ndGg7IGRlcHRoIDwgbGVuOyBkZXB0aCsrKSB7XG4gICAgICBsZXQgYmxvY2tQYXJhbXMgPSB0aGlzLm9wdGlvbnMuYmxvY2tQYXJhbXNbZGVwdGhdLFxuICAgICAgICAgIHBhcmFtID0gYmxvY2tQYXJhbXMgJiYgaW5kZXhPZihibG9ja1BhcmFtcywgbmFtZSk7XG4gICAgICBpZiAoYmxvY2tQYXJhbXMgJiYgcGFyYW0gPj0gMCkge1xuICAgICAgICByZXR1cm4gW2RlcHRoLCBwYXJhbV07XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcHJlY29tcGlsZShpbnB1dCwgb3B0aW9ucywgZW52KSB7XG4gIGlmIChpbnB1dCA9PSBudWxsIHx8ICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnICYmIGlucHV0LnR5cGUgIT09ICdQcm9ncmFtJykpIHtcbiAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdZb3UgbXVzdCBwYXNzIGEgc3RyaW5nIG9yIEhhbmRsZWJhcnMgQVNUIHRvIEhhbmRsZWJhcnMucHJlY29tcGlsZS4gWW91IHBhc3NlZCAnICsgaW5wdXQpO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmICghKCdkYXRhJyBpbiBvcHRpb25zKSkge1xuICAgIG9wdGlvbnMuZGF0YSA9IHRydWU7XG4gIH1cbiAgaWYgKG9wdGlvbnMuY29tcGF0KSB7XG4gICAgb3B0aW9ucy51c2VEZXB0aHMgPSB0cnVlO1xuICB9XG5cbiAgbGV0IGFzdCA9IGVudi5wYXJzZShpbnB1dCwgb3B0aW9ucyksXG4gICAgICBlbnZpcm9ubWVudCA9IG5ldyBlbnYuQ29tcGlsZXIoKS5jb21waWxlKGFzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBuZXcgZW52LkphdmFTY3JpcHRDb21waWxlcigpLmNvbXBpbGUoZW52aXJvbm1lbnQsIG9wdGlvbnMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcGlsZShpbnB1dCwgb3B0aW9ucyA9IHt9LCBlbnYpIHtcbiAgaWYgKGlucHV0ID09IG51bGwgfHwgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycgJiYgaW5wdXQudHlwZSAhPT0gJ1Byb2dyYW0nKSkge1xuICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ1lvdSBtdXN0IHBhc3MgYSBzdHJpbmcgb3IgSGFuZGxlYmFycyBBU1QgdG8gSGFuZGxlYmFycy5jb21waWxlLiBZb3UgcGFzc2VkICcgKyBpbnB1dCk7XG4gIH1cblxuICBpZiAoISgnZGF0YScgaW4gb3B0aW9ucykpIHtcbiAgICBvcHRpb25zLmRhdGEgPSB0cnVlO1xuICB9XG4gIGlmIChvcHRpb25zLmNvbXBhdCkge1xuICAgIG9wdGlvbnMudXNlRGVwdGhzID0gdHJ1ZTtcbiAgfVxuXG4gIGxldCBjb21waWxlZDtcblxuICBmdW5jdGlvbiBjb21waWxlSW5wdXQoKSB7XG4gICAgbGV0IGFzdCA9IGVudi5wYXJzZShpbnB1dCwgb3B0aW9ucyksXG4gICAgICAgIGVudmlyb25tZW50ID0gbmV3IGVudi5Db21waWxlcigpLmNvbXBpbGUoYXN0LCBvcHRpb25zKSxcbiAgICAgICAgdGVtcGxhdGVTcGVjID0gbmV3IGVudi5KYXZhU2NyaXB0Q29tcGlsZXIoKS5jb21waWxlKGVudmlyb25tZW50LCBvcHRpb25zLCB1bmRlZmluZWQsIHRydWUpO1xuICAgIHJldHVybiBlbnYudGVtcGxhdGUodGVtcGxhdGVTcGVjKTtcbiAgfVxuXG4gIC8vIFRlbXBsYXRlIGlzIG9ubHkgY29tcGlsZWQgb24gZmlyc3QgdXNlIGFuZCBjYWNoZWQgYWZ0ZXIgdGhhdCBwb2ludC5cbiAgZnVuY3Rpb24gcmV0KGNvbnRleHQsIGV4ZWNPcHRpb25zKSB7XG4gICAgaWYgKCFjb21waWxlZCkge1xuICAgICAgY29tcGlsZWQgPSBjb21waWxlSW5wdXQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBpbGVkLmNhbGwodGhpcywgY29udGV4dCwgZXhlY09wdGlvbnMpO1xuICB9XG4gIHJldC5fc2V0dXAgPSBmdW5jdGlvbihzZXR1cE9wdGlvbnMpIHtcbiAgICBpZiAoIWNvbXBpbGVkKSB7XG4gICAgICBjb21waWxlZCA9IGNvbXBpbGVJbnB1dCgpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGlsZWQuX3NldHVwKHNldHVwT3B0aW9ucyk7XG4gIH07XG4gIHJldC5fY2hpbGQgPSBmdW5jdGlvbihpLCBkYXRhLCBibG9ja1BhcmFtcywgZGVwdGhzKSB7XG4gICAgaWYgKCFjb21waWxlZCkge1xuICAgICAgY29tcGlsZWQgPSBjb21waWxlSW5wdXQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBpbGVkLl9jaGlsZChpLCBkYXRhLCBibG9ja1BhcmFtcywgZGVwdGhzKTtcbiAgfTtcbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gYXJnRXF1YWxzKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChpc0FycmF5KGEpICYmIGlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWFyZ0VxdWFscyhhW2ldLCBiW2ldKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUxpdGVyYWxUb1BhdGgoc2V4cHIpIHtcbiAgaWYgKCFzZXhwci5wYXRoLnBhcnRzKSB7XG4gICAgbGV0IGxpdGVyYWwgPSBzZXhwci5wYXRoO1xuICAgIC8vIENhc3RpbmcgdG8gc3RyaW5nIGhlcmUgdG8gbWFrZSBmYWxzZSBhbmQgMCBsaXRlcmFsIHZhbHVlcyBwbGF5IG5pY2VseSB3aXRoIHRoZSByZXN0XG4gICAgLy8gb2YgdGhlIHN5c3RlbS5cbiAgICBzZXhwci5wYXRoID0ge1xuICAgICAgdHlwZTogJ1BhdGhFeHByZXNzaW9uJyxcbiAgICAgIGRhdGE6IGZhbHNlLFxuICAgICAgZGVwdGg6IDAsXG4gICAgICBwYXJ0czogW2xpdGVyYWwub3JpZ2luYWwgKyAnJ10sXG4gICAgICBvcmlnaW5hbDogbGl0ZXJhbC5vcmlnaW5hbCArICcnLFxuICAgICAgbG9jOiBsaXRlcmFsLmxvY1xuICAgIH07XG4gIH1cbn1cbiJdfQ==


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _base = __webpack_require__(15);

	var _exception = __webpack_require__(17);

	var _exception2 = _interopRequireDefault(_exception);

	var _utils = __webpack_require__(16);

	var _codeGen = __webpack_require__(40);

	var _codeGen2 = _interopRequireDefault(_codeGen);

	function Literal(value) {
	  this.value = value;
	}

	function JavaScriptCompiler() {}

	JavaScriptCompiler.prototype = {
	  // PUBLIC API: You can override these methods in a subclass to provide
	  // alternative compiled forms for name lookup and buffering semantics
	  nameLookup: function nameLookup(parent, name /* , type*/) {
	    if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
	      return [parent, '.', name];
	    } else {
	      return [parent, '[', JSON.stringify(name), ']'];
	    }
	  },
	  depthedLookup: function depthedLookup(name) {
	    return [this.aliasable('container.lookup'), '(depths, "', name, '")'];
	  },

	  compilerInfo: function compilerInfo() {
	    var revision = _base.COMPILER_REVISION,
	        versions = _base.REVISION_CHANGES[revision];
	    return [revision, versions];
	  },

	  appendToBuffer: function appendToBuffer(source, location, explicit) {
	    // Force a source as this simplifies the merge logic.
	    if (!_utils.isArray(source)) {
	      source = [source];
	    }
	    source = this.source.wrap(source, location);

	    if (this.environment.isSimple) {
	      return ['return ', source, ';'];
	    } else if (explicit) {
	      // This is a case where the buffer operation occurs as a child of another
	      // construct, generally braces. We have to explicitly output these buffer
	      // operations to ensure that the emitted code goes in the correct location.
	      return ['buffer += ', source, ';'];
	    } else {
	      source.appendToBuffer = true;
	      return source;
	    }
	  },

	  initializeBuffer: function initializeBuffer() {
	    return this.quotedString('');
	  },
	  // END PUBLIC API

	  compile: function compile(environment, options, context, asObject) {
	    this.environment = environment;
	    this.options = options;
	    this.stringParams = this.options.stringParams;
	    this.trackIds = this.options.trackIds;
	    this.precompile = !asObject;

	    this.name = this.environment.name;
	    this.isChild = !!context;
	    this.context = context || {
	      decorators: [],
	      programs: [],
	      environments: []
	    };

	    this.preamble();

	    this.stackSlot = 0;
	    this.stackVars = [];
	    this.aliases = {};
	    this.registers = { list: [] };
	    this.hashes = [];
	    this.compileStack = [];
	    this.inlineStack = [];
	    this.blockParams = [];

	    this.compileChildren(environment, options);

	    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;
	    this.useBlockParams = this.useBlockParams || environment.useBlockParams;

	    var opcodes = environment.opcodes,
	        opcode = undefined,
	        firstLoc = undefined,
	        i = undefined,
	        l = undefined;

	    for (i = 0, l = opcodes.length; i < l; i++) {
	      opcode = opcodes[i];

	      this.source.currentLocation = opcode.loc;
	      firstLoc = firstLoc || opcode.loc;
	      this[opcode.opcode].apply(this, opcode.args);
	    }

	    // Flush any trailing content that might be pending.
	    this.source.currentLocation = firstLoc;
	    this.pushSource('');

	    /* istanbul ignore next */
	    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {
	      throw new _exception2['default']('Compile completed with content left on stack');
	    }

	    if (!this.decorators.isEmpty()) {
	      this.useDecorators = true;

	      this.decorators.prepend('var decorators = container.decorators;\n');
	      this.decorators.push('return fn;');

	      if (asObject) {
	        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);
	      } else {
	        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\n');
	        this.decorators.push('}\n');
	        this.decorators = this.decorators.merge();
	      }
	    } else {
	      this.decorators = undefined;
	    }

	    var fn = this.createFunctionContext(asObject);
	    if (!this.isChild) {
	      var ret = {
	        compiler: this.compilerInfo(),
	        main: fn
	      };

	      if (this.decorators) {
	        ret.main_d = this.decorators; // eslint-disable-line camelcase
	        ret.useDecorators = true;
	      }

	      var _context = this.context;
	      var programs = _context.programs;
	      var decorators = _context.decorators;

	      for (i = 0, l = programs.length; i < l; i++) {
	        if (programs[i]) {
	          ret[i] = programs[i];
	          if (decorators[i]) {
	            ret[i + '_d'] = decorators[i];
	            ret.useDecorators = true;
	          }
	        }
	      }

	      if (this.environment.usePartial) {
	        ret.usePartial = true;
	      }
	      if (this.options.data) {
	        ret.useData = true;
	      }
	      if (this.useDepths) {
	        ret.useDepths = true;
	      }
	      if (this.useBlockParams) {
	        ret.useBlockParams = true;
	      }
	      if (this.options.compat) {
	        ret.compat = true;
	      }

	      if (!asObject) {
	        ret.compiler = JSON.stringify(ret.compiler);

	        this.source.currentLocation = { start: { line: 1, column: 0 } };
	        ret = this.objectLiteral(ret);

	        if (options.srcName) {
	          ret = ret.toStringWithSourceMap({ file: options.destName });
	          ret.map = ret.map && ret.map.toString();
	        } else {
	          ret = ret.toString();
	        }
	      } else {
	        ret.compilerOptions = this.options;
	      }

	      return ret;
	    } else {
	      return fn;
	    }
	  },

	  preamble: function preamble() {
	    // track the last context pushed into place to allow skipping the
	    // getContext opcode when it would be a noop
	    this.lastContext = 0;
	    this.source = new _codeGen2['default'](this.options.srcName);
	    this.decorators = new _codeGen2['default'](this.options.srcName);
	  },

	  createFunctionContext: function createFunctionContext(asObject) {
	    var varDeclarations = '';

	    var locals = this.stackVars.concat(this.registers.list);
	    if (locals.length > 0) {
	      varDeclarations += ', ' + locals.join(', ');
	    }

	    // Generate minimizer alias mappings
	    //
	    // When using true SourceNodes, this will update all references to the given alias
	    // as the source nodes are reused in situ. For the non-source node compilation mode,
	    // aliases will not be used, but this case is already being run on the client and
	    // we aren't concern about minimizing the template size.
	    var aliasCount = 0;
	    for (var alias in this.aliases) {
	      // eslint-disable-line guard-for-in
	      var node = this.aliases[alias];

	      if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {
	        varDeclarations += ', alias' + ++aliasCount + '=' + alias;
	        node.children[0] = 'alias' + aliasCount;
	      }
	    }

	    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];

	    if (this.useBlockParams || this.useDepths) {
	      params.push('blockParams');
	    }
	    if (this.useDepths) {
	      params.push('depths');
	    }

	    // Perform a second pass over the output to merge content when possible
	    var source = this.mergeSource(varDeclarations);

	    if (asObject) {
	      params.push(source);

	      return Function.apply(this, params);
	    } else {
	      return this.source.wrap(['function(', params.join(','), ') {\n  ', source, '}']);
	    }
	  },
	  mergeSource: function mergeSource(varDeclarations) {
	    var isSimple = this.environment.isSimple,
	        appendOnly = !this.forceBuffer,
	        appendFirst = undefined,
	        sourceSeen = undefined,
	        bufferStart = undefined,
	        bufferEnd = undefined;
	    this.source.each(function (line) {
	      if (line.appendToBuffer) {
	        if (bufferStart) {
	          line.prepend('  + ');
	        } else {
	          bufferStart = line;
	        }
	        bufferEnd = line;
	      } else {
	        if (bufferStart) {
	          if (!sourceSeen) {
	            appendFirst = true;
	          } else {
	            bufferStart.prepend('buffer += ');
	          }
	          bufferEnd.add(';');
	          bufferStart = bufferEnd = undefined;
	        }

	        sourceSeen = true;
	        if (!isSimple) {
	          appendOnly = false;
	        }
	      }
	    });

	    if (appendOnly) {
	      if (bufferStart) {
	        bufferStart.prepend('return ');
	        bufferEnd.add(';');
	      } else if (!sourceSeen) {
	        this.source.push('return "";');
	      }
	    } else {
	      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

	      if (bufferStart) {
	        bufferStart.prepend('return buffer + ');
	        bufferEnd.add(';');
	      } else {
	        this.source.push('return buffer;');
	      }
	    }

	    if (varDeclarations) {
	      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\n'));
	    }

	    return this.source.merge();
	  },

	  // [blockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // On stack, after: return value of blockHelperMissing
	  //
	  // The purpose of this opcode is to take a block of the form
	  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
	  // replace it on the stack with the result of properly
	  // invoking blockHelperMissing.
	  blockValue: function blockValue(name) {
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs(name, 0, params);

	    var blockName = this.popStack();
	    params.splice(1, 0, blockName);

	    this.push(this.source.functionCall(blockHelperMissing, 'call', params));
	  },

	  // [ambiguousBlockValue]
	  //
	  // On stack, before: hash, inverse, program, value
	  // Compiler value, before: lastHelper=value of last found helper, if any
	  // On stack, after, if no lastHelper: same as [blockValue]
	  // On stack, after, if lastHelper: value
	  ambiguousBlockValue: function ambiguousBlockValue() {
	    // We're being a bit cheeky and reusing the options value from the prior exec
	    var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),
	        params = [this.contextName(0)];
	    this.setupHelperArgs('', 0, params, true);

	    this.flushInline();

	    var current = this.topStack();
	    params.splice(1, 0, current);

	    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);
	  },

	  // [appendContent]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  //
	  // Appends the string value of `content` to the current buffer
	  appendContent: function appendContent(content) {
	    if (this.pendingContent) {
	      content = this.pendingContent + content;
	    } else {
	      this.pendingLocation = this.source.currentLocation;
	    }

	    this.pendingContent = content;
	  },

	  // [append]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Coerces `value` to a String and appends it to the current buffer.
	  //
	  // If `value` is truthy, or 0, it is coerced into a string and appended
	  // Otherwise, the empty string is appended
	  append: function append() {
	    if (this.isInline()) {
	      this.replaceStack(function (current) {
	        return [' != null ? ', current, ' : ""'];
	      });

	      this.pushSource(this.appendToBuffer(this.popStack()));
	    } else {
	      var local = this.popStack();
	      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);
	      if (this.environment.isSimple) {
	        this.pushSource(['else { ', this.appendToBuffer("''", undefined, true), ' }']);
	      }
	    }
	  },

	  // [appendEscaped]
	  //
	  // On stack, before: value, ...
	  // On stack, after: ...
	  //
	  // Escape `value` and append it to the buffer
	  appendEscaped: function appendEscaped() {
	    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));
	  },

	  // [getContext]
	  //
	  // On stack, before: ...
	  // On stack, after: ...
	  // Compiler value, after: lastContext=depth
	  //
	  // Set the value of the `lastContext` compiler value to the depth
	  getContext: function getContext(depth) {
	    this.lastContext = depth;
	  },

	  // [pushContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext, ...
	  //
	  // Pushes the value of the current context onto the stack.
	  pushContext: function pushContext() {
	    this.pushStackLiteral(this.contextName(this.lastContext));
	  },

	  // [lookupOnContext]
	  //
	  // On stack, before: ...
	  // On stack, after: currentContext[name], ...
	  //
	  // Looks up the value of `name` on the current context and pushes
	  // it onto the stack.
	  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {
	    var i = 0;

	    if (!scoped && this.options.compat && !this.lastContext) {
	      // The depthed query is expected to handle the undefined logic for the root level that
	      // is implemented below, so we evaluate that directly in compat mode
	      this.push(this.depthedLookup(parts[i++]));
	    } else {
	      this.pushContext();
	    }

	    this.resolvePath('context', parts, i, falsy, strict);
	  },

	  // [lookupBlockParam]
	  //
	  // On stack, before: ...
	  // On stack, after: blockParam[name], ...
	  //
	  // Looks up the value of `parts` on the given block param and pushes
	  // it onto the stack.
	  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
	    this.useBlockParams = true;

	    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);
	    this.resolvePath('context', parts, 1);
	  },

	  // [lookupData]
	  //
	  // On stack, before: ...
	  // On stack, after: data, ...
	  //
	  // Push the data lookup operator
	  lookupData: function lookupData(depth, parts, strict) {
	    if (!depth) {
	      this.pushStackLiteral('data');
	    } else {
	      this.pushStackLiteral('container.data(data, ' + depth + ')');
	    }

	    this.resolvePath('data', parts, 0, true, strict);
	  },

	  resolvePath: function resolvePath(type, parts, i, falsy, strict) {
	    // istanbul ignore next

	    var _this = this;

	    if (this.options.strict || this.options.assumeObjects) {
	      this.push(strictLookup(this.options.strict && strict, this, parts, type));
	      return;
	    }

	    var len = parts.length;
	    for (; i < len; i++) {
	      /* eslint-disable no-loop-func */
	      this.replaceStack(function (current) {
	        var lookup = _this.nameLookup(current, parts[i], type);
	        // We want to ensure that zero and false are handled properly if the context (falsy flag)
	        // needs to have the special handling for these values.
	        if (!falsy) {
	          return [' != null ? ', lookup, ' : ', current];
	        } else {
	          // Otherwise we can use generic falsy handling
	          return [' && ', lookup];
	        }
	      });
	      /* eslint-enable no-loop-func */
	    }
	  },

	  // [resolvePossibleLambda]
	  //
	  // On stack, before: value, ...
	  // On stack, after: resolved value, ...
	  //
	  // If the `value` is a lambda, replace it on the stack by
	  // the return value of the lambda
	  resolvePossibleLambda: function resolvePossibleLambda() {
	    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);
	  },

	  // [pushStringParam]
	  //
	  // On stack, before: ...
	  // On stack, after: string, currentContext, ...
	  //
	  // This opcode is designed for use in string mode, which
	  // provides the string value of a parameter along with its
	  // depth rather than resolving it immediately.
	  pushStringParam: function pushStringParam(string, type) {
	    this.pushContext();
	    this.pushString(type);

	    // If it's a subexpression, the string result
	    // will be pushed after this opcode.
	    if (type !== 'SubExpression') {
	      if (typeof string === 'string') {
	        this.pushString(string);
	      } else {
	        this.pushStackLiteral(string);
	      }
	    }
	  },

	  emptyHash: function emptyHash(omitEmpty) {
	    if (this.trackIds) {
	      this.push('{}'); // hashIds
	    }
	    if (this.stringParams) {
	      this.push('{}'); // hashContexts
	      this.push('{}'); // hashTypes
	    }
	    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
	  },
	  pushHash: function pushHash() {
	    if (this.hash) {
	      this.hashes.push(this.hash);
	    }
	    this.hash = { values: [], types: [], contexts: [], ids: [] };
	  },
	  popHash: function popHash() {
	    var hash = this.hash;
	    this.hash = this.hashes.pop();

	    if (this.trackIds) {
	      this.push(this.objectLiteral(hash.ids));
	    }
	    if (this.stringParams) {
	      this.push(this.objectLiteral(hash.contexts));
	      this.push(this.objectLiteral(hash.types));
	    }

	    this.push(this.objectLiteral(hash.values));
	  },

	  // [pushString]
	  //
	  // On stack, before: ...
	  // On stack, after: quotedString(string), ...
	  //
	  // Push a quoted version of `string` onto the stack
	  pushString: function pushString(string) {
	    this.pushStackLiteral(this.quotedString(string));
	  },

	  // [pushLiteral]
	  //
	  // On stack, before: ...
	  // On stack, after: value, ...
	  //
	  // Pushes a value onto the stack. This operation prevents
	  // the compiler from creating a temporary variable to hold
	  // it.
	  pushLiteral: function pushLiteral(value) {
	    this.pushStackLiteral(value);
	  },

	  // [pushProgram]
	  //
	  // On stack, before: ...
	  // On stack, after: program(guid), ...
	  //
	  // Push a program expression onto the stack. This takes
	  // a compile-time guid and converts it into a runtime-accessible
	  // expression.
	  pushProgram: function pushProgram(guid) {
	    if (guid != null) {
	      this.pushStackLiteral(this.programExpression(guid));
	    } else {
	      this.pushStackLiteral(null);
	    }
	  },

	  // [registerDecorator]
	  //
	  // On stack, before: hash, program, params..., ...
	  // On stack, after: ...
	  //
	  // Pops off the decorator's parameters, invokes the decorator,
	  // and inserts the decorator into the decorators list.
	  registerDecorator: function registerDecorator(paramSize, name) {
	    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),
	        options = this.setupHelperArgs(name, paramSize);

	    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);
	  },

	  // [invokeHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // Pops off the helper's parameters, invokes the helper,
	  // and pushes the helper's return value onto the stack.
	  //
	  // If the helper is not found, `helperMissing` is called.
	  invokeHelper: function invokeHelper(paramSize, name, isSimple) {
	    var nonHelper = this.popStack(),
	        helper = this.setupHelper(paramSize, name),
	        simple = isSimple ? [helper.name, ' || '] : '';

	    var lookup = ['('].concat(simple, nonHelper);
	    if (!this.options.strict) {
	      lookup.push(' || ', this.aliasable('helpers.helperMissing'));
	    }
	    lookup.push(')');

	    this.push(this.source.functionCall(lookup, 'call', helper.callParams));
	  },

	  // [invokeKnownHelper]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of helper invocation
	  //
	  // This operation is used when the helper is known to exist,
	  // so a `helperMissing` fallback is not required.
	  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
	    var helper = this.setupHelper(paramSize, name);
	    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));
	  },

	  // [invokeAmbiguous]
	  //
	  // On stack, before: hash, inverse, program, params..., ...
	  // On stack, after: result of disambiguation
	  //
	  // This operation is used when an expression like `{{foo}}`
	  // is provided, but we don't know at compile-time whether it
	  // is a helper or a path.
	  //
	  // This operation emits more code than the other options,
	  // and can be avoided by passing the `knownHelpers` and
	  // `knownHelpersOnly` flags at compile-time.
	  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
	    this.useRegister('helper');

	    var nonHelper = this.popStack();

	    this.emptyHash();
	    var helper = this.setupHelper(0, name, helperCall);

	    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');

	    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];
	    if (!this.options.strict) {
	      lookup[0] = '(helper = ';
	      lookup.push(' != null ? helper : ', this.aliasable('helpers.helperMissing'));
	    }

	    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('"function"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);
	  },

	  // [invokePartial]
	  //
	  // On stack, before: context, ...
	  // On stack after: result of partial invocation
	  //
	  // This operation pops off a context, invokes a partial with that context,
	  // and pushes the result of the invocation back.
	  invokePartial: function invokePartial(isDynamic, name, indent) {
	    var params = [],
	        options = this.setupParams(name, 1, params);

	    if (isDynamic) {
	      name = this.popStack();
	      delete options.name;
	    }

	    if (indent) {
	      options.indent = JSON.stringify(indent);
	    }
	    options.helpers = 'helpers';
	    options.partials = 'partials';
	    options.decorators = 'container.decorators';

	    if (!isDynamic) {
	      params.unshift(this.nameLookup('partials', name, 'partial'));
	    } else {
	      params.unshift(name);
	    }

	    if (this.options.compat) {
	      options.depths = 'depths';
	    }
	    options = this.objectLiteral(options);
	    params.push(options);

	    this.push(this.source.functionCall('container.invokePartial', '', params));
	  },

	  // [assignToHash]
	  //
	  // On stack, before: value, ..., hash, ...
	  // On stack, after: ..., hash, ...
	  //
	  // Pops a value off the stack and assigns it to the current hash
	  assignToHash: function assignToHash(key) {
	    var value = this.popStack(),
	        context = undefined,
	        type = undefined,
	        id = undefined;

	    if (this.trackIds) {
	      id = this.popStack();
	    }
	    if (this.stringParams) {
	      type = this.popStack();
	      context = this.popStack();
	    }

	    var hash = this.hash;
	    if (context) {
	      hash.contexts[key] = context;
	    }
	    if (type) {
	      hash.types[key] = type;
	    }
	    if (id) {
	      hash.ids[key] = id;
	    }
	    hash.values[key] = value;
	  },

	  pushId: function pushId(type, name, child) {
	    if (type === 'BlockParam') {
	      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));
	    } else if (type === 'PathExpression') {
	      this.pushString(name);
	    } else if (type === 'SubExpression') {
	      this.pushStackLiteral('true');
	    } else {
	      this.pushStackLiteral('null');
	    }
	  },

	  // HELPERS

	  compiler: JavaScriptCompiler,

	  compileChildren: function compileChildren(environment, options) {
	    var children = environment.children,
	        child = undefined,
	        compiler = undefined;

	    for (var i = 0, l = children.length; i < l; i++) {
	      child = children[i];
	      compiler = new this.compiler(); // eslint-disable-line new-cap

	      var index = this.matchExistingProgram(child);

	      if (index == null) {
	        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
	        index = this.context.programs.length;
	        child.index = index;
	        child.name = 'program' + index;
	        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);
	        this.context.decorators[index] = compiler.decorators;
	        this.context.environments[index] = child;

	        this.useDepths = this.useDepths || compiler.useDepths;
	        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;
	      } else {
	        child.index = index;
	        child.name = 'program' + index;

	        this.useDepths = this.useDepths || child.useDepths;
	        this.useBlockParams = this.useBlockParams || child.useBlockParams;
	      }
	    }
	  },
	  matchExistingProgram: function matchExistingProgram(child) {
	    for (var i = 0, len = this.context.environments.length; i < len; i++) {
	      var environment = this.context.environments[i];
	      if (environment && environment.equals(child)) {
	        return i;
	      }
	    }
	  },

	  programExpression: function programExpression(guid) {
	    var child = this.environment.children[guid],
	        programParams = [child.index, 'data', child.blockParams];

	    if (this.useBlockParams || this.useDepths) {
	      programParams.push('blockParams');
	    }
	    if (this.useDepths) {
	      programParams.push('depths');
	    }

	    return 'container.program(' + programParams.join(', ') + ')';
	  },

	  useRegister: function useRegister(name) {
	    if (!this.registers[name]) {
	      this.registers[name] = true;
	      this.registers.list.push(name);
	    }
	  },

	  push: function push(expr) {
	    if (!(expr instanceof Literal)) {
	      expr = this.source.wrap(expr);
	    }

	    this.inlineStack.push(expr);
	    return expr;
	  },

	  pushStackLiteral: function pushStackLiteral(item) {
	    this.push(new Literal(item));
	  },

	  pushSource: function pushSource(source) {
	    if (this.pendingContent) {
	      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));
	      this.pendingContent = undefined;
	    }

	    if (source) {
	      this.source.push(source);
	    }
	  },

	  replaceStack: function replaceStack(callback) {
	    var prefix = ['('],
	        stack = undefined,
	        createdStack = undefined,
	        usedLiteral = undefined;

	    /* istanbul ignore next */
	    if (!this.isInline()) {
	      throw new _exception2['default']('replaceStack on non-inline');
	    }

	    // We want to merge the inline statement into the replacement statement via ','
	    var top = this.popStack(true);

	    if (top instanceof Literal) {
	      // Literals do not need to be inlined
	      stack = [top.value];
	      prefix = ['(', stack];
	      usedLiteral = true;
	    } else {
	      // Get or create the current stack name for use by the inline
	      createdStack = true;
	      var _name = this.incrStack();

	      prefix = ['((', this.push(_name), ' = ', top, ')'];
	      stack = this.topStack();
	    }

	    var item = callback.call(this, stack);

	    if (!usedLiteral) {
	      this.popStack();
	    }
	    if (createdStack) {
	      this.stackSlot--;
	    }
	    this.push(prefix.concat(item, ')'));
	  },

	  incrStack: function incrStack() {
	    this.stackSlot++;
	    if (this.stackSlot > this.stackVars.length) {
	      this.stackVars.push('stack' + this.stackSlot);
	    }
	    return this.topStackName();
	  },
	  topStackName: function topStackName() {
	    return 'stack' + this.stackSlot;
	  },
	  flushInline: function flushInline() {
	    var inlineStack = this.inlineStack;
	    this.inlineStack = [];
	    for (var i = 0, len = inlineStack.length; i < len; i++) {
	      var entry = inlineStack[i];
	      /* istanbul ignore if */
	      if (entry instanceof Literal) {
	        this.compileStack.push(entry);
	      } else {
	        var stack = this.incrStack();
	        this.pushSource([stack, ' = ', entry, ';']);
	        this.compileStack.push(stack);
	      }
	    }
	  },
	  isInline: function isInline() {
	    return this.inlineStack.length;
	  },

	  popStack: function popStack(wrapped) {
	    var inline = this.isInline(),
	        item = (inline ? this.inlineStack : this.compileStack).pop();

	    if (!wrapped && item instanceof Literal) {
	      return item.value;
	    } else {
	      if (!inline) {
	        /* istanbul ignore next */
	        if (!this.stackSlot) {
	          throw new _exception2['default']('Invalid stack pop');
	        }
	        this.stackSlot--;
	      }
	      return item;
	    }
	  },

	  topStack: function topStack() {
	    var stack = this.isInline() ? this.inlineStack : this.compileStack,
	        item = stack[stack.length - 1];

	    /* istanbul ignore if */
	    if (item instanceof Literal) {
	      return item.value;
	    } else {
	      return item;
	    }
	  },

	  contextName: function contextName(context) {
	    if (this.useDepths && context) {
	      return 'depths[' + context + ']';
	    } else {
	      return 'depth' + context;
	    }
	  },

	  quotedString: function quotedString(str) {
	    return this.source.quotedString(str);
	  },

	  objectLiteral: function objectLiteral(obj) {
	    return this.source.objectLiteral(obj);
	  },

	  aliasable: function aliasable(name) {
	    var ret = this.aliases[name];
	    if (ret) {
	      ret.referenceCount++;
	      return ret;
	    }

	    ret = this.aliases[name] = this.source.wrap(name);
	    ret.aliasable = true;
	    ret.referenceCount = 1;

	    return ret;
	  },

	  setupHelper: function setupHelper(paramSize, name, blockHelper) {
	    var params = [],
	        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);
	    var foundHelper = this.nameLookup('helpers', name, 'helper'),
	        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : {}');

	    return {
	      params: params,
	      paramsInit: paramsInit,
	      name: foundHelper,
	      callParams: [callContext].concat(params)
	    };
	  },

	  setupParams: function setupParams(helper, paramSize, params) {
	    var options = {},
	        contexts = [],
	        types = [],
	        ids = [],
	        objectArgs = !params,
	        param = undefined;

	    if (objectArgs) {
	      params = [];
	    }

	    options.name = this.quotedString(helper);
	    options.hash = this.popStack();

	    if (this.trackIds) {
	      options.hashIds = this.popStack();
	    }
	    if (this.stringParams) {
	      options.hashTypes = this.popStack();
	      options.hashContexts = this.popStack();
	    }

	    var inverse = this.popStack(),
	        program = this.popStack();

	    // Avoid setting fn and inverse if neither are set. This allows
	    // helpers to do a check for `if (options.fn)`
	    if (program || inverse) {
	      options.fn = program || 'container.noop';
	      options.inverse = inverse || 'container.noop';
	    }

	    // The parameters go on to the stack in order (making sure that they are evaluated in order)
	    // so we need to pop them off the stack in reverse order
	    var i = paramSize;
	    while (i--) {
	      param = this.popStack();
	      params[i] = param;

	      if (this.trackIds) {
	        ids[i] = this.popStack();
	      }
	      if (this.stringParams) {
	        types[i] = this.popStack();
	        contexts[i] = this.popStack();
	      }
	    }

	    if (objectArgs) {
	      options.args = this.source.generateArray(params);
	    }

	    if (this.trackIds) {
	      options.ids = this.source.generateArray(ids);
	    }
	    if (this.stringParams) {
	      options.types = this.source.generateArray(types);
	      options.contexts = this.source.generateArray(contexts);
	    }

	    if (this.options.data) {
	      options.data = 'data';
	    }
	    if (this.useBlockParams) {
	      options.blockParams = 'blockParams';
	    }
	    return options;
	  },

	  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {
	    var options = this.setupParams(helper, paramSize, params);
	    options = this.objectLiteral(options);
	    if (useRegister) {
	      this.useRegister('options');
	      params.push('options');
	      return ['options=', options];
	    } else if (params) {
	      params.push(options);
	      return '';
	    } else {
	      return options;
	    }
	  }
	};

	(function () {
	  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');

	  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};

	  for (var i = 0, l = reservedWords.length; i < l; i++) {
	    compilerWords[reservedWords[i]] = true;
	  }
	})();

	JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
	  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);
	};

	function strictLookup(requireTerminal, compiler, parts, type) {
	  var stack = compiler.popStack(),
	      i = 0,
	      len = parts.length;
	  if (requireTerminal) {
	    len--;
	  }

	  for (; i < len; i++) {
	    stack = compiler.nameLookup(stack, parts[i], type);
	  }

	  if (requireTerminal) {
	    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];
	  } else {
	    return stack;
	  }
	}

	exports['default'] = JavaScriptCompiler;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/* global define */
	'use strict';

	exports.__esModule = true;

	var _utils = __webpack_require__(16);

	var SourceNode = undefined;

	try {
	  /* istanbul ignore next */
	  if (false) {
	    // We don't support this in AMD environments. For these environments, we asusme that
	    // they are running on the browser and thus have no need for the source-map library.
	    var SourceMap = require('source-map');
	    SourceNode = SourceMap.SourceNode;
	  }
	} catch (err) {}
	/* NOP */

	/* istanbul ignore if: tested but not covered in istanbul due to dist build  */
	if (!SourceNode) {
	  SourceNode = function (line, column, srcFile, chunks) {
	    this.src = '';
	    if (chunks) {
	      this.add(chunks);
	    }
	  };
	  /* istanbul ignore next */
	  SourceNode.prototype = {
	    add: function add(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src += chunks;
	    },
	    prepend: function prepend(chunks) {
	      if (_utils.isArray(chunks)) {
	        chunks = chunks.join('');
	      }
	      this.src = chunks + this.src;
	    },
	    toStringWithSourceMap: function toStringWithSourceMap() {
	      return { code: this.toString() };
	    },
	    toString: function toString() {
	      return this.src;
	    }
	  };
	}

	function castChunk(chunk, codeGen, loc) {
	  if (_utils.isArray(chunk)) {
	    var ret = [];

	    for (var i = 0, len = chunk.length; i < len; i++) {
	      ret.push(codeGen.wrap(chunk[i], loc));
	    }
	    return ret;
	  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
	    // Handle primitives that the SourceNode will throw up on
	    return chunk + '';
	  }
	  return chunk;
	}

	function CodeGen(srcFile) {
	  this.srcFile = srcFile;
	  this.source = [];
	}

	CodeGen.prototype = {
	  isEmpty: function isEmpty() {
	    return !this.source.length;
	  },
	  prepend: function prepend(source, loc) {
	    this.source.unshift(this.wrap(source, loc));
	  },
	  push: function push(source, loc) {
	    this.source.push(this.wrap(source, loc));
	  },

	  merge: function merge() {
	    var source = this.empty();
	    this.each(function (line) {
	      source.add(['  ', line, '\n']);
	    });
	    return source;
	  },

	  each: function each(iter) {
	    for (var i = 0, len = this.source.length; i < len; i++) {
	      iter(this.source[i]);
	    }
	  },

	  empty: function empty() {
	    var loc = this.currentLocation || { start: {} };
	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);
	  },
	  wrap: function wrap(chunk) {
	    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];

	    if (chunk instanceof SourceNode) {
	      return chunk;
	    }

	    chunk = castChunk(chunk, this, loc);

	    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);
	  },

	  functionCall: function functionCall(fn, type, params) {
	    params = this.generateList(params);
	    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
	  },

	  quotedString: function quotedString(str) {
	    return '"' + (str + '').replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
	    .replace(/\u2029/g, '\\u2029') + '"';
	  },

	  objectLiteral: function objectLiteral(obj) {
	    var pairs = [];

	    for (var key in obj) {
	      if (obj.hasOwnProperty(key)) {
	        var value = castChunk(obj[key], this);
	        if (value !== 'undefined') {
	          pairs.push([this.quotedString(key), ':', value]);
	        }
	      }
	    }

	    var ret = this.generateList(pairs);
	    ret.prepend('{');
	    ret.add('}');
	    return ret;
	  },

	  generateList: function generateList(entries) {
	    var ret = this.empty();

	    for (var i = 0, len = entries.length; i < len; i++) {
	      if (i) {
	        ret.add(',');
	      }

	      ret.add(castChunk(entries[i], this));
	    }

	    return ret;
	  },

	  generateArray: function generateArray(entries) {
	    var ret = this.generateList(entries);
	    ret.prepend('[');
	    ret.add(']');

	    return ret;
	  }
	};

	exports['default'] = CodeGen;
	module.exports = exports['default'];
	//# sourceMappingURL=data:application/json;base64,


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* eslint-disable new-cap */
	'use strict';

	exports.__esModule = true;
	exports.print = print;
	exports.PrintVisitor = PrintVisitor;
	// istanbul ignore next

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _visitor = __webpack_require__(36);

	var _visitor2 = _interopRequireDefault(_visitor);

	function print(ast) {
	  return new PrintVisitor().accept(ast);
	}

	function PrintVisitor() {
	  this.padding = 0;
	}

	PrintVisitor.prototype = new _visitor2['default']();

	PrintVisitor.prototype.pad = function (string) {
	  var out = '';

	  for (var i = 0, l = this.padding; i < l; i++) {
	    out += '  ';
	  }

	  out += string + '\n';
	  return out;
	};

	PrintVisitor.prototype.Program = function (program) {
	  var out = '',
	      body = program.body,
	      i = undefined,
	      l = undefined;

	  if (program.blockParams) {
	    var blockParams = 'BLOCK PARAMS: [';
	    for (i = 0, l = program.blockParams.length; i < l; i++) {
	      blockParams += ' ' + program.blockParams[i];
	    }
	    blockParams += ' ]';
	    out += this.pad(blockParams);
	  }

	  for (i = 0, l = body.length; i < l; i++) {
	    out += this.accept(body[i]);
	  }

	  this.padding--;

	  return out;
	};

	PrintVisitor.prototype.MustacheStatement = function (mustache) {
	  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');
	};
	PrintVisitor.prototype.Decorator = function (mustache) {
	  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');
	};

	PrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function (block) {
	  var out = '';

	  out += this.pad((block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:');
	  this.padding++;
	  out += this.pad(this.SubExpression(block));
	  if (block.program) {
	    out += this.pad('PROGRAM:');
	    this.padding++;
	    out += this.accept(block.program);
	    this.padding--;
	  }
	  if (block.inverse) {
	    if (block.program) {
	      this.padding++;
	    }
	    out += this.pad('{{^}}');
	    this.padding++;
	    out += this.accept(block.inverse);
	    this.padding--;
	    if (block.program) {
	      this.padding--;
	    }
	  }
	  this.padding--;

	  return out;
	};

	PrintVisitor.prototype.PartialStatement = function (partial) {
	  var content = 'PARTIAL:' + partial.name.original;
	  if (partial.params[0]) {
	    content += ' ' + this.accept(partial.params[0]);
	  }
	  if (partial.hash) {
	    content += ' ' + this.accept(partial.hash);
	  }
	  return this.pad('{{> ' + content + ' }}');
	};
	PrintVisitor.prototype.PartialBlockStatement = function (partial) {
	  var content = 'PARTIAL BLOCK:' + partial.name.original;
	  if (partial.params[0]) {
	    content += ' ' + this.accept(partial.params[0]);
	  }
	  if (partial.hash) {
	    content += ' ' + this.accept(partial.hash);
	  }

	  content += ' ' + this.pad('PROGRAM:');
	  this.padding++;
	  content += this.accept(partial.program);
	  this.padding--;

	  return this.pad('{{> ' + content + ' }}');
	};

	PrintVisitor.prototype.ContentStatement = function (content) {
	  return this.pad("CONTENT[ '" + content.value + "' ]");
	};

	PrintVisitor.prototype.CommentStatement = function (comment) {
	  return this.pad("{{! '" + comment.value + "' }}");
	};

	PrintVisitor.prototype.SubExpression = function (sexpr) {
	  var params = sexpr.params,
	      paramStrings = [],
	      hash = undefined;

	  for (var i = 0, l = params.length; i < l; i++) {
	    paramStrings.push(this.accept(params[i]));
	  }

	  params = '[' + paramStrings.join(', ') + ']';

	  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';

	  return this.accept(sexpr.path) + ' ' + params + hash;
	};

	PrintVisitor.prototype.PathExpression = function (id) {
	  var path = id.parts.join('/');
	  return (id.data ? '@' : '') + 'PATH:' + path;
	};

	PrintVisitor.prototype.StringLiteral = function (string) {
	  return '"' + string.value + '"';
	};

	PrintVisitor.prototype.NumberLiteral = function (number) {
	  return 'NUMBER{' + number.value + '}';
	};

	PrintVisitor.prototype.BooleanLiteral = function (bool) {
	  return 'BOOLEAN{' + bool.value + '}';
	};

	PrintVisitor.prototype.UndefinedLiteral = function () {
	  return 'UNDEFINED';
	};

	PrintVisitor.prototype.NullLiteral = function () {
	  return 'NULL';
	};

	PrintVisitor.prototype.Hash = function (hash) {
	  var pairs = hash.pairs,
	      joinedPairs = [];

	  for (var i = 0, l = pairs.length; i < l; i++) {
	    joinedPairs.push(this.accept(pairs[i]));
	  }

	  return 'HASH{' + joinedPairs.join(', ') + '}';
	};
	PrintVisitor.prototype.HashPair = function (pair) {
	  return pair.key + '=' + this.accept(pair.value);
	};
	/* eslint-enable new-cap */
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL3ByaW50ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozt1QkFDb0IsV0FBVzs7OztBQUV4QixTQUFTLEtBQUssQ0FBQyxHQUFHLEVBQUU7QUFDekIsU0FBTyxJQUFJLFlBQVksRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUN2Qzs7QUFFTSxTQUFTLFlBQVksR0FBRztBQUM3QixNQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztDQUNsQjs7QUFFRCxZQUFZLENBQUMsU0FBUyxHQUFHLDBCQUFhLENBQUM7O0FBRXZDLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLFVBQVMsTUFBTSxFQUFFO0FBQzVDLE1BQUksR0FBRyxHQUFHLEVBQUUsQ0FBQzs7QUFFYixPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzVDLE9BQUcsSUFBSSxJQUFJLENBQUM7R0FDYjs7QUFFRCxLQUFHLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQztBQUNyQixTQUFPLEdBQUcsQ0FBQztDQUNaLENBQUM7O0FBRUYsWUFBWSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsVUFBUyxPQUFPLEVBQUU7QUFDakQsTUFBSSxHQUFHLEdBQUcsRUFBRTtNQUNSLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSTtNQUNuQixDQUFDLFlBQUE7TUFBRSxDQUFDLFlBQUEsQ0FBQzs7QUFFVCxNQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUU7QUFDdkIsUUFBSSxXQUFXLEdBQUcsaUJBQWlCLENBQUM7QUFDcEMsU0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3JELGlCQUFXLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDOUM7QUFDRCxlQUFXLElBQUksSUFBSSxDQUFDO0FBQ3BCLE9BQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0dBQzlCOztBQUVELE9BQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3ZDLE9BQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQzdCOztBQUVELE1BQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7QUFFZixTQUFPLEdBQUcsQ0FBQztDQUNaLENBQUM7O0FBRUYsWUFBWSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxVQUFTLFFBQVEsRUFBRTtBQUM1RCxTQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7Q0FDL0QsQ0FBQztBQUNGLFlBQVksQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLFVBQVMsUUFBUSxFQUFFO0FBQ3BELFNBQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQztDQUN6RSxDQUFDOztBQUVGLFlBQVksQ0FBQyxTQUFTLENBQUMsY0FBYyxHQUNyQyxZQUFZLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxVQUFTLEtBQUssRUFBRTtBQUN0RCxNQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7O0FBRWIsS0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLGdCQUFnQixHQUFHLFlBQVksR0FBRyxFQUFFLENBQUEsR0FBSSxRQUFRLENBQUMsQ0FBQztBQUNsRixNQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDZixLQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDM0MsTUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFO0FBQ2pCLE9BQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzVCLFFBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNmLE9BQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsQyxRQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7R0FDaEI7QUFDRCxNQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7QUFDakIsUUFBSSxLQUFLLENBQUMsT0FBTyxFQUFFO0FBQUUsVUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQUU7QUFDdEMsT0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDekIsUUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ2YsT0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xDLFFBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNmLFFBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtBQUFFLFVBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztLQUFFO0dBQ3ZDO0FBQ0QsTUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDOztBQUVmLFNBQU8sR0FBRyxDQUFDO0NBQ1osQ0FBQzs7QUFFRixZQUFZLENBQUMsU0FBUyxDQUFDLGdCQUFnQixHQUFHLFVBQVMsT0FBTyxFQUFFO0FBQzFELE1BQUksT0FBTyxHQUFHLFVBQVUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztBQUNqRCxNQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckIsV0FBTyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztHQUNqRDtBQUNELE1BQUksT0FBTyxDQUFDLElBQUksRUFBRTtBQUNoQixXQUFPLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzVDO0FBQ0QsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUM7Q0FDM0MsQ0FBQztBQUNGLFlBQVksQ0FBQyxTQUFTLENBQUMscUJBQXFCLEdBQUcsVUFBUyxPQUFPLEVBQUU7QUFDL0QsTUFBSSxPQUFPLEdBQUcsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDdkQsTUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JCLFdBQU8sSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7R0FDakQ7QUFDRCxNQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7QUFDaEIsV0FBTyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUM1Qzs7QUFFRCxTQUFPLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDdEMsTUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ2YsU0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3hDLE1BQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7QUFFZixTQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUMsQ0FBQztDQUMzQyxDQUFDOztBQUVGLFlBQVksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLEdBQUcsVUFBUyxPQUFPLEVBQUU7QUFDMUQsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDO0NBQ3ZELENBQUM7O0FBRUYsWUFBWSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUMxRCxTQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUM7Q0FDbkQsQ0FBQzs7QUFFRixZQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsR0FBRyxVQUFTLEtBQUssRUFBRTtBQUNyRCxNQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTTtNQUNyQixZQUFZLEdBQUcsRUFBRTtNQUNqQixJQUFJLFlBQUEsQ0FBQzs7QUFFVCxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzdDLGdCQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztHQUMzQzs7QUFFRCxRQUFNLEdBQUcsR0FBRyxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDOztBQUU3QyxNQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDOztBQUV2RCxTQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDO0NBQ3RELENBQUM7O0FBRUYsWUFBWSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsVUFBUyxFQUFFLEVBQUU7QUFDbkQsTUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUIsU0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQSxHQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7Q0FDOUMsQ0FBQzs7QUFHRixZQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsR0FBRyxVQUFTLE1BQU0sRUFBRTtBQUN0RCxTQUFPLEdBQUcsR0FBRyxNQUFNLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztDQUNqQyxDQUFDOztBQUVGLFlBQVksQ0FBQyxTQUFTLENBQUMsYUFBYSxHQUFHLFVBQVMsTUFBTSxFQUFFO0FBQ3RELFNBQU8sU0FBUyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO0NBQ3ZDLENBQUM7O0FBRUYsWUFBWSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsVUFBUyxJQUFJLEVBQUU7QUFDckQsU0FBTyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7Q0FDdEMsQ0FBQzs7QUFFRixZQUFZLENBQUMsU0FBUyxDQUFDLGdCQUFnQixHQUFHLFlBQVc7QUFDbkQsU0FBTyxXQUFXLENBQUM7Q0FDcEIsQ0FBQzs7QUFFRixZQUFZLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRyxZQUFXO0FBQzlDLFNBQU8sTUFBTSxDQUFDO0NBQ2YsQ0FBQzs7QUFFRixZQUFZLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxVQUFTLElBQUksRUFBRTtBQUMzQyxNQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSztNQUNsQixXQUFXLEdBQUcsRUFBRSxDQUFDOztBQUVyQixPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQzVDLGVBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQ3pDOztBQUVELFNBQU8sT0FBTyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0NBQy9DLENBQUM7QUFDRixZQUFZLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxVQUFTLElBQUksRUFBRTtBQUMvQyxTQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0NBQ2pELENBQUMiLCJmaWxlIjoicHJpbnRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5ldy1jYXAgKi9cbmltcG9ydCBWaXNpdG9yIGZyb20gJy4vdmlzaXRvcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcmludChhc3QpIHtcbiAgcmV0dXJuIG5ldyBQcmludFZpc2l0b3IoKS5hY2NlcHQoYXN0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFByaW50VmlzaXRvcigpIHtcbiAgdGhpcy5wYWRkaW5nID0gMDtcbn1cblxuUHJpbnRWaXNpdG9yLnByb3RvdHlwZSA9IG5ldyBWaXNpdG9yKCk7XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUucGFkID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gIGxldCBvdXQgPSAnJztcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMucGFkZGluZzsgaSA8IGw7IGkrKykge1xuICAgIG91dCArPSAnICAnO1xuICB9XG5cbiAgb3V0ICs9IHN0cmluZyArICdcXG4nO1xuICByZXR1cm4gb3V0O1xufTtcblxuUHJpbnRWaXNpdG9yLnByb3RvdHlwZS5Qcm9ncmFtID0gZnVuY3Rpb24ocHJvZ3JhbSkge1xuICBsZXQgb3V0ID0gJycsXG4gICAgICBib2R5ID0gcHJvZ3JhbS5ib2R5LFxuICAgICAgaSwgbDtcblxuICBpZiAocHJvZ3JhbS5ibG9ja1BhcmFtcykge1xuICAgIGxldCBibG9ja1BhcmFtcyA9ICdCTE9DSyBQQVJBTVM6IFsnO1xuICAgIGZvciAoaSA9IDAsIGwgPSBwcm9ncmFtLmJsb2NrUGFyYW1zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgIGJsb2NrUGFyYW1zICs9ICcgJyArIHByb2dyYW0uYmxvY2tQYXJhbXNbaV07XG4gICAgfVxuICAgIGJsb2NrUGFyYW1zICs9ICcgXSc7XG4gICAgb3V0ICs9IHRoaXMucGFkKGJsb2NrUGFyYW1zKTtcbiAgfVxuXG4gIGZvciAoaSA9IDAsIGwgPSBib2R5Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIG91dCArPSB0aGlzLmFjY2VwdChib2R5W2ldKTtcbiAgfVxuXG4gIHRoaXMucGFkZGluZy0tO1xuXG4gIHJldHVybiBvdXQ7XG59O1xuXG5QcmludFZpc2l0b3IucHJvdG90eXBlLk11c3RhY2hlU3RhdGVtZW50ID0gZnVuY3Rpb24obXVzdGFjaGUpIHtcbiAgcmV0dXJuIHRoaXMucGFkKCd7eyAnICsgdGhpcy5TdWJFeHByZXNzaW9uKG11c3RhY2hlKSArICcgfX0nKTtcbn07XG5QcmludFZpc2l0b3IucHJvdG90eXBlLkRlY29yYXRvciA9IGZ1bmN0aW9uKG11c3RhY2hlKSB7XG4gIHJldHVybiB0aGlzLnBhZCgne3sgRElSRUNUSVZFICcgKyB0aGlzLlN1YkV4cHJlc3Npb24obXVzdGFjaGUpICsgJyB9fScpO1xufTtcblxuUHJpbnRWaXNpdG9yLnByb3RvdHlwZS5CbG9ja1N0YXRlbWVudCA9XG5QcmludFZpc2l0b3IucHJvdG90eXBlLkRlY29yYXRvckJsb2NrID0gZnVuY3Rpb24oYmxvY2spIHtcbiAgbGV0IG91dCA9ICcnO1xuXG4gIG91dCArPSB0aGlzLnBhZCgoYmxvY2sudHlwZSA9PT0gJ0RlY29yYXRvckJsb2NrJyA/ICdESVJFQ1RJVkUgJyA6ICcnKSArICdCTE9DSzonKTtcbiAgdGhpcy5wYWRkaW5nKys7XG4gIG91dCArPSB0aGlzLnBhZCh0aGlzLlN1YkV4cHJlc3Npb24oYmxvY2spKTtcbiAgaWYgKGJsb2NrLnByb2dyYW0pIHtcbiAgICBvdXQgKz0gdGhpcy5wYWQoJ1BST0dSQU06Jyk7XG4gICAgdGhpcy5wYWRkaW5nKys7XG4gICAgb3V0ICs9IHRoaXMuYWNjZXB0KGJsb2NrLnByb2dyYW0pO1xuICAgIHRoaXMucGFkZGluZy0tO1xuICB9XG4gIGlmIChibG9jay5pbnZlcnNlKSB7XG4gICAgaWYgKGJsb2NrLnByb2dyYW0pIHsgdGhpcy5wYWRkaW5nKys7IH1cbiAgICBvdXQgKz0gdGhpcy5wYWQoJ3t7Xn19Jyk7XG4gICAgdGhpcy5wYWRkaW5nKys7XG4gICAgb3V0ICs9IHRoaXMuYWNjZXB0KGJsb2NrLmludmVyc2UpO1xuICAgIHRoaXMucGFkZGluZy0tO1xuICAgIGlmIChibG9jay5wcm9ncmFtKSB7IHRoaXMucGFkZGluZy0tOyB9XG4gIH1cbiAgdGhpcy5wYWRkaW5nLS07XG5cbiAgcmV0dXJuIG91dDtcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuUGFydGlhbFN0YXRlbWVudCA9IGZ1bmN0aW9uKHBhcnRpYWwpIHtcbiAgbGV0IGNvbnRlbnQgPSAnUEFSVElBTDonICsgcGFydGlhbC5uYW1lLm9yaWdpbmFsO1xuICBpZiAocGFydGlhbC5wYXJhbXNbMF0pIHtcbiAgICBjb250ZW50ICs9ICcgJyArIHRoaXMuYWNjZXB0KHBhcnRpYWwucGFyYW1zWzBdKTtcbiAgfVxuICBpZiAocGFydGlhbC5oYXNoKSB7XG4gICAgY29udGVudCArPSAnICcgKyB0aGlzLmFjY2VwdChwYXJ0aWFsLmhhc2gpO1xuICB9XG4gIHJldHVybiB0aGlzLnBhZCgne3s+ICcgKyBjb250ZW50ICsgJyB9fScpO1xufTtcblByaW50VmlzaXRvci5wcm90b3R5cGUuUGFydGlhbEJsb2NrU3RhdGVtZW50ID0gZnVuY3Rpb24ocGFydGlhbCkge1xuICBsZXQgY29udGVudCA9ICdQQVJUSUFMIEJMT0NLOicgKyBwYXJ0aWFsLm5hbWUub3JpZ2luYWw7XG4gIGlmIChwYXJ0aWFsLnBhcmFtc1swXSkge1xuICAgIGNvbnRlbnQgKz0gJyAnICsgdGhpcy5hY2NlcHQocGFydGlhbC5wYXJhbXNbMF0pO1xuICB9XG4gIGlmIChwYXJ0aWFsLmhhc2gpIHtcbiAgICBjb250ZW50ICs9ICcgJyArIHRoaXMuYWNjZXB0KHBhcnRpYWwuaGFzaCk7XG4gIH1cblxuICBjb250ZW50ICs9ICcgJyArIHRoaXMucGFkKCdQUk9HUkFNOicpO1xuICB0aGlzLnBhZGRpbmcrKztcbiAgY29udGVudCArPSB0aGlzLmFjY2VwdChwYXJ0aWFsLnByb2dyYW0pO1xuICB0aGlzLnBhZGRpbmctLTtcblxuICByZXR1cm4gdGhpcy5wYWQoJ3t7PiAnICsgY29udGVudCArICcgfX0nKTtcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuQ29udGVudFN0YXRlbWVudCA9IGZ1bmN0aW9uKGNvbnRlbnQpIHtcbiAgcmV0dXJuIHRoaXMucGFkKFwiQ09OVEVOVFsgJ1wiICsgY29udGVudC52YWx1ZSArIFwiJyBdXCIpO1xufTtcblxuUHJpbnRWaXNpdG9yLnByb3RvdHlwZS5Db21tZW50U3RhdGVtZW50ID0gZnVuY3Rpb24oY29tbWVudCkge1xuICByZXR1cm4gdGhpcy5wYWQoXCJ7eyEgJ1wiICsgY29tbWVudC52YWx1ZSArIFwiJyB9fVwiKTtcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuU3ViRXhwcmVzc2lvbiA9IGZ1bmN0aW9uKHNleHByKSB7XG4gIGxldCBwYXJhbXMgPSBzZXhwci5wYXJhbXMsXG4gICAgICBwYXJhbVN0cmluZ3MgPSBbXSxcbiAgICAgIGhhc2g7XG5cbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBwYXJhbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgcGFyYW1TdHJpbmdzLnB1c2godGhpcy5hY2NlcHQocGFyYW1zW2ldKSk7XG4gIH1cblxuICBwYXJhbXMgPSAnWycgKyBwYXJhbVN0cmluZ3Muam9pbignLCAnKSArICddJztcblxuICBoYXNoID0gc2V4cHIuaGFzaCA/ICcgJyArIHRoaXMuYWNjZXB0KHNleHByLmhhc2gpIDogJyc7XG5cbiAgcmV0dXJuIHRoaXMuYWNjZXB0KHNleHByLnBhdGgpICsgJyAnICsgcGFyYW1zICsgaGFzaDtcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuUGF0aEV4cHJlc3Npb24gPSBmdW5jdGlvbihpZCkge1xuICBsZXQgcGF0aCA9IGlkLnBhcnRzLmpvaW4oJy8nKTtcbiAgcmV0dXJuIChpZC5kYXRhID8gJ0AnIDogJycpICsgJ1BBVEg6JyArIHBhdGg7XG59O1xuXG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuU3RyaW5nTGl0ZXJhbCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICByZXR1cm4gJ1wiJyArIHN0cmluZy52YWx1ZSArICdcIic7XG59O1xuXG5QcmludFZpc2l0b3IucHJvdG90eXBlLk51bWJlckxpdGVyYWwgPSBmdW5jdGlvbihudW1iZXIpIHtcbiAgcmV0dXJuICdOVU1CRVJ7JyArIG51bWJlci52YWx1ZSArICd9Jztcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuQm9vbGVhbkxpdGVyYWwgPSBmdW5jdGlvbihib29sKSB7XG4gIHJldHVybiAnQk9PTEVBTnsnICsgYm9vbC52YWx1ZSArICd9Jztcbn07XG5cblByaW50VmlzaXRvci5wcm90b3R5cGUuVW5kZWZpbmVkTGl0ZXJhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gJ1VOREVGSU5FRCc7XG59O1xuXG5QcmludFZpc2l0b3IucHJvdG90eXBlLk51bGxMaXRlcmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnTlVMTCc7XG59O1xuXG5QcmludFZpc2l0b3IucHJvdG90eXBlLkhhc2ggPSBmdW5jdGlvbihoYXNoKSB7XG4gIGxldCBwYWlycyA9IGhhc2gucGFpcnMsXG4gICAgICBqb2luZWRQYWlycyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwLCBsID0gcGFpcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgam9pbmVkUGFpcnMucHVzaCh0aGlzLmFjY2VwdChwYWlyc1tpXSkpO1xuICB9XG5cbiAgcmV0dXJuICdIQVNIeycgKyBqb2luZWRQYWlycy5qb2luKCcsICcpICsgJ30nO1xufTtcblByaW50VmlzaXRvci5wcm90b3R5cGUuSGFzaFBhaXIgPSBmdW5jdGlvbihwYWlyKSB7XG4gIHJldHVybiBwYWlyLmtleSArICc9JyArIHRoaXMuYWNjZXB0KHBhaXIudmFsdWUpO1xufTtcbi8qIGVzbGludC1lbmFibGUgbmV3LWNhcCAqL1xuIl19


/***/ },
/* 42 */
/***/ function(module, exports) {

	

/***/ },
/* 43 */,
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/* WEBPACK VAR INJECTION */(function(process, global) {/*!
	 * Handsontable 0.19.0
	 * Handsontable is a JavaScript library for editable tables with basic copy-paste compatibility with Excel and Google Docs
	 *
	 * Copyright (c) 2012-2014 Marcin Warpechowski
	 * Copyright 2015 Handsoncode sp. z o.o. <hello@handsontable.com>
	 * Licensed under the MIT license.
	 * http://handsontable.com/
	 *
	 * Date: Fri Oct 02 2015 12:37:12 GMT+0200 (CEST)
	 */
	/*jslint white: true, browser: true, plusplus: true, indent: 4, maxerr: 50 */

	window.Handsontable = {
	  version: '0.19.0',
	  buildDate: 'Fri Oct 02 2015 12:37:12 GMT+0200 (CEST)',
	};
	(function(f){if(true){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Handsontable = f()}})(function(){var define,module,exports;return (function init(modules, cache, entry) {
	  (function outer (modules, cache, entry) {
	    // Save the require from previous bundle to this closure if any
	    var previousRequire = typeof require == "function" && require;
	    var globalNS = JSON.parse('{"zeroclipboard":"ZeroClipboard","moment":"moment","pikaday":"Pikaday"}') || {};

	    function newRequire(name, jumped){
	      if(!cache[name]) {

	        if(!modules[name]) {
	          // if we cannot find the the module within our internal map or
	          // cache jump to the current global require ie. the last bundle
	          // that was added to the page.
	          var currentRequire = typeof require == "function" && require;
	          if (!jumped && currentRequire) return require(name, true);

	          // If there are other bundles on this page the require from the
	          // previous one is saved to 'previousRequire'. Repeat this as
	          // many times as there are bundles until the module is found or
	          // we exhaust the require chain.
	          if (previousRequire) return require(name, true);

	          // Try find module from global scope
	          if (globalNS[name] && typeof window[globalNS[name]] !== 'undefined') {
	            return window[globalNS[name]];
	          }

	          var err = new Error('Cannot find module \'' + name + '\'');
	          err.code = 'MODULE_NOT_FOUND';
	          throw err;
	        }
	        var m = cache[name] = {exports:{}};
	        modules[name][0].call(m.exports, function(x){
	          var id = modules[name][1][x];
	          return newRequire(id ? id : x);
	        },m,m.exports,outer,modules,cache,entry);
	      }

	      return cache[name].exports;
	    }
	    for(var i=0;i<entry.length;i++) newRequire(entry[i]);

	    // Override the current require with this new one
	    return newRequire;
	  })(modules, cache, entry);

	  return function() {
	    return Handsontable;
	  };
	})
	({1:[function(require,module,exports){
	"use strict";
	if (window.jQuery) {
	  (function(window, $, Handsontable) {
	    $.fn.handsontable = function(action) {
	      var i,
	          ilen,
	          args,
	          output,
	          userSettings,
	          $this = this.first(),
	          instance = $this.data('handsontable');
	      if (typeof action !== 'string') {
	        userSettings = action || {};
	        if (instance) {
	          instance.updateSettings(userSettings);
	        } else {
	          instance = new Handsontable.Core($this[0], userSettings);
	          $this.data('handsontable', instance);
	          instance.init();
	        }
	        return $this;
	      } else {
	        args = [];
	        if (arguments.length > 1) {
	          for (i = 1, ilen = arguments.length; i < ilen; i++) {
	            args.push(arguments[i]);
	          }
	        }
	        if (instance) {
	          if (typeof instance[action] !== 'undefined') {
	            output = instance[action].apply(instance, args);
	            if (action === 'destroy') {
	              $this.removeData();
	            }
	          } else {
	            throw new Error('Handsontable do not provide action: ' + action);
	          }
	        }
	        return output;
	      }
	    };
	  })(window, jQuery, Handsontable);
	}

	//# 
	},{}],2:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableBorder: {get: function() {
	      return WalkontableBorder;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47__46__46__47_eventManager__,
	    $__cell_47_coords__,
	    $__overlay_47__95_base_46_js__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getComputedStyle = $__0.getComputedStyle,
	    getTrimmingContainer = $__0.getTrimmingContainer,
	    innerWidth = $__0.innerWidth,
	    innerHeight = $__0.innerHeight,
	    offset = $__0.offset,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth;
	var stopImmediatePropagation = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;
	var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;
	var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;
	var WalkontableOverlay = ($__overlay_47__95_base_46_js__ = require("overlay/_base.js"), $__overlay_47__95_base_46_js__ && $__overlay_47__95_base_46_js__.__esModule && $__overlay_47__95_base_46_js__ || {default: $__overlay_47__95_base_46_js__}).WalkontableOverlay;
	var WalkontableBorder = function WalkontableBorder(wotInstance, settings) {
	  if (!settings) {
	    return;
	  }
	  this.eventManager = new EventManager(wotInstance);
	  this.instance = wotInstance;
	  this.wot = wotInstance;
	  this.settings = settings;
	  this.mouseDown = false;
	  this.main = null;
	  this.top = null;
	  this.left = null;
	  this.bottom = null;
	  this.right = null;
	  this.topStyle = null;
	  this.leftStyle = null;
	  this.bottomStyle = null;
	  this.rightStyle = null;
	  this.cornerDefaultStyle = {
	    width: '5px',
	    height: '5px',
	    borderWidth: '2px',
	    borderStyle: 'solid',
	    borderColor: '#FFF'
	  };
	  this.corner = null;
	  this.cornerStyle = null;
	  this.createBorders(settings);
	  this.registerListeners();
	};
	($traceurRuntime.createClass)(WalkontableBorder, {
	  registerListeners: function() {
	    var $__5 = this;
	    this.eventManager.addEventListener(document.body, 'mousedown', (function() {
	      return $__5.onMouseDown();
	    }));
	    this.eventManager.addEventListener(document.body, 'mouseup', (function() {
	      return $__5.onMouseUp();
	    }));
	    for (var c = 0,
	        len = this.main.childNodes.length; c < len; c++) {
	      this.eventManager.addEventListener(this.main.childNodes[c], 'mouseenter', (function(event) {
	        return $__5.onMouseEnter(event);
	      }));
	    }
	  },
	  onMouseDown: function() {
	    this.mouseDown = true;
	  },
	  onMouseUp: function() {
	    this.mouseDown = false;
	  },
	  onMouseEnter: function(event) {
	    if (!this.mouseDown || !this.wot.getSetting('hideBorderOnMouseDownOver')) {
	      return;
	    }
	    event.preventDefault();
	    stopImmediatePropagation(event);
	    var _this = this;
	    var bounds = this.getBoundingClientRect();
	    this.style.display = 'none';
	    function isOutside(event) {
	      if (event.clientY < Math.floor(bounds.top)) {
	        return true;
	      }
	      if (event.clientY > Math.ceil(bounds.top + bounds.height)) {
	        return true;
	      }
	      if (event.clientX < Math.floor(bounds.left)) {
	        return true;
	      }
	      if (event.clientX > Math.ceil(bounds.left + bounds.width)) {
	        return true;
	      }
	    }
	    function handler(event) {
	      if (isOutside(event)) {
	        _this.eventManager.removeEventListener(document.body, 'mousemove', handler);
	        _this.style.display = 'block';
	      }
	    }
	    this.eventManager.addEventListener(document.body, 'mousemove', handler);
	  },
	  createBorders: function(settings) {
	    this.main = document.createElement('div');
	    var borderDivs = ['top', 'left', 'bottom', 'right', 'corner'];
	    var style = this.main.style;
	    style.position = 'absolute';
	    style.top = 0;
	    style.left = 0;
	    for (var i = 0; i < 5; i++) {
	      var position = borderDivs[i];
	      var div = document.createElement('div');
	      div.className = 'wtBorder ' + (this.settings.className || '');
	      if (this.settings[position] && this.settings[position].hide) {
	        div.className += ' hidden';
	      }
	      style = div.style;
	      style.backgroundColor = (this.settings[position] && this.settings[position].color) ? this.settings[position].color : settings.border.color;
	      style.height = (this.settings[position] && this.settings[position].width) ? this.settings[position].width + 'px' : settings.border.width + 'px';
	      style.width = (this.settings[position] && this.settings[position].width) ? this.settings[position].width + 'px' : settings.border.width + 'px';
	      this.main.appendChild(div);
	    }
	    this.top = this.main.childNodes[0];
	    this.left = this.main.childNodes[1];
	    this.bottom = this.main.childNodes[2];
	    this.right = this.main.childNodes[3];
	    this.topStyle = this.top.style;
	    this.leftStyle = this.left.style;
	    this.bottomStyle = this.bottom.style;
	    this.rightStyle = this.right.style;
	    this.corner = this.main.childNodes[4];
	    this.corner.className += ' corner';
	    this.cornerStyle = this.corner.style;
	    this.cornerStyle.width = this.cornerDefaultStyle.width;
	    this.cornerStyle.height = this.cornerDefaultStyle.height;
	    this.cornerStyle.border = [this.cornerDefaultStyle.borderWidth, this.cornerDefaultStyle.borderStyle, this.cornerDefaultStyle.borderColor].join(' ');
	    if (Handsontable.mobileBrowser) {
	      this.createMultipleSelectorHandles();
	    }
	    this.disappear();
	    if (!this.wot.wtTable.bordersHolder) {
	      this.wot.wtTable.bordersHolder = document.createElement('div');
	      this.wot.wtTable.bordersHolder.className = 'htBorders';
	      this.wot.wtTable.spreader.appendChild(this.wot.wtTable.bordersHolder);
	    }
	    this.wot.wtTable.bordersHolder.insertBefore(this.main, this.wot.wtTable.bordersHolder.firstChild);
	  },
	  createMultipleSelectorHandles: function() {
	    this.selectionHandles = {
	      topLeft: document.createElement('DIV'),
	      topLeftHitArea: document.createElement('DIV'),
	      bottomRight: document.createElement('DIV'),
	      bottomRightHitArea: document.createElement('DIV')
	    };
	    var width = 10;
	    var hitAreaWidth = 40;
	    this.selectionHandles.topLeft.className = 'topLeftSelectionHandle';
	    this.selectionHandles.topLeftHitArea.className = 'topLeftSelectionHandle-HitArea';
	    this.selectionHandles.bottomRight.className = 'bottomRightSelectionHandle';
	    this.selectionHandles.bottomRightHitArea.className = 'bottomRightSelectionHandle-HitArea';
	    this.selectionHandles.styles = {
	      topLeft: this.selectionHandles.topLeft.style,
	      topLeftHitArea: this.selectionHandles.topLeftHitArea.style,
	      bottomRight: this.selectionHandles.bottomRight.style,
	      bottomRightHitArea: this.selectionHandles.bottomRightHitArea.style
	    };
	    var hitAreaStyle = {
	      position: 'absolute',
	      height: hitAreaWidth + 'px',
	      width: hitAreaWidth + 'px',
	      'border-radius': parseInt(hitAreaWidth / 1.5, 10) + 'px'
	    };
	    for (var prop in hitAreaStyle) {
	      if (hitAreaStyle.hasOwnProperty(prop)) {
	        this.selectionHandles.styles.bottomRightHitArea[prop] = hitAreaStyle[prop];
	        this.selectionHandles.styles.topLeftHitArea[prop] = hitAreaStyle[prop];
	      }
	    }
	    var handleStyle = {
	      position: 'absolute',
	      height: width + 'px',
	      width: width + 'px',
	      'border-radius': parseInt(width / 1.5, 10) + 'px',
	      background: '#F5F5FF',
	      border: '1px solid #4285c8'
	    };
	    for (var prop$__7 in handleStyle) {
	      if (handleStyle.hasOwnProperty(prop$__7)) {
	        this.selectionHandles.styles.bottomRight[prop$__7] = handleStyle[prop$__7];
	        this.selectionHandles.styles.topLeft[prop$__7] = handleStyle[prop$__7];
	      }
	    }
	    this.main.appendChild(this.selectionHandles.topLeft);
	    this.main.appendChild(this.selectionHandles.bottomRight);
	    this.main.appendChild(this.selectionHandles.topLeftHitArea);
	    this.main.appendChild(this.selectionHandles.bottomRightHitArea);
	  },
	  isPartRange: function(row, col) {
	    if (this.wot.selections.area.cellRange) {
	      if (row != this.wot.selections.area.cellRange.to.row || col != this.wot.selections.area.cellRange.to.col) {
	        return true;
	      }
	    }
	    return false;
	  },
	  updateMultipleSelectionHandlesPosition: function(row, col, top, left, width, height) {
	    var handleWidth = parseInt(this.selectionHandles.styles.topLeft.width, 10);
	    var hitAreaWidth = parseInt(this.selectionHandles.styles.topLeftHitArea.width, 10);
	    this.selectionHandles.styles.topLeft.top = parseInt(top - handleWidth, 10) + 'px';
	    this.selectionHandles.styles.topLeft.left = parseInt(left - handleWidth, 10) + 'px';
	    this.selectionHandles.styles.topLeftHitArea.top = parseInt(top - (hitAreaWidth / 4) * 3, 10) + 'px';
	    this.selectionHandles.styles.topLeftHitArea.left = parseInt(left - (hitAreaWidth / 4) * 3, 10) + 'px';
	    this.selectionHandles.styles.bottomRight.top = parseInt(top + height, 10) + 'px';
	    this.selectionHandles.styles.bottomRight.left = parseInt(left + width, 10) + 'px';
	    this.selectionHandles.styles.bottomRightHitArea.top = parseInt(top + height - hitAreaWidth / 4, 10) + 'px';
	    this.selectionHandles.styles.bottomRightHitArea.left = parseInt(left + width - hitAreaWidth / 4, 10) + 'px';
	    if (this.settings.border.multipleSelectionHandlesVisible && this.settings.border.multipleSelectionHandlesVisible()) {
	      this.selectionHandles.styles.topLeft.display = 'block';
	      this.selectionHandles.styles.topLeftHitArea.display = 'block';
	      if (this.isPartRange(row, col)) {
	        this.selectionHandles.styles.bottomRight.display = 'none';
	        this.selectionHandles.styles.bottomRightHitArea.display = 'none';
	      } else {
	        this.selectionHandles.styles.bottomRight.display = 'block';
	        this.selectionHandles.styles.bottomRightHitArea.display = 'block';
	      }
	    } else {
	      this.selectionHandles.styles.topLeft.display = 'none';
	      this.selectionHandles.styles.bottomRight.display = 'none';
	      this.selectionHandles.styles.topLeftHitArea.display = 'none';
	      this.selectionHandles.styles.bottomRightHitArea.display = 'none';
	    }
	    if (row == this.wot.wtSettings.getSetting('fixedRowsTop') || col == this.wot.wtSettings.getSetting('fixedColumnsLeft')) {
	      this.selectionHandles.styles.topLeft.zIndex = '9999';
	      this.selectionHandles.styles.topLeftHitArea.zIndex = '9999';
	    } else {
	      this.selectionHandles.styles.topLeft.zIndex = '';
	      this.selectionHandles.styles.topLeftHitArea.zIndex = '';
	    }
	  },
	  appear: function(corners) {
	    if (this.disabled) {
	      return;
	    }
	    var isMultiple,
	        fromTD,
	        toTD,
	        fromOffset,
	        toOffset,
	        containerOffset,
	        top,
	        minTop,
	        left,
	        minLeft,
	        height,
	        width,
	        fromRow,
	        fromColumn,
	        toRow,
	        toColumn,
	        trimmingContainer,
	        cornerOverlappingContainer,
	        ilen;
	    if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP_LEFT_CORNER)) {
	      ilen = this.wot.getSetting('fixedRowsTop');
	    } else if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	      ilen = this.wot.getSetting('fixedRowsBottom');
	    } else {
	      ilen = this.wot.wtTable.getRenderedRowsCount();
	    }
	    for (var i = 0; i < ilen; i++) {
	      var s = this.wot.wtTable.rowFilter.renderedToSource(i);
	      if (s >= corners[0] && s <= corners[2]) {
	        fromRow = s;
	        break;
	      }
	    }
	    for (var i$__8 = ilen - 1; i$__8 >= 0; i$__8--) {
	      var s$__9 = this.wot.wtTable.rowFilter.renderedToSource(i$__8);
	      if (s$__9 >= corners[0] && s$__9 <= corners[2]) {
	        toRow = s$__9;
	        break;
	      }
	    }
	    ilen = this.wot.wtTable.getRenderedColumnsCount();
	    for (var i$__10 = 0; i$__10 < ilen; i$__10++) {
	      var s$__11 = this.wot.wtTable.columnFilter.renderedToSource(i$__10);
	      if (s$__11 >= corners[1] && s$__11 <= corners[3]) {
	        fromColumn = s$__11;
	        break;
	      }
	    }
	    for (var i$__12 = ilen - 1; i$__12 >= 0; i$__12--) {
	      var s$__13 = this.wot.wtTable.columnFilter.renderedToSource(i$__12);
	      if (s$__13 >= corners[1] && s$__13 <= corners[3]) {
	        toColumn = s$__13;
	        break;
	      }
	    }
	    if (fromRow === void 0 || fromColumn === void 0) {
	      this.disappear();
	      return;
	    }
	    isMultiple = (fromRow !== toRow || fromColumn !== toColumn);
	    fromTD = this.wot.wtTable.getCell(new WalkontableCellCoords(fromRow, fromColumn));
	    toTD = isMultiple ? this.wot.wtTable.getCell(new WalkontableCellCoords(toRow, toColumn)) : fromTD;
	    fromOffset = offset(fromTD);
	    toOffset = isMultiple ? offset(toTD) : fromOffset;
	    containerOffset = offset(this.wot.wtTable.TABLE);
	    minTop = fromOffset.top;
	    height = toOffset.top + outerHeight(toTD) - minTop;
	    minLeft = fromOffset.left;
	    width = toOffset.left + outerWidth(toTD) - minLeft;
	    top = minTop - containerOffset.top - 1;
	    left = minLeft - containerOffset.left - 1;
	    var style = getComputedStyle(fromTD);
	    if (parseInt(style.borderTopWidth, 10) > 0) {
	      top += 1;
	      height = height > 0 ? height - 1 : 0;
	    }
	    if (parseInt(style.borderLeftWidth, 10) > 0) {
	      left += 1;
	      width = width > 0 ? width - 1 : 0;
	    }
	    this.topStyle.top = top + 'px';
	    this.topStyle.left = left + 'px';
	    this.topStyle.width = width + 'px';
	    this.topStyle.display = 'block';
	    this.leftStyle.top = top + 'px';
	    this.leftStyle.left = left + 'px';
	    this.leftStyle.height = height + 'px';
	    this.leftStyle.display = 'block';
	    var delta = Math.floor(this.settings.border.width / 2);
	    this.bottomStyle.top = top + height - delta + 'px';
	    this.bottomStyle.left = left + 'px';
	    this.bottomStyle.width = width + 'px';
	    this.bottomStyle.display = 'block';
	    this.rightStyle.top = top + 'px';
	    this.rightStyle.left = left + width - delta + 'px';
	    this.rightStyle.height = height + 1 + 'px';
	    this.rightStyle.display = 'block';
	    if (Handsontable.mobileBrowser || (!this.hasSetting(this.settings.border.cornerVisible) || this.isPartRange(toRow, toColumn))) {
	      this.cornerStyle.display = 'none';
	    } else {
	      this.cornerStyle.top = top + height - 4 + 'px';
	      this.cornerStyle.left = left + width - 4 + 'px';
	      this.cornerStyle.borderRightWidth = this.cornerDefaultStyle.borderWidth;
	      this.cornerStyle.width = this.cornerDefaultStyle.width;
	      this.cornerStyle.display = 'block';
	      trimmingContainer = getTrimmingContainer(this.wot.wtTable.TABLE);
	      if (toColumn === this.wot.getSetting('totalColumns') - 1) {
	        cornerOverlappingContainer = toTD.offsetLeft + outerWidth(toTD) >= innerWidth(trimmingContainer);
	        if (cornerOverlappingContainer) {
	          this.cornerStyle.left = Math.floor(left + width - 3 - parseInt(this.cornerDefaultStyle.width) / 2) + 'px';
	          this.cornerStyle.borderRightWidth = 0;
	        }
	      }
	      if (toRow === this.wot.getSetting('totalRows') - 1) {
	        cornerOverlappingContainer = toTD.offsetTop + outerHeight(toTD) >= innerHeight(trimmingContainer);
	        if (cornerOverlappingContainer) {
	          this.cornerStyle.top = Math.floor(top + height - 3 - parseInt(this.cornerDefaultStyle.height) / 2) + 'px';
	          this.cornerStyle.borderBottomWidth = 0;
	        }
	      }
	    }
	    if (Handsontable.mobileBrowser) {
	      this.updateMultipleSelectionHandlesPosition(fromRow, fromColumn, top, left, width, height);
	    }
	  },
	  disappear: function() {
	    this.topStyle.display = 'none';
	    this.leftStyle.display = 'none';
	    this.bottomStyle.display = 'none';
	    this.rightStyle.display = 'none';
	    this.cornerStyle.display = 'none';
	    if (Handsontable.mobileBrowser) {
	      this.selectionHandles.styles.topLeft.display = 'none';
	      this.selectionHandles.styles.bottomRight.display = 'none';
	    }
	  },
	  hasSetting: function(setting) {
	    if (typeof setting === 'function') {
	      return setting();
	    }
	    return !!setting;
	  }
	}, {});
	;
	window.WalkontableBorder = WalkontableBorder;

	//# 
	},{"cell/coords":5,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"overlay/_base.js":11}],3:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableViewportColumnsCalculator: {get: function() {
	      return WalkontableViewportColumnsCalculator;
	    }},
	  __esModule: {value: true}
	});
	var privatePool = new WeakMap();
	var WalkontableViewportColumnsCalculator = function WalkontableViewportColumnsCalculator(viewportWidth, scrollOffset, totalColumns, columnWidthFn, overrideFn, onlyFullyVisible, stretchH) {
	  privatePool.set(this, {
	    viewportWidth: viewportWidth,
	    scrollOffset: scrollOffset,
	    totalColumns: totalColumns,
	    columnWidthFn: columnWidthFn,
	    overrideFn: overrideFn,
	    onlyFullyVisible: onlyFullyVisible
	  });
	  this.count = 0;
	  this.startColumn = null;
	  this.endColumn = null;
	  this.startPosition = null;
	  this.stretchAllRatio = 0;
	  this.stretchLastWidth = 0;
	  this.stretch = stretchH;
	  this.totalTargetWidth = 0;
	  this.needVerifyLastColumnWidth = true;
	  this.stretchAllColumnsWidth = [];
	  this.calculate();
	};
	var $WalkontableViewportColumnsCalculator = WalkontableViewportColumnsCalculator;
	($traceurRuntime.createClass)(WalkontableViewportColumnsCalculator, {
	  calculate: function() {
	    var sum = 0;
	    var needReverse = true;
	    var startPositions = [];
	    var columnWidth;
	    var priv = privatePool.get(this);
	    var onlyFullyVisible = priv.onlyFullyVisible;
	    var overrideFn = priv.overrideFn;
	    var scrollOffset = priv.scrollOffset;
	    var totalColumns = priv.totalColumns;
	    var viewportWidth = priv.viewportWidth;
	    for (var i = 0; i < totalColumns; i++) {
	      columnWidth = this._getColumnWidth(i);
	      if (sum <= scrollOffset && !onlyFullyVisible) {
	        this.startColumn = i;
	      }
	      if (sum >= scrollOffset && sum + columnWidth <= scrollOffset + viewportWidth) {
	        if (this.startColumn == null) {
	          this.startColumn = i;
	        }
	        this.endColumn = i;
	      }
	      startPositions.push(sum);
	      sum += columnWidth;
	      if (!onlyFullyVisible) {
	        this.endColumn = i;
	      }
	      if (sum >= scrollOffset + viewportWidth) {
	        needReverse = false;
	        break;
	      }
	    }
	    if (this.endColumn === totalColumns - 1 && needReverse) {
	      this.startColumn = this.endColumn;
	      while (this.startColumn > 0) {
	        var viewportSum = startPositions[this.endColumn] + columnWidth - startPositions[this.startColumn - 1];
	        if (viewportSum <= viewportWidth || !onlyFullyVisible) {
	          this.startColumn--;
	        }
	        if (viewportSum > viewportWidth) {
	          break;
	        }
	      }
	    }
	    if (this.startColumn !== null && overrideFn) {
	      overrideFn(this);
	    }
	    this.startPosition = startPositions[this.startColumn];
	    if (this.startPosition == void 0) {
	      this.startPosition = null;
	    }
	    if (this.startColumn !== null) {
	      this.count = this.endColumn - this.startColumn + 1;
	    }
	  },
	  refreshStretching: function(totalWidth) {
	    if (this.stretch === 'none') {
	      return;
	    }
	    var sumAll = 0;
	    var columnWidth;
	    var remainingSize;
	    var priv = privatePool.get(this);
	    var totalColumns = priv.totalColumns;
	    for (var i = 0; i < totalColumns; i++) {
	      columnWidth = this._getColumnWidth(i);
	      sumAll += columnWidth;
	    }
	    this.totalTargetWidth = totalWidth;
	    remainingSize = sumAll - totalWidth;
	    if (this.stretch === 'all' && remainingSize < 0) {
	      this.stretchAllRatio = totalWidth / sumAll;
	      this.stretchAllColumnsWidth = [];
	      this.needVerifyLastColumnWidth = true;
	    } else if (this.stretch === 'last' && totalWidth !== Infinity) {
	      this.stretchLastWidth = -remainingSize + this._getColumnWidth(totalColumns - 1);
	    }
	  },
	  getStretchedColumnWidth: function(column, baseWidth) {
	    var result = null;
	    if (this.stretch === 'all' && this.stretchAllRatio !== 0) {
	      result = this._getStretchedAllColumnWidth(column, baseWidth);
	    } else if (this.stretch === 'last' && this.stretchLastWidth !== 0) {
	      result = this._getStretchedLastColumnWidth(column);
	    }
	    return result;
	  },
	  _getStretchedAllColumnWidth: function(column, baseWidth) {
	    var sumRatioWidth = 0;
	    var priv = privatePool.get(this);
	    var totalColumns = priv.totalColumns;
	    if (!this.stretchAllColumnsWidth[column]) {
	      this.stretchAllColumnsWidth[column] = Math.round(baseWidth * this.stretchAllRatio);
	    }
	    if (this.stretchAllColumnsWidth.length === totalColumns && this.needVerifyLastColumnWidth) {
	      this.needVerifyLastColumnWidth = false;
	      for (var i = 0; i < this.stretchAllColumnsWidth.length; i++) {
	        sumRatioWidth += this.stretchAllColumnsWidth[i];
	      }
	      if (sumRatioWidth !== this.totalTargetWidth) {
	        this.stretchAllColumnsWidth[this.stretchAllColumnsWidth.length - 1] += this.totalTargetWidth - sumRatioWidth;
	      }
	    }
	    return this.stretchAllColumnsWidth[column];
	  },
	  _getStretchedLastColumnWidth: function(column) {
	    var priv = privatePool.get(this);
	    var totalColumns = priv.totalColumns;
	    if (column === totalColumns - 1) {
	      return this.stretchLastWidth;
	    }
	    return null;
	  },
	  _getColumnWidth: function(column) {
	    var width = privatePool.get(this).columnWidthFn(column);
	    if (width === undefined) {
	      width = $WalkontableViewportColumnsCalculator.DEFAULT_WIDTH;
	    }
	    return width;
	  }
	}, {get DEFAULT_WIDTH() {
	    return 50;
	  }});
	;
	window.WalkontableViewportColumnsCalculator = WalkontableViewportColumnsCalculator;

	//# 
	},{}],4:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableViewportRowsCalculator: {get: function() {
	      return WalkontableViewportRowsCalculator;
	    }},
	  __esModule: {value: true}
	});
	var privatePool = new WeakMap();
	var WalkontableViewportRowsCalculator = function WalkontableViewportRowsCalculator(viewportHeight, scrollOffset, totalRows, rowHeightFn, overrideFn, onlyFullyVisible, horizontalScrollbarHeight) {
	  privatePool.set(this, {
	    viewportHeight: viewportHeight,
	    scrollOffset: scrollOffset,
	    totalRows: totalRows,
	    rowHeightFn: rowHeightFn,
	    overrideFn: overrideFn,
	    onlyFullyVisible: onlyFullyVisible,
	    horizontalScrollbarHeight: horizontalScrollbarHeight
	  });
	  this.count = 0;
	  this.startRow = null;
	  this.endRow = null;
	  this.startPosition = null;
	  this.calculate();
	};
	var $WalkontableViewportRowsCalculator = WalkontableViewportRowsCalculator;
	($traceurRuntime.createClass)(WalkontableViewportRowsCalculator, {calculate: function() {
	    var sum = 0;
	    var needReverse = true;
	    var startPositions = [];
	    var priv = privatePool.get(this);
	    var onlyFullyVisible = priv.onlyFullyVisible;
	    var overrideFn = priv.overrideFn;
	    var rowHeightFn = priv.rowHeightFn;
	    var scrollOffset = priv.scrollOffset;
	    var totalRows = priv.totalRows;
	    var viewportHeight = priv.viewportHeight;
	    var horizontalScrollbarHeight = priv.horizontalScrollbarHeight || 0;
	    for (var i = 0; i < totalRows; i++) {
	      var rowHeight = rowHeightFn(i);
	      if (rowHeight === undefined) {
	        rowHeight = $WalkontableViewportRowsCalculator.DEFAULT_HEIGHT;
	      }
	      if (sum <= scrollOffset && !onlyFullyVisible) {
	        this.startRow = i;
	      }
	      if (sum >= scrollOffset && sum + rowHeight <= scrollOffset + viewportHeight - horizontalScrollbarHeight) {
	        if (this.startRow === null) {
	          this.startRow = i;
	        }
	        this.endRow = i;
	      }
	      startPositions.push(sum);
	      sum += rowHeight;
	      if (!onlyFullyVisible) {
	        this.endRow = i;
	      }
	      if (sum >= scrollOffset + viewportHeight - horizontalScrollbarHeight) {
	        needReverse = false;
	        break;
	      }
	    }
	    if (this.endRow === totalRows - 1 && needReverse) {
	      this.startRow = this.endRow;
	      while (this.startRow > 0) {
	        var viewportSum = startPositions[this.endRow] + rowHeight - startPositions[this.startRow - 1];
	        if (viewportSum <= viewportHeight - horizontalScrollbarHeight || !onlyFullyVisible) {
	          this.startRow--;
	        }
	        if (viewportSum >= viewportHeight - horizontalScrollbarHeight) {
	          break;
	        }
	      }
	    }
	    if (this.startRow !== null && overrideFn) {
	      overrideFn(this);
	    }
	    this.startPosition = startPositions[this.startRow];
	    if (this.startPosition == void 0) {
	      this.startPosition = null;
	    }
	    if (this.startRow !== null) {
	      this.count = this.endRow - this.startRow + 1;
	    }
	  }}, {get DEFAULT_HEIGHT() {
	    return 23;
	  }});
	;
	window.WalkontableViewportRowsCalculator = WalkontableViewportRowsCalculator;

	//# 
	},{}],5:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableCellCoords: {get: function() {
	      return WalkontableCellCoords;
	    }},
	  __esModule: {value: true}
	});
	var WalkontableCellCoords = function WalkontableCellCoords(row, col) {
	  if (typeof row !== 'undefined' && typeof col !== 'undefined') {
	    this.row = row;
	    this.col = col;
	  } else {
	    this.row = null;
	    this.col = null;
	  }
	};
	($traceurRuntime.createClass)(WalkontableCellCoords, {
	  isValid: function(wotInstance) {
	    if (this.row < 0 || this.col < 0) {
	      return false;
	    }
	    if (this.row >= wotInstance.getSetting('totalRows') || this.col >= wotInstance.getSetting('totalColumns')) {
	      return false;
	    }
	    return true;
	  },
	  isEqual: function(cellCoords) {
	    if (cellCoords === this) {
	      return true;
	    }
	    return this.row === cellCoords.row && this.col === cellCoords.col;
	  },
	  isSouthEastOf: function(testedCoords) {
	    return this.row >= testedCoords.row && this.col >= testedCoords.col;
	  },
	  isNorthWestOf: function(testedCoords) {
	    return this.row <= testedCoords.row && this.col <= testedCoords.col;
	  },
	  isSouthWestOf: function(testedCoords) {
	    return this.row >= testedCoords.row && this.col <= testedCoords.col;
	  },
	  isNorthEastOf: function(testedCoords) {
	    return this.row <= testedCoords.row && this.col >= testedCoords.col;
	  }
	}, {});
	;
	window.WalkontableCellCoords = WalkontableCellCoords;

	//# 
	},{}],6:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableCellRange: {get: function() {
	      return WalkontableCellRange;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_cell_47_coords__;
	var WalkontableCellCoords = ($___46__46__47_cell_47_coords__ = require("cell/coords"), $___46__46__47_cell_47_coords__ && $___46__46__47_cell_47_coords__.__esModule && $___46__46__47_cell_47_coords__ || {default: $___46__46__47_cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = function WalkontableCellRange(highlight, from, to) {
	  this.highlight = highlight;
	  this.from = from;
	  this.to = to;
	};
	var $WalkontableCellRange = WalkontableCellRange;
	($traceurRuntime.createClass)(WalkontableCellRange, {
	  isValid: function(wotInstance) {
	    return this.from.isValid(wotInstance) && this.to.isValid(wotInstance);
	  },
	  isSingle: function() {
	    return this.from.row === this.to.row && this.from.col === this.to.col;
	  },
	  getHeight: function() {
	    return Math.max(this.from.row, this.to.row) - Math.min(this.from.row, this.to.row) + 1;
	  },
	  getWidth: function() {
	    return Math.max(this.from.col, this.to.col) - Math.min(this.from.col, this.to.col) + 1;
	  },
	  includes: function(cellCoords) {
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    if (cellCoords.row < 0) {
	      cellCoords.row = 0;
	    }
	    if (cellCoords.col < 0) {
	      cellCoords.col = 0;
	    }
	    return topLeft.row <= cellCoords.row && bottomRight.row >= cellCoords.row && topLeft.col <= cellCoords.col && bottomRight.col >= cellCoords.col;
	  },
	  includesRange: function(testedRange) {
	    return this.includes(testedRange.getTopLeftCorner()) && this.includes(testedRange.getBottomRightCorner());
	  },
	  isEqual: function(testedRange) {
	    return (Math.min(this.from.row, this.to.row) == Math.min(testedRange.from.row, testedRange.to.row)) && (Math.max(this.from.row, this.to.row) == Math.max(testedRange.from.row, testedRange.to.row)) && (Math.min(this.from.col, this.to.col) == Math.min(testedRange.from.col, testedRange.to.col)) && (Math.max(this.from.col, this.to.col) == Math.max(testedRange.from.col, testedRange.to.col));
	  },
	  overlaps: function(testedRange) {
	    return testedRange.isSouthEastOf(this.getTopLeftCorner()) && testedRange.isNorthWestOf(this.getBottomRightCorner());
	  },
	  isSouthEastOf: function(testedCoords) {
	    return this.getTopLeftCorner().isSouthEastOf(testedCoords) || this.getBottomRightCorner().isSouthEastOf(testedCoords);
	  },
	  isNorthWestOf: function(testedCoords) {
	    return this.getTopLeftCorner().isNorthWestOf(testedCoords) || this.getBottomRightCorner().isNorthWestOf(testedCoords);
	  },
	  expand: function(cellCoords) {
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    if (cellCoords.row < topLeft.row || cellCoords.col < topLeft.col || cellCoords.row > bottomRight.row || cellCoords.col > bottomRight.col) {
	      this.from = new WalkontableCellCoords(Math.min(topLeft.row, cellCoords.row), Math.min(topLeft.col, cellCoords.col));
	      this.to = new WalkontableCellCoords(Math.max(bottomRight.row, cellCoords.row), Math.max(bottomRight.col, cellCoords.col));
	      return true;
	    }
	    return false;
	  },
	  expandByRange: function(expandingRange) {
	    if (this.includesRange(expandingRange) || !this.overlaps(expandingRange)) {
	      return false;
	    }
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    var topRight = this.getTopRightCorner();
	    var bottomLeft = this.getBottomLeftCorner();
	    var expandingTopLeft = expandingRange.getTopLeftCorner();
	    var expandingBottomRight = expandingRange.getBottomRightCorner();
	    var resultTopRow = Math.min(topLeft.row, expandingTopLeft.row);
	    var resultTopCol = Math.min(topLeft.col, expandingTopLeft.col);
	    var resultBottomRow = Math.max(bottomRight.row, expandingBottomRight.row);
	    var resultBottomCol = Math.max(bottomRight.col, expandingBottomRight.col);
	    var finalFrom = new WalkontableCellCoords(resultTopRow, resultTopCol),
	        finalTo = new WalkontableCellCoords(resultBottomRow, resultBottomCol);
	    var isCorner = new $WalkontableCellRange(finalFrom, finalFrom, finalTo).isCorner(this.from, expandingRange),
	        onlyMerge = expandingRange.isEqual(new $WalkontableCellRange(finalFrom, finalFrom, finalTo));
	    if (isCorner && !onlyMerge) {
	      if (this.from.col > finalFrom.col) {
	        finalFrom.col = resultBottomCol;
	        finalTo.col = resultTopCol;
	      }
	      if (this.from.row > finalFrom.row) {
	        finalFrom.row = resultBottomRow;
	        finalTo.row = resultTopRow;
	      }
	    }
	    this.from = finalFrom;
	    this.to = finalTo;
	    return true;
	  },
	  getDirection: function() {
	    if (this.from.isNorthWestOf(this.to)) {
	      return 'NW-SE';
	    } else if (this.from.isNorthEastOf(this.to)) {
	      return 'NE-SW';
	    } else if (this.from.isSouthEastOf(this.to)) {
	      return 'SE-NW';
	    } else if (this.from.isSouthWestOf(this.to)) {
	      return 'SW-NE';
	    }
	  },
	  setDirection: function(direction) {
	    switch (direction) {
	      case 'NW-SE':
	        this.from = this.getTopLeftCorner();
	        this.to = this.getBottomRightCorner();
	        break;
	      case 'NE-SW':
	        this.from = this.getTopRightCorner();
	        this.to = this.getBottomLeftCorner();
	        break;
	      case 'SE-NW':
	        this.from = this.getBottomRightCorner();
	        this.to = this.getTopLeftCorner();
	        break;
	      case 'SW-NE':
	        this.from = this.getBottomLeftCorner();
	        this.to = this.getTopRightCorner();
	        break;
	    }
	  },
	  getTopLeftCorner: function() {
	    return new WalkontableCellCoords(Math.min(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));
	  },
	  getBottomRightCorner: function() {
	    return new WalkontableCellCoords(Math.max(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));
	  },
	  getTopRightCorner: function() {
	    return new WalkontableCellCoords(Math.min(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));
	  },
	  getBottomLeftCorner: function() {
	    return new WalkontableCellCoords(Math.max(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));
	  },
	  isCorner: function(coords, expandedRange) {
	    if (expandedRange) {
	      if (expandedRange.includes(coords)) {
	        if (this.getTopLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.from.col)) || this.getTopRightCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.to.col)) || this.getBottomLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.from.col)) || this.getBottomRightCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.to.col))) {
	          return true;
	        }
	      }
	    }
	    return coords.isEqual(this.getTopLeftCorner()) || coords.isEqual(this.getTopRightCorner()) || coords.isEqual(this.getBottomLeftCorner()) || coords.isEqual(this.getBottomRightCorner());
	  },
	  getOppositeCorner: function(coords, expandedRange) {
	    if (!(coords instanceof WalkontableCellCoords)) {
	      return false;
	    }
	    if (expandedRange) {
	      if (expandedRange.includes(coords)) {
	        if (this.getTopLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.from.col))) {
	          return this.getBottomRightCorner();
	        }
	        if (this.getTopRightCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.to.col))) {
	          return this.getBottomLeftCorner();
	        }
	        if (this.getBottomLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.from.col))) {
	          return this.getTopRightCorner();
	        }
	        if (this.getBottomRightCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.to.col))) {
	          return this.getTopLeftCorner();
	        }
	      }
	    }
	    if (coords.isEqual(this.getBottomRightCorner())) {
	      return this.getTopLeftCorner();
	    } else if (coords.isEqual(this.getTopLeftCorner())) {
	      return this.getBottomRightCorner();
	    } else if (coords.isEqual(this.getTopRightCorner())) {
	      return this.getBottomLeftCorner();
	    } else if (coords.isEqual(this.getBottomLeftCorner())) {
	      return this.getTopRightCorner();
	    }
	  },
	  getBordersSharedWith: function(range) {
	    if (!this.includesRange(range)) {
	      return [];
	    }
	    var thisBorders = {
	      top: Math.min(this.from.row, this.to.row),
	      bottom: Math.max(this.from.row, this.to.row),
	      left: Math.min(this.from.col, this.to.col),
	      right: Math.max(this.from.col, this.to.col)
	    };
	    var rangeBorders = {
	      top: Math.min(range.from.row, range.to.row),
	      bottom: Math.max(range.from.row, range.to.row),
	      left: Math.min(range.from.col, range.to.col),
	      right: Math.max(range.from.col, range.to.col)
	    };
	    var result = [];
	    if (thisBorders.top == rangeBorders.top) {
	      result.push('top');
	    }
	    if (thisBorders.right == rangeBorders.right) {
	      result.push('right');
	    }
	    if (thisBorders.bottom == rangeBorders.bottom) {
	      result.push('bottom');
	    }
	    if (thisBorders.left == rangeBorders.left) {
	      result.push('left');
	    }
	    return result;
	  },
	  getInner: function() {
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    var out = [];
	    for (var r = topLeft.row; r <= bottomRight.row; r++) {
	      for (var c = topLeft.col; c <= bottomRight.col; c++) {
	        if (!(this.from.row === r && this.from.col === c) && !(this.to.row === r && this.to.col === c)) {
	          out.push(new WalkontableCellCoords(r, c));
	        }
	      }
	    }
	    return out;
	  },
	  getAll: function() {
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    var out = [];
	    for (var r = topLeft.row; r <= bottomRight.row; r++) {
	      for (var c = topLeft.col; c <= bottomRight.col; c++) {
	        if (topLeft.row === r && topLeft.col === c) {
	          out.push(topLeft);
	        } else if (bottomRight.row === r && bottomRight.col === c) {
	          out.push(bottomRight);
	        } else {
	          out.push(new WalkontableCellCoords(r, c));
	        }
	      }
	    }
	    return out;
	  },
	  forAll: function(callback) {
	    var topLeft = this.getTopLeftCorner();
	    var bottomRight = this.getBottomRightCorner();
	    for (var r = topLeft.row; r <= bottomRight.row; r++) {
	      for (var c = topLeft.col; c <= bottomRight.col; c++) {
	        var breakIteration = callback(r, c);
	        if (breakIteration === false) {
	          return;
	        }
	      }
	    }
	  }
	}, {});
	;
	window.WalkontableCellRange = WalkontableCellRange;

	//# 
	},{"cell/coords":5}],7:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Walkontable: {get: function() {
	      return Walkontable;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47__46__46__47_helpers_47_string__,
	    $__event__,
	    $__overlays__,
	    $__scroll__,
	    $__settings__,
	    $__table__,
	    $__viewport__,
	    $__overlay_47__95_base_46_js__,
	    $__overlay_47_top_46_js__,
	    $__overlay_47_left_46_js__,
	    $__overlay_47_debug_46_js__,
	    $__overlay_47_topLeftCorner_46_js__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    fastInnerText = $__0.fastInnerText,
	    isVisible = $__0.isVisible,
	    removeClass = $__0.removeClass;
	var objectEach = ($___46__46__47__46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_object__}).objectEach;
	var $__2 = ($___46__46__47__46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_string__}),
	    toUpperCaseFirst = $__2.toUpperCaseFirst,
	    randomString = $__2.randomString;
	var WalkontableEvent = ($__event__ = require("event"), $__event__ && $__event__.__esModule && $__event__ || {default: $__event__}).WalkontableEvent;
	var WalkontableOverlays = ($__overlays__ = require("overlays"), $__overlays__ && $__overlays__.__esModule && $__overlays__ || {default: $__overlays__}).WalkontableOverlays;
	var WalkontableScroll = ($__scroll__ = require("scroll"), $__scroll__ && $__scroll__.__esModule && $__scroll__ || {default: $__scroll__}).WalkontableScroll;
	var WalkontableSettings = ($__settings__ = require("settings"), $__settings__ && $__settings__.__esModule && $__settings__ || {default: $__settings__}).WalkontableSettings;
	var WalkontableTable = ($__table__ = require("table"), $__table__ && $__table__.__esModule && $__table__ || {default: $__table__}).WalkontableTable;
	var WalkontableViewport = ($__viewport__ = require("viewport"), $__viewport__ && $__viewport__.__esModule && $__viewport__ || {default: $__viewport__}).WalkontableViewport;
	var WalkontableOverlay = ($__overlay_47__95_base_46_js__ = require("overlay/_base.js"), $__overlay_47__95_base_46_js__ && $__overlay_47__95_base_46_js__.__esModule && $__overlay_47__95_base_46_js__ || {default: $__overlay_47__95_base_46_js__}).WalkontableOverlay;
	var WalkontableTopOverlay = ($__overlay_47_top_46_js__ = require("overlay/top.js"), $__overlay_47_top_46_js__ && $__overlay_47_top_46_js__.__esModule && $__overlay_47_top_46_js__ || {default: $__overlay_47_top_46_js__}).WalkontableTopOverlay;
	var WalkontableLeftOverlay = ($__overlay_47_left_46_js__ = require("overlay/left.js"), $__overlay_47_left_46_js__ && $__overlay_47_left_46_js__.__esModule && $__overlay_47_left_46_js__ || {default: $__overlay_47_left_46_js__}).WalkontableLeftOverlay;
	var WalkontableDebugOverlay = ($__overlay_47_debug_46_js__ = require("overlay/debug.js"), $__overlay_47_debug_46_js__ && $__overlay_47_debug_46_js__.__esModule && $__overlay_47_debug_46_js__ || {default: $__overlay_47_debug_46_js__}).WalkontableDebugOverlay;
	var WalkontableTopLeftCornerOverlay = ($__overlay_47_topLeftCorner_46_js__ = require("overlay/topLeftCorner.js"), $__overlay_47_topLeftCorner_46_js__ && $__overlay_47_topLeftCorner_46_js__.__esModule && $__overlay_47_topLeftCorner_46_js__ || {default: $__overlay_47_topLeftCorner_46_js__}).WalkontableTopLeftCornerOverlay;
	var Walkontable = function Walkontable(settings) {
	  var originalHeaders = [];
	  this.guid = 'wt_' + randomString();
	  if (settings.cloneSource) {
	    this.cloneSource = settings.cloneSource;
	    this.cloneOverlay = settings.cloneOverlay;
	    this.wtSettings = settings.cloneSource.wtSettings;
	    this.wtTable = new WalkontableTable(this, settings.table, settings.wtRootElement);
	    this.wtScroll = new WalkontableScroll(this);
	    this.wtViewport = settings.cloneSource.wtViewport;
	    this.wtEvent = new WalkontableEvent(this);
	    this.selections = this.cloneSource.selections;
	  } else {
	    this.wtSettings = new WalkontableSettings(this, settings);
	    this.wtTable = new WalkontableTable(this, settings.table);
	    this.wtScroll = new WalkontableScroll(this);
	    this.wtViewport = new WalkontableViewport(this);
	    this.wtEvent = new WalkontableEvent(this);
	    this.selections = this.getSetting('selections');
	    this.wtOverlays = new WalkontableOverlays(this);
	    this.exportSettingsAsClassNames();
	  }
	  if (this.wtTable.THEAD.childNodes.length && this.wtTable.THEAD.childNodes[0].childNodes.length) {
	    for (var c = 0,
	        clen = this.wtTable.THEAD.childNodes[0].childNodes.length; c < clen; c++) {
	      originalHeaders.push(this.wtTable.THEAD.childNodes[0].childNodes[c].innerHTML);
	    }
	    if (!this.getSetting('columnHeaders').length) {
	      this.update('columnHeaders', [function(column, TH) {
	        fastInnerText(TH, originalHeaders[column]);
	      }]);
	    }
	  }
	  this.drawn = false;
	  this.drawInterrupted = false;
	};
	($traceurRuntime.createClass)(Walkontable, {
	  draw: function() {
	    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;
	    this.drawInterrupted = false;
	    if (!fastDraw && !isVisible(this.wtTable.TABLE)) {
	      this.drawInterrupted = true;
	    } else {
	      this.wtTable.draw(fastDraw);
	    }
	    return this;
	  },
	  getCell: function(coords) {
	    var topmost = arguments[1] !== (void 0) ? arguments[1] : false;
	    if (!topmost) {
	      return this.wtTable.getCell(coords);
	    }
	    var totalRows = this.wtSettings.getSetting('totalRows');
	    var fixedRowsTop = this.wtSettings.getSetting('fixedRowsTop');
	    var fixedRowsBottom = this.wtSettings.getSetting('fixedRowsBottom');
	    var fixedColumns = this.wtSettings.getSetting('fixedColumnsLeft');
	    if (coords.row < fixedRowsTop && coords.col < fixedColumns) {
	      return this.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell(coords);
	    } else if (coords.row < fixedRowsTop) {
	      return this.wtOverlays.topOverlay.clone.wtTable.getCell(coords);
	    } else if (coords.col < fixedColumns && coords.row >= totalRows - fixedRowsBottom) {
	      if (this.wtOverlays.bottomLeftCornerOverlay.clone) {
	        return this.wtOverlays.bottomLeftCornerOverlay.clone.wtTable.getCell(coords);
	      }
	    } else if (coords.col < fixedColumns) {
	      return this.wtOverlays.leftOverlay.clone.wtTable.getCell(coords);
	    } else if (coords.row >= totalRows - fixedRowsBottom) {
	      if (this.wtOverlays.bottomOverlay.clone) {
	        return this.wtOverlays.bottomOverlay.clone.wtTable.getCell(coords);
	      }
	    }
	    return this.wtTable.getCell(coords);
	  },
	  update: function(settings, value) {
	    return this.wtSettings.update(settings, value);
	  },
	  scrollVertical: function(row) {
	    this.wtOverlays.topOverlay.scrollTo(row);
	    this.getSetting('onScrollVertically');
	    return this;
	  },
	  scrollHorizontal: function(column) {
	    this.wtOverlays.leftOverlay.scrollTo(column);
	    this.getSetting('onScrollHorizontally');
	    return this;
	  },
	  scrollViewport: function(coords) {
	    this.wtScroll.scrollViewport(coords);
	    return this;
	  },
	  getViewport: function() {
	    return [this.wtTable.getFirstVisibleRow(), this.wtTable.getFirstVisibleColumn(), this.wtTable.getLastVisibleRow(), this.wtTable.getLastVisibleColumn()];
	  },
	  getOverlayName: function() {
	    return this.cloneOverlay ? this.cloneOverlay.type : 'master';
	  },
	  exportSettingsAsClassNames: function() {
	    var $__14 = this;
	    var toExport = {
	      rowHeaders: ['array'],
	      columnHeaders: ['array']
	    };
	    var allClassNames = [];
	    var newClassNames = [];
	    objectEach(toExport, (function(optionType, key) {
	      if (optionType.indexOf('array') > -1 && $__14.getSetting(key).length) {
	        newClassNames.push('ht' + toUpperCaseFirst(key));
	      }
	      allClassNames.push('ht' + toUpperCaseFirst(key));
	    }));
	    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);
	    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);
	  },
	  getSetting: function(key, param1, param2, param3, param4) {
	    return this.wtSettings.getSetting(key, param1, param2, param3, param4);
	  },
	  hasSetting: function(key) {
	    return this.wtSettings.has(key);
	  },
	  destroy: function() {
	    this.wtOverlays.destroy();
	    this.wtEvent.destroy();
	  }
	}, {});
	;
	window.Walkontable = Walkontable;

	//# 
	},{"event":8,"helpers/dom/element":44,"helpers/object":49,"helpers/string":51,"overlay/_base.js":11,"overlay/debug.js":12,"overlay/left.js":13,"overlay/top.js":14,"overlay/topLeftCorner.js":15,"overlays":16,"scroll":17,"settings":19,"table":20,"viewport":22}],8:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableEvent: {get: function() {
	      return WalkontableEvent;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47_eventManager__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    closest = $__0.closest,
	    hasClass = $__0.hasClass,
	    isChildOf = $__0.isChildOf;
	var eventManagerObject = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).eventManager;
	function WalkontableEvent(instance) {
	  var that = this;
	  var eventManager = eventManagerObject(instance);
	  this.instance = instance;
	  var dblClickOrigin = [null, null];
	  this.dblClickTimeout = [null, null];
	  var onMouseDown = function(event) {
	    var cell = that.parentCell(event.realTarget);
	    if (hasClass(event.realTarget, 'corner')) {
	      that.instance.getSetting('onCellCornerMouseDown', event, event.realTarget);
	    } else if (cell.TD) {
	      if (that.instance.hasSetting('onCellMouseDown')) {
	        that.instance.getSetting('onCellMouseDown', event, cell.coords, cell.TD, that.instance);
	      }
	    }
	    if (event.button !== 2) {
	      if (cell.TD) {
	        dblClickOrigin[0] = cell.TD;
	        clearTimeout(that.dblClickTimeout[0]);
	        that.dblClickTimeout[0] = setTimeout(function() {
	          dblClickOrigin[0] = null;
	        }, 1000);
	      }
	    }
	  };
	  var onTouchMove = function(event) {
	    that.instance.touchMoving = true;
	  };
	  var longTouchTimeout;
	  var onTouchStart = function(event) {
	    var container = this;
	    eventManager.addEventListener(this, 'touchmove', onTouchMove);
	    that.checkIfTouchMove = setTimeout(function() {
	      if (that.instance.touchMoving === true) {
	        that.instance.touchMoving = void 0;
	        eventManager.removeEventListener('touchmove', onTouchMove, false);
	        return;
	      } else {
	        onMouseDown(event);
	      }
	    }, 30);
	  };
	  var lastMouseOver;
	  var onMouseOver = function(event) {
	    var table,
	        td;
	    if (that.instance.hasSetting('onCellMouseOver')) {
	      table = that.instance.wtTable.TABLE;
	      td = closest(event.realTarget, ['TD', 'TH'], table);
	      if (td && td !== lastMouseOver && isChildOf(td, table)) {
	        lastMouseOver = td;
	        that.instance.getSetting('onCellMouseOver', event, that.instance.wtTable.getCoords(td), td, that.instance);
	      }
	    }
	  };
	  var onMouseUp = function(event) {
	    if (event.button !== 2) {
	      var cell = that.parentCell(event.realTarget);
	      if (cell.TD === dblClickOrigin[0] && cell.TD === dblClickOrigin[1]) {
	        if (hasClass(event.realTarget, 'corner')) {
	          that.instance.getSetting('onCellCornerDblClick', event, cell.coords, cell.TD, that.instance);
	        } else {
	          that.instance.getSetting('onCellDblClick', event, cell.coords, cell.TD, that.instance);
	        }
	        dblClickOrigin[0] = null;
	        dblClickOrigin[1] = null;
	      } else if (cell.TD === dblClickOrigin[0]) {
	        dblClickOrigin[1] = cell.TD;
	        clearTimeout(that.dblClickTimeout[1]);
	        that.dblClickTimeout[1] = setTimeout(function() {
	          dblClickOrigin[1] = null;
	        }, 500);
	      }
	    }
	  };
	  var onTouchEnd = function(event) {
	    clearTimeout(longTouchTimeout);
	    event.preventDefault();
	    onMouseUp(event);
	  };
	  eventManager.addEventListener(this.instance.wtTable.holder, 'mousedown', onMouseDown);
	  eventManager.addEventListener(this.instance.wtTable.TABLE, 'mouseover', onMouseOver);
	  eventManager.addEventListener(this.instance.wtTable.holder, 'mouseup', onMouseUp);
	  if (this.instance.wtTable.holder.parentNode.parentNode && Handsontable.mobileBrowser && !that.instance.wtTable.isWorkingOnClone()) {
	    var classSelector = '.' + this.instance.wtTable.holder.parentNode.className.split(' ').join('.');
	    eventManager.addEventListener(this.instance.wtTable.holder, 'touchstart', function(event) {
	      that.instance.touchApplied = true;
	      if (isChildOf(event.target, classSelector)) {
	        onTouchStart.call(event.target, event);
	      }
	    });
	    eventManager.addEventListener(this.instance.wtTable.holder, 'touchend', function(event) {
	      that.instance.touchApplied = false;
	      if (isChildOf(event.target, classSelector)) {
	        onTouchEnd.call(event.target, event);
	      }
	    });
	    if (!that.instance.momentumScrolling) {
	      that.instance.momentumScrolling = {};
	    }
	    eventManager.addEventListener(this.instance.wtTable.holder, 'scroll', function(event) {
	      clearTimeout(that.instance.momentumScrolling._timeout);
	      if (!that.instance.momentumScrolling.ongoing) {
	        that.instance.getSetting('onBeforeTouchScroll');
	      }
	      that.instance.momentumScrolling.ongoing = true;
	      that.instance.momentumScrolling._timeout = setTimeout(function() {
	        if (!that.instance.touchApplied) {
	          that.instance.momentumScrolling.ongoing = false;
	          that.instance.getSetting('onAfterMomentumScroll');
	        }
	      }, 200);
	    });
	  }
	  eventManager.addEventListener(window, 'resize', function() {
	    if (that.instance.getSetting('stretchH') !== 'none') {
	      that.instance.draw();
	    }
	  });
	  this.destroy = function() {
	    clearTimeout(this.dblClickTimeout[0]);
	    clearTimeout(this.dblClickTimeout[1]);
	    eventManager.destroy();
	  };
	}
	WalkontableEvent.prototype.parentCell = function(elem) {
	  var cell = {};
	  var TABLE = this.instance.wtTable.TABLE;
	  var TD = closest(elem, ['TD', 'TH'], TABLE);
	  if (TD && isChildOf(TD, TABLE)) {
	    cell.coords = this.instance.wtTable.getCoords(TD);
	    cell.TD = TD;
	  } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {
	    cell.coords = this.instance.selections.current.cellRange.highlight;
	    cell.TD = this.instance.wtTable.getCell(cell.coords);
	  } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {
	    if (this.instance.selections.area.cellRange) {
	      cell.coords = this.instance.selections.area.cellRange.to;
	      cell.TD = this.instance.wtTable.getCell(cell.coords);
	    }
	  }
	  return cell;
	};
	;
	window.WalkontableEvent = WalkontableEvent;

	//# 
	},{"eventManager":40,"helpers/dom/element":44}],9:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableColumnFilter: {get: function() {
	      return WalkontableColumnFilter;
	    }},
	  __esModule: {value: true}
	});
	var WalkontableColumnFilter = function WalkontableColumnFilter(offset, total, countTH) {
	  this.offset = offset;
	  this.total = total;
	  this.countTH = countTH;
	};
	($traceurRuntime.createClass)(WalkontableColumnFilter, {
	  offsetted: function(index) {
	    return index + this.offset;
	  },
	  unOffsetted: function(index) {
	    return index - this.offset;
	  },
	  renderedToSource: function(index) {
	    return this.offsetted(index);
	  },
	  sourceToRendered: function(index) {
	    return this.unOffsetted(index);
	  },
	  offsettedTH: function(index) {
	    return index - this.countTH;
	  },
	  unOffsettedTH: function(index) {
	    return index + this.countTH;
	  },
	  visibleRowHeadedColumnToSourceColumn: function(index) {
	    return this.renderedToSource(this.offsettedTH(index));
	  },
	  sourceColumnToVisibleRowHeadedColumn: function(index) {
	    return this.unOffsettedTH(this.sourceToRendered(index));
	  }
	}, {});
	;
	window.WalkontableColumnFilter = WalkontableColumnFilter;

	//# 
	},{}],10:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableRowFilter: {get: function() {
	      return WalkontableRowFilter;
	    }},
	  __esModule: {value: true}
	});
	var WalkontableRowFilter = function WalkontableRowFilter(offset, total, countTH) {
	  this.offset = offset;
	  this.total = total;
	  this.countTH = countTH;
	};
	($traceurRuntime.createClass)(WalkontableRowFilter, {
	  offsetted: function(index) {
	    return index + this.offset;
	  },
	  unOffsetted: function(index) {
	    return index - this.offset;
	  },
	  renderedToSource: function(index) {
	    return this.offsetted(index);
	  },
	  sourceToRendered: function(index) {
	    return this.unOffsetted(index);
	  },
	  offsettedTH: function(index) {
	    return index - this.countTH;
	  },
	  unOffsettedTH: function(index) {
	    return index + this.countTH;
	  },
	  visibleColHeadedRowToSourceRow: function(index) {
	    return this.renderedToSource(this.offsettedTH(index));
	  },
	  sourceRowToVisibleColHeadedRow: function(index) {
	    return this.unOffsettedTH(this.sourceToRendered(index));
	  }
	}, {});
	;
	window.WalkontableRowFilter = WalkontableRowFilter;

	//# 
	},{}],11:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableOverlay: {get: function() {
	      return WalkontableOverlay;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getScrollableElement = $__0.getScrollableElement,
	    getTrimmingContainer = $__0.getTrimmingContainer;
	var defineGetter = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__}).defineGetter;
	var eventManagerObject = ($___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__}).eventManager;
	var registeredOverlays = {};
	var WalkontableOverlay = function WalkontableOverlay(wotInstance) {
	  defineGetter(this, 'wot', wotInstance, {writable: false});
	  this.instance = this.wot;
	  this.type = '';
	  this.TABLE = this.wot.wtTable.TABLE;
	  this.hider = this.wot.wtTable.hider;
	  this.spreader = this.wot.wtTable.spreader;
	  this.holder = this.wot.wtTable.holder;
	  this.wtRootElement = this.wot.wtTable.wtRootElement;
	  this.trimmingContainer = getTrimmingContainer(this.hider.parentNode.parentNode);
	  this.mainTableScrollableElement = getScrollableElement(this.wot.wtTable.TABLE);
	  this.needFullRender = this.shouldBeRendered();
	  this.areElementSizesAdjusted = false;
	};
	var $WalkontableOverlay = WalkontableOverlay;
	($traceurRuntime.createClass)(WalkontableOverlay, {
	  shouldBeRendered: function() {
	    return true;
	  },
	  makeClone: function(direction) {
	    if ($WalkontableOverlay.CLONE_TYPES.indexOf(direction) === -1) {
	      throw new Error('Clone type "' + direction + '" is not supported.');
	    }
	    var clone = document.createElement('DIV');
	    var clonedTable = document.createElement('TABLE');
	    clone.className = 'ht_clone_' + direction + ' handsontable';
	    clone.style.position = 'absolute';
	    clone.style.top = 0;
	    clone.style.left = 0;
	    clone.style.overflow = 'hidden';
	    clonedTable.className = this.wot.wtTable.TABLE.className;
	    clone.appendChild(clonedTable);
	    this.type = direction;
	    this.wot.wtTable.wtRootElement.parentNode.appendChild(clone);
	    return new Walkontable({
	      cloneSource: this.wot,
	      cloneOverlay: this,
	      table: clonedTable
	    });
	  },
	  refresh: function() {
	    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;
	    var nextCycleRenderFlag = this.shouldBeRendered();
	    if (this.clone && (this.needFullRender || nextCycleRenderFlag)) {
	      this.clone.draw(fastDraw);
	    }
	    this.needFullRender = nextCycleRenderFlag;
	  },
	  destroy: function() {
	    eventManagerObject(this.clone).destroy();
	  }
	}, {
	  get CLONE_TOP() {
	    return 'top';
	  },
	  get CLONE_BOTTOM() {
	    return 'bottom';
	  },
	  get CLONE_LEFT() {
	    return 'left';
	  },
	  get CLONE_TOP_LEFT_CORNER() {
	    return 'top_left_corner';
	  },
	  get CLONE_BOTTOM_LEFT_CORNER() {
	    return 'bottom_left_corner';
	  },
	  get CLONE_DEBUG() {
	    return 'debug';
	  },
	  get CLONE_TYPES() {
	    return [$WalkontableOverlay.CLONE_TOP, $WalkontableOverlay.CLONE_BOTTOM, $WalkontableOverlay.CLONE_LEFT, $WalkontableOverlay.CLONE_TOP_LEFT_CORNER, $WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER, $WalkontableOverlay.CLONE_DEBUG];
	  },
	  registerOverlay: function(type, overlayClass) {
	    if ($WalkontableOverlay.CLONE_TYPES.indexOf(type) === -1) {
	      throw new Error(("Unsupported overlay (" + type + ")."));
	    }
	    registeredOverlays[type] = overlayClass;
	  },
	  createOverlay: function(type, wot) {
	    return new registeredOverlays[type](wot);
	  },
	  isOverlayTypeOf: function(overlay, type) {
	    if (!overlay || !registeredOverlays[type]) {
	      return false;
	    }
	    return overlay instanceof registeredOverlays[type];
	  }
	});
	;
	window.WalkontableOverlay = WalkontableOverlay;

	//# 
	},{"eventManager":40,"helpers/dom/element":44,"helpers/object":49}],12:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableDebugOverlay: {get: function() {
	      return WalkontableDebugOverlay;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___95_base__;
	var addClass = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;
	var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;
	var WalkontableDebugOverlay = function WalkontableDebugOverlay(wotInstance) {
	  $traceurRuntime.superConstructor($WalkontableDebugOverlay).call(this, wotInstance);
	  this.clone = this.makeClone(WalkontableOverlay.CLONE_DEBUG);
	  this.clone.wtTable.holder.style.opacity = 0.4;
	  this.clone.wtTable.holder.style.textShadow = '0 0 2px #ff0000';
	  addClass(this.clone.wtTable.holder.parentNode, 'wtDebugVisible');
	};
	var $WalkontableDebugOverlay = WalkontableDebugOverlay;
	($traceurRuntime.createClass)(WalkontableDebugOverlay, {}, {}, WalkontableOverlay);
	;
	window.WalkontableDebugOverlay = WalkontableDebugOverlay;
	WalkontableOverlay.registerOverlay(WalkontableOverlay.CLONE_DEBUG, WalkontableDebugOverlay);

	//# 
	},{"_base":11,"helpers/dom/element":44}],13:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableLeftOverlay: {get: function() {
	      return WalkontableLeftOverlay;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___95_base__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    getScrollLeft = $__0.getScrollLeft,
	    getWindowScrollTop = $__0.getWindowScrollTop,
	    hasClass = $__0.hasClass,
	    outerWidth = $__0.outerWidth,
	    removeClass = $__0.removeClass,
	    setOverlayPosition = $__0.setOverlayPosition;
	var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;
	var WalkontableLeftOverlay = function WalkontableLeftOverlay(wotInstance) {
	  $traceurRuntime.superConstructor($WalkontableLeftOverlay).call(this, wotInstance);
	  this.clone = this.makeClone(WalkontableOverlay.CLONE_LEFT);
	};
	var $WalkontableLeftOverlay = WalkontableLeftOverlay;
	($traceurRuntime.createClass)(WalkontableLeftOverlay, {
	  shouldBeRendered: function() {
	    return this.wot.getSetting('fixedColumnsLeft') || this.wot.getSetting('rowHeaders').length ? true : false;
	  },
	  resetFixedPosition: function() {
	    if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {
	      return;
	    }
	    var overlayRoot = this.clone.wtTable.holder.parentNode;
	    var headerPosition = 0;
	    if (this.trimmingContainer === window) {
	      var box = this.wot.wtTable.hider.getBoundingClientRect();
	      var left = Math.ceil(box.left);
	      var right = Math.ceil(box.right);
	      var finalLeft;
	      var finalTop;
	      finalTop = this.wot.wtTable.hider.style.top;
	      finalTop = finalTop === '' ? 0 : finalTop;
	      if (left < 0 && (right - overlayRoot.offsetWidth) > 0) {
	        finalLeft = -left;
	      } else {
	        finalLeft = 0;
	      }
	      headerPosition = finalLeft;
	      finalLeft = finalLeft + 'px';
	      setOverlayPosition(overlayRoot, finalLeft, finalTop);
	    } else {
	      headerPosition = this.getScrollPosition();
	    }
	    this.adjustHeaderBordersPosition(headerPosition);
	    this.adjustElementsSize();
	  },
	  setScrollPosition: function(pos) {
	    if (this.mainTableScrollableElement === window) {
	      window.scrollTo(pos, getWindowScrollTop());
	    } else {
	      this.mainTableScrollableElement.scrollLeft = pos;
	    }
	  },
	  onScroll: function() {
	    this.wot.getSetting('onScrollHorizontally');
	  },
	  sumCellSizes: function(from, to) {
	    var sum = 0;
	    var defaultColumnWidth = this.wot.wtSettings.defaultColumnWidth;
	    while (from < to) {
	      sum += this.wot.wtTable.getStretchedColumnWidth(from) || defaultColumnWidth;
	      from++;
	    }
	    return sum;
	  },
	  adjustElementsSize: function() {
	    var force = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (this.needFullRender || force) {
	      this.adjustRootElementSize();
	      this.adjustRootChildrenSize();
	      if (!force) {
	        this.areElementSizesAdjusted = true;
	      }
	    }
	  },
	  adjustRootElementSize: function() {
	    var masterHolder = this.wot.wtTable.holder;
	    var scrollbarHeight = masterHolder.clientHeight === masterHolder.offsetHeight ? 0 : getScrollbarWidth();
	    var overlayRoot = this.clone.wtTable.holder.parentNode;
	    var overlayRootStyle = overlayRoot.style;
	    var tableWidth;
	    if (this.trimmingContainer !== window) {
	      overlayRootStyle.height = this.wot.wtViewport.getWorkspaceHeight() - scrollbarHeight + 'px';
	    }
	    this.clone.wtTable.holder.style.height = overlayRootStyle.height;
	    tableWidth = outerWidth(this.clone.wtTable.TABLE);
	    overlayRootStyle.width = (tableWidth === 0 ? tableWidth : tableWidth + 4) + 'px';
	  },
	  adjustRootChildrenSize: function() {
	    var scrollbarWidth = getScrollbarWidth();
	    this.clone.wtTable.hider.style.height = this.hider.style.height;
	    this.clone.wtTable.holder.style.height = this.clone.wtTable.holder.parentNode.style.height;
	    if (scrollbarWidth === 0) {
	      scrollbarWidth = 30;
	    }
	    this.clone.wtTable.holder.style.width = parseInt(this.clone.wtTable.holder.parentNode.style.width, 10) + scrollbarWidth + 'px';
	  },
	  applyToDOM: function() {
	    var total = this.wot.getSetting('totalColumns');
	    if (!this.areElementSizesAdjusted) {
	      this.adjustElementsSize();
	    }
	    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {
	      this.spreader.style.left = this.wot.wtViewport.columnsRenderCalculator.startPosition + 'px';
	    } else if (total === 0) {
	      this.spreader.style.left = '0';
	    } else {
	      throw new Error('Incorrect value of the columnsRenderCalculator');
	    }
	    this.spreader.style.right = '';
	    if (this.needFullRender) {
	      this.syncOverlayOffset();
	    }
	  },
	  syncOverlayOffset: function() {
	    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {
	      this.clone.wtTable.spreader.style.top = this.wot.wtViewport.rowsRenderCalculator.startPosition + 'px';
	    } else {
	      this.clone.wtTable.spreader.style.top = '';
	    }
	  },
	  scrollTo: function(sourceCol, beyondRendered) {
	    var newX = this.getTableParentOffset();
	    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;
	    var mainHolder = sourceInstance.wtTable.holder;
	    var scrollbarCompensation = 0;
	    if (beyondRendered && mainHolder.offsetWidth !== mainHolder.clientWidth) {
	      scrollbarCompensation = getScrollbarWidth();
	    }
	    if (beyondRendered) {
	      newX += this.sumCellSizes(0, sourceCol + 1);
	      newX -= this.wot.wtViewport.getViewportWidth();
	    } else {
	      newX += this.sumCellSizes(this.wot.getSetting('fixedColumnsLeft'), sourceCol);
	    }
	    newX += scrollbarCompensation;
	    this.setScrollPosition(newX);
	  },
	  getTableParentOffset: function() {
	    if (this.trimmingContainer === window) {
	      return this.wot.wtTable.holderOffset.left;
	    } else {
	      return 0;
	    }
	  },
	  getScrollPosition: function() {
	    return getScrollLeft(this.mainTableScrollableElement);
	  },
	  adjustHeaderBordersPosition: function(position) {
	    var masterParent = this.wot.wtTable.holder.parentNode;
	    var rowHeaders = this.wot.getSetting('rowHeaders');
	    var fixedColumnsLeft = this.wot.getSetting('fixedColumnsLeft');
	    if (fixedColumnsLeft && !rowHeaders.length) {
	      addClass(masterParent, 'innerBorderLeft');
	    } else if (!fixedColumnsLeft && rowHeaders.length) {
	      var previousState = hasClass(masterParent, 'innerBorderLeft');
	      if (position) {
	        addClass(masterParent, 'innerBorderLeft');
	      } else {
	        removeClass(masterParent, 'innerBorderLeft');
	      }
	      if (!previousState && position || previousState && !position) {
	        this.wot.wtOverlays.adjustElementsSize();
	      }
	    }
	  }
	}, {}, WalkontableOverlay);
	;
	window.WalkontableLeftOverlay = WalkontableLeftOverlay;
	WalkontableOverlay.registerOverlay(WalkontableOverlay.CLONE_LEFT, WalkontableLeftOverlay);

	//# 
	},{"_base":11,"helpers/dom/element":44}],14:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableTopOverlay: {get: function() {
	      return WalkontableTopOverlay;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___95_base__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    getScrollTop = $__0.getScrollTop,
	    getWindowScrollLeft = $__0.getWindowScrollLeft,
	    hasClass = $__0.hasClass,
	    outerHeight = $__0.outerHeight,
	    removeClass = $__0.removeClass,
	    setOverlayPosition = $__0.setOverlayPosition;
	var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;
	var WalkontableTopOverlay = function WalkontableTopOverlay(wotInstance) {
	  $traceurRuntime.superConstructor($WalkontableTopOverlay).call(this, wotInstance);
	  this.clone = this.makeClone(WalkontableOverlay.CLONE_TOP);
	};
	var $WalkontableTopOverlay = WalkontableTopOverlay;
	($traceurRuntime.createClass)(WalkontableTopOverlay, {
	  shouldBeRendered: function() {
	    return this.wot.getSetting('fixedRowsTop') || this.wot.getSetting('columnHeaders').length ? true : false;
	  },
	  resetFixedPosition: function() {
	    if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {
	      return;
	    }
	    var overlayRoot = this.clone.wtTable.holder.parentNode;
	    var headerPosition = 0;
	    if (this.wot.wtOverlays.leftOverlay.trimmingContainer === window) {
	      var box = this.wot.wtTable.hider.getBoundingClientRect();
	      var top = Math.ceil(box.top);
	      var bottom = Math.ceil(box.bottom);
	      var finalLeft;
	      var finalTop;
	      finalLeft = this.wot.wtTable.hider.style.left;
	      finalLeft = finalLeft === '' ? 0 : finalLeft;
	      if (top < 0 && (bottom - overlayRoot.offsetHeight) > 0) {
	        finalTop = -top;
	      } else {
	        finalTop = 0;
	      }
	      headerPosition = finalTop;
	      finalTop = finalTop + 'px';
	      setOverlayPosition(overlayRoot, finalLeft, finalTop);
	    } else {
	      headerPosition = this.getScrollPosition();
	    }
	    this.adjustHeaderBordersPosition(headerPosition);
	    this.adjustElementsSize();
	  },
	  setScrollPosition: function(pos) {
	    if (this.mainTableScrollableElement === window) {
	      window.scrollTo(getWindowScrollLeft(), pos);
	    } else {
	      this.mainTableScrollableElement.scrollTop = pos;
	    }
	  },
	  onScroll: function() {
	    this.wot.getSetting('onScrollVertically');
	  },
	  sumCellSizes: function(from, to) {
	    var sum = 0;
	    var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;
	    while (from < to) {
	      sum += this.wot.wtTable.getRowHeight(from) || defaultRowHeight;
	      from++;
	    }
	    return sum;
	  },
	  adjustElementsSize: function() {
	    var force = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (this.needFullRender || force) {
	      this.adjustRootElementSize();
	      this.adjustRootChildrenSize();
	      if (!force) {
	        this.areElementSizesAdjusted = true;
	      }
	    }
	  },
	  adjustRootElementSize: function() {
	    var masterHolder = this.wot.wtTable.holder;
	    var scrollbarWidth = masterHolder.clientWidth === masterHolder.offsetWidth ? 0 : getScrollbarWidth();
	    var overlayRoot = this.clone.wtTable.holder.parentNode;
	    var overlayRootStyle = overlayRoot.style;
	    var tableHeight;
	    if (this.trimmingContainer !== window) {
	      overlayRootStyle.width = this.wot.wtViewport.getWorkspaceWidth() - scrollbarWidth + 'px';
	    }
	    this.clone.wtTable.holder.style.width = overlayRootStyle.width;
	    tableHeight = outerHeight(this.clone.wtTable.TABLE);
	    overlayRootStyle.height = (tableHeight === 0 ? tableHeight : tableHeight + 4) + 'px';
	  },
	  adjustRootChildrenSize: function() {
	    var scrollbarWidth = getScrollbarWidth();
	    this.clone.wtTable.hider.style.width = this.hider.style.width;
	    this.clone.wtTable.holder.style.width = this.clone.wtTable.holder.parentNode.style.width;
	    if (scrollbarWidth === 0) {
	      scrollbarWidth = 30;
	    }
	    this.clone.wtTable.holder.style.height = parseInt(this.clone.wtTable.holder.parentNode.style.height, 10) + scrollbarWidth + 'px';
	  },
	  applyToDOM: function() {
	    var total = this.wot.getSetting('totalRows');
	    if (!this.areElementSizesAdjusted) {
	      this.adjustElementsSize();
	    }
	    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === 'number') {
	      this.spreader.style.top = this.wot.wtViewport.rowsRenderCalculator.startPosition + 'px';
	    } else if (total === 0) {
	      this.spreader.style.top = '0';
	    } else {
	      throw new Error('Incorrect value of the rowsRenderCalculator');
	    }
	    this.spreader.style.bottom = '';
	    if (this.needFullRender) {
	      this.syncOverlayOffset();
	    }
	  },
	  syncOverlayOffset: function() {
	    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === 'number') {
	      this.clone.wtTable.spreader.style.left = this.wot.wtViewport.columnsRenderCalculator.startPosition + 'px';
	    } else {
	      this.clone.wtTable.spreader.style.left = '';
	    }
	  },
	  scrollTo: function(sourceRow, bottomEdge) {
	    var newY = this.getTableParentOffset();
	    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;
	    var mainHolder = sourceInstance.wtTable.holder;
	    var scrollbarCompensation = 0;
	    if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {
	      scrollbarCompensation = getScrollbarWidth();
	    }
	    if (bottomEdge) {
	      var fixedRowsBottom = this.wot.getSetting('fixedRowsBottom');
	      var fixedRowsTop = this.wot.getSetting('fixedRowsTop');
	      var totalRows = this.wot.getSetting('totalRows');
	      newY += this.sumCellSizes(0, sourceRow + 1);
	      newY -= this.wot.wtViewport.getViewportHeight() - this.sumCellSizes(totalRows - fixedRowsBottom, totalRows);
	      newY += 1;
	    } else {
	      newY += this.sumCellSizes(this.wot.getSetting('fixedRowsTop'), sourceRow);
	    }
	    newY += scrollbarCompensation;
	    this.setScrollPosition(newY);
	  },
	  getTableParentOffset: function() {
	    if (this.mainTableScrollableElement === window) {
	      return this.wot.wtTable.holderOffset.top;
	    } else {
	      return 0;
	    }
	  },
	  getScrollPosition: function() {
	    return getScrollTop(this.mainTableScrollableElement);
	  },
	  adjustHeaderBordersPosition: function(position) {
	    if (this.wot.getSetting('fixedRowsTop') === 0 && this.wot.getSetting('columnHeaders').length > 0) {
	      var masterParent = this.wot.wtTable.holder.parentNode;
	      var previousState = hasClass(masterParent, 'innerBorderTop');
	      if (position) {
	        addClass(masterParent, 'innerBorderTop');
	      } else {
	        removeClass(masterParent, 'innerBorderTop');
	      }
	      if (!previousState && position || previousState && !position) {
	        this.wot.wtOverlays.adjustElementsSize();
	      }
	    }
	    if (this.wot.getSetting('rowHeaders').length === 0) {
	      var secondHeaderCell = this.clone.wtTable.THEAD.querySelectorAll('th:nth-of-type(2)');
	      if (secondHeaderCell) {
	        for (var i = 0; i < secondHeaderCell.length; i++) {
	          secondHeaderCell[i].style['border-left-width'] = 0;
	        }
	      }
	    }
	  }
	}, {}, WalkontableOverlay);
	;
	window.WalkontableTopOverlay = WalkontableTopOverlay;
	WalkontableOverlay.registerOverlay(WalkontableOverlay.CLONE_TOP, WalkontableTopOverlay);

	//# 
	},{"_base":11,"helpers/dom/element":44}],15:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableTopLeftCornerOverlay: {get: function() {
	      return WalkontableTopLeftCornerOverlay;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___95_base__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth,
	    setOverlayPosition = $__0.setOverlayPosition;
	var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;
	var WalkontableTopLeftCornerOverlay = function WalkontableTopLeftCornerOverlay(wotInstance) {
	  $traceurRuntime.superConstructor($WalkontableTopLeftCornerOverlay).call(this, wotInstance);
	  this.clone = this.makeClone(WalkontableOverlay.CLONE_TOP_LEFT_CORNER);
	};
	var $WalkontableTopLeftCornerOverlay = WalkontableTopLeftCornerOverlay;
	($traceurRuntime.createClass)(WalkontableTopLeftCornerOverlay, {
	  shouldBeRendered: function() {
	    return (this.wot.getSetting('fixedRowsTop') || this.wot.getSetting('columnHeaders').length) && (this.wot.getSetting('fixedColumnsLeft') || this.wot.getSetting('rowHeaders').length) ? true : false;
	  },
	  resetFixedPosition: function() {
	    if (!this.wot.wtTable.holder.parentNode) {
	      return;
	    }
	    var overlayRoot = this.clone.wtTable.holder.parentNode;
	    var tableHeight = outerHeight(this.clone.wtTable.TABLE);
	    var tableWidth = outerWidth(this.clone.wtTable.TABLE);
	    if (this.trimmingContainer === window) {
	      var box = this.wot.wtTable.hider.getBoundingClientRect();
	      var top = Math.ceil(box.top);
	      var left = Math.ceil(box.left);
	      var bottom = Math.ceil(box.bottom);
	      var right = Math.ceil(box.right);
	      var finalLeft;
	      var finalTop;
	      if (left < 0 && (right - overlayRoot.offsetWidth) > 0) {
	        finalLeft = -left + 'px';
	      } else {
	        finalLeft = '0';
	      }
	      if (top < 0 && (bottom - overlayRoot.offsetHeight) > 0) {
	        finalTop = -top + 'px';
	      } else {
	        finalTop = '0';
	      }
	      setOverlayPosition(overlayRoot, finalLeft, finalTop);
	    }
	    overlayRoot.style.height = (tableHeight === 0 ? tableHeight : tableHeight + 4) + 'px';
	    overlayRoot.style.width = (tableWidth === 0 ? tableWidth : tableWidth + 4) + 'px';
	  }
	}, {}, WalkontableOverlay);
	;
	window.WalkontableTopLeftCornerOverlay = WalkontableTopLeftCornerOverlay;
	WalkontableOverlay.registerOverlay(WalkontableOverlay.CLONE_TOP_LEFT_CORNER, WalkontableTopLeftCornerOverlay);

	//# 
	},{"_base":11,"helpers/dom/element":44}],16:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableOverlays: {get: function() {
	      return WalkontableOverlays;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__,
	    $___46__46__47__46__46__47__46__46__47_eventManager__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getScrollableElement = $__0.getScrollableElement,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    getScrollLeft = $__0.getScrollLeft,
	    getScrollTop = $__0.getScrollTop;
	var isKey = ($___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__}).isKey;
	var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;
	var WalkontableOverlays = function WalkontableOverlays(wotInstance) {
	  this.wot = wotInstance;
	  this.instance = this.wot;
	  this.eventManager = new EventManager(this.wot);
	  this.wot.update('scrollbarWidth', getScrollbarWidth());
	  this.wot.update('scrollbarHeight', getScrollbarWidth());
	  this.mainTableScrollableElement = getScrollableElement(this.wot.wtTable.TABLE);
	  this.topOverlay = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_TOP, this.wot);
	  if (typeof WalkontableBottomOverlay === 'undefined') {
	    this.bottomOverlay = {needFullRender: false};
	  } else {
	    this.bottomOverlay = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_BOTTOM, this.wot);
	  }
	  this.leftOverlay = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_LEFT, this.wot);
	  if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {
	    this.topLeftCornerOverlay = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_TOP_LEFT_CORNER, this.wot);
	  }
	  if (this.bottomOverlay.needFullRender && this.leftOverlay.needFullRender && typeof WalkontableBottomLeftCornerOverlay !== 'undefined') {
	    this.bottomLeftCornerOverlay = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER, this.wot);
	  } else {
	    this.bottomLeftCornerOverlay = {needFullRender: false};
	  }
	  if (this.wot.getSetting('debug')) {
	    this.debug = WalkontableOverlay.createOverlay(WalkontableOverlay.CLONE_DEBUG, this.wot);
	  }
	  this.destroyed = false;
	  this.keyPressed = false;
	  this.spreaderLastSize = {
	    width: null,
	    height: null
	  };
	  this.overlayScrollPositions = {
	    master: {
	      top: 0,
	      left: 0
	    },
	    top: {
	      top: null,
	      left: 0
	    },
	    bottom: {
	      top: null,
	      left: 0
	    },
	    left: {
	      top: 0,
	      left: null
	    }
	  };
	  this.registerListeners();
	};
	($traceurRuntime.createClass)(WalkontableOverlays, {
	  refreshAll: function() {
	    if (!this.wot.drawn) {
	      return;
	    }
	    if (!this.wot.wtTable.holder.parentNode) {
	      this.destroy();
	      return;
	    }
	    this.wot.draw(true);
	    this.topOverlay.onScroll();
	    this.leftOverlay.onScroll();
	  },
	  registerListeners: function() {
	    var $__3 = this;
	    this.eventManager.addEventListener(document.documentElement, 'keydown', (function(event) {
	      return $__3.onKeyDown(event);
	    }));
	    this.eventManager.addEventListener(document.documentElement, 'keyup', (function() {
	      return $__3.onKeyUp();
	    }));
	    this.eventManager.addEventListener(document, 'visibilitychange', (function() {
	      return $__3.onKeyUp();
	    }));
	    this.eventManager.addEventListener(this.mainTableScrollableElement, 'scroll', (function(event) {
	      return $__3.onTableScroll(event);
	    }));
	    if (this.topOverlay.needFullRender) {
	      this.eventManager.addEventListener(this.topOverlay.clone.wtTable.holder, 'scroll', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	      this.eventManager.addEventListener(this.topOverlay.clone.wtTable.holder, 'wheel', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	    }
	    if (this.bottomOverlay.needFullRender) {
	      this.eventManager.addEventListener(this.bottomOverlay.clone.wtTable.holder, 'scroll', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	      this.eventManager.addEventListener(this.bottomOverlay.clone.wtTable.holder, 'wheel', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	    }
	    if (this.leftOverlay.needFullRender) {
	      this.eventManager.addEventListener(this.leftOverlay.clone.wtTable.holder, 'scroll', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	      this.eventManager.addEventListener(this.leftOverlay.clone.wtTable.holder, 'wheel', (function(event) {
	        return $__3.onTableScroll(event);
	      }));
	    }
	    if (this.topOverlay.trimmingContainer !== window && this.leftOverlay.trimmingContainer !== window) {
	      this.eventManager.addEventListener(window, 'wheel', (function(event) {
	        var overlay;
	        var deltaY = event.wheelDeltaY || event.deltaY;
	        var deltaX = event.wheelDeltaX || event.deltaX;
	        if ($__3.topOverlay.clone.wtTable.holder.contains(event.realTarget)) {
	          overlay = 'top';
	        } else if ($__3.bottomOverlay.clone && $__3.bottomOverlay.clone.wtTable.holder.contains(event.realTarget)) {
	          overlay = 'bottom';
	        } else if ($__3.leftOverlay.clone.wtTable.holder.contains(event.realTarget)) {
	          overlay = 'left';
	        }
	        if (overlay == 'top' && deltaY !== 0) {
	          event.preventDefault();
	        } else if (overlay == 'left' && deltaX !== 0) {
	          event.preventDefault();
	        } else if (overlay == 'bottom' && deltaY !== 0) {
	          event.preventDefault();
	        }
	      }));
	    }
	  },
	  onTableScroll: function(event) {
	    if (Handsontable.mobileBrowser) {
	      return;
	    }
	    if (this.keyPressed && this.mainTableScrollableElement !== window && !event.target.contains(this.mainTableScrollableElement)) {
	      return;
	    }
	    if (event.type === 'scroll') {
	      this.syncScrollPositions(event);
	    } else {
	      this.translateMouseWheelToScroll(event);
	    }
	  },
	  onKeyDown: function(event) {
	    this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');
	  },
	  onKeyUp: function() {
	    this.keyPressed = false;
	  },
	  translateMouseWheelToScroll: function(event) {
	    var topOverlay = this.topOverlay.clone.wtTable.holder;
	    var bottomOverlay = this.bottomOverlay.clone ? this.bottomOverlay.clone.wtTable.holder : null;
	    var leftOverlay = this.leftOverlay.clone.wtTable.holder;
	    var eventMockup = {type: 'wheel'};
	    var tempElem = event.target;
	    var deltaY = event.wheelDeltaY || (-1) * event.deltaY;
	    var deltaX = event.wheelDeltaX || (-1) * event.deltaX;
	    var parentHolder;
	    while (tempElem != document && tempElem != null) {
	      if (tempElem.className.indexOf('wtHolder') > -1) {
	        parentHolder = tempElem;
	        break;
	      }
	      tempElem = tempElem.parentNode;
	    }
	    eventMockup.target = parentHolder;
	    if (parentHolder == topOverlay) {
	      this.syncScrollPositions(eventMockup, (-0.2) * deltaY);
	    } else if (parentHolder == bottomOverlay) {
	      this.syncScrollPositions(eventMockup, (-0.2) * deltaY);
	    } else if (parentHolder == leftOverlay) {
	      this.syncScrollPositions(eventMockup, (-0.2) * deltaX);
	    }
	    return false;
	  },
	  syncScrollPositions: function(event) {
	    var fakeScrollValue = arguments[1] !== (void 0) ? arguments[1] : null;
	    if (this.destroyed) {
	      return;
	    }
	    if (arguments.length === 0) {
	      this.syncScrollWithMaster();
	      return;
	    }
	    var master = this.mainTableScrollableElement;
	    var target = event.target;
	    var tempScrollValue = 0;
	    var scrollValueChanged = false;
	    var topOverlay;
	    var leftOverlay;
	    var bottomOverlay;
	    if (this.topOverlay.needFullRender) {
	      topOverlay = this.topOverlay.clone.wtTable.holder;
	    }
	    if (this.bottomOverlay.needFullRender) {
	      bottomOverlay = this.bottomOverlay.clone.wtTable.holder;
	    }
	    if (this.leftOverlay.needFullRender) {
	      leftOverlay = this.leftOverlay.clone.wtTable.holder;
	    }
	    if (target === document) {
	      target = window;
	    }
	    if (target === master) {
	      tempScrollValue = getScrollLeft(target);
	      if (this.overlayScrollPositions.master.left !== tempScrollValue) {
	        this.overlayScrollPositions.master.left = tempScrollValue;
	        scrollValueChanged = true;
	        if (topOverlay) {
	          topOverlay.scrollLeft = tempScrollValue;
	        }
	        if (bottomOverlay) {
	          bottomOverlay.scrollLeft = tempScrollValue;
	        }
	      }
	      tempScrollValue = getScrollTop(target);
	      if (this.overlayScrollPositions.master.top !== tempScrollValue) {
	        this.overlayScrollPositions.master.top = tempScrollValue;
	        scrollValueChanged = true;
	        if (leftOverlay) {
	          leftOverlay.scrollTop = tempScrollValue;
	        }
	      }
	    } else if (target === bottomOverlay) {
	      tempScrollValue = getScrollLeft(target);
	      if (this.overlayScrollPositions.bottom.left !== tempScrollValue) {
	        this.overlayScrollPositions.bottom.left = tempScrollValue;
	        scrollValueChanged = true;
	        master.scrollLeft = tempScrollValue;
	      }
	      if (fakeScrollValue !== null) {
	        scrollValueChanged = true;
	        master.scrollTop += fakeScrollValue;
	      }
	    } else if (target === topOverlay) {
	      tempScrollValue = getScrollLeft(target);
	      if (this.overlayScrollPositions.top.left !== tempScrollValue) {
	        this.overlayScrollPositions.top.left = tempScrollValue;
	        scrollValueChanged = true;
	        master.scrollLeft = tempScrollValue;
	      }
	      if (fakeScrollValue !== null) {
	        scrollValueChanged = true;
	        master.scrollTop += fakeScrollValue;
	      }
	    } else if (target === leftOverlay) {
	      tempScrollValue = getScrollTop(target);
	      if (this.overlayScrollPositions.left.top !== tempScrollValue) {
	        this.overlayScrollPositions.left.top = tempScrollValue;
	        scrollValueChanged = true;
	        master.scrollTop = tempScrollValue;
	      }
	      if (fakeScrollValue !== null) {
	        scrollValueChanged = true;
	        master.scrollLeft += fakeScrollValue;
	      }
	    }
	    if (!this.keyPressed && scrollValueChanged && event.type === 'scroll') {
	      this.refreshAll();
	    }
	  },
	  syncScrollWithMaster: function() {
	    var master = this.topOverlay.mainTableScrollableElement;
	    if (this.topOverlay.needFullRender) {
	      this.topOverlay.clone.wtTable.holder.scrollLeft = master.scrollLeft;
	    }
	    if (this.leftOverlay.needFullRender) {
	      this.leftOverlay.clone.wtTable.holder.scrollTop = master.scrollTop;
	    }
	  },
	  destroy: function() {
	    this.eventManager.destroy();
	    this.topOverlay.destroy();
	    if (this.bottomOverlay.clone) {
	      this.bottomOverlay.destroy();
	    }
	    this.leftOverlay.destroy();
	    if (this.topLeftCornerOverlay) {
	      this.topLeftCornerOverlay.destroy();
	    }
	    if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {
	      this.bottomLeftCornerOverlay.destroy();
	    }
	    if (this.debug) {
	      this.debug.destroy();
	    }
	    this.destroyed = true;
	  },
	  refresh: function() {
	    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (this.topOverlay.areElementSizesAdjusted && this.leftOverlay.areElementSizesAdjusted) {
	      var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;
	      var width = container.clientWidth;
	      var height = container.clientHeight;
	      if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {
	        this.spreaderLastSize.width = width;
	        this.spreaderLastSize.height = height;
	        this.adjustElementsSize();
	      }
	    }
	    if (this.bottomOverlay.clone) {
	      this.bottomOverlay.refresh(fastDraw);
	    }
	    this.leftOverlay.refresh(fastDraw);
	    this.topOverlay.refresh(fastDraw);
	    if (this.topLeftCornerOverlay) {
	      this.topLeftCornerOverlay.refresh(fastDraw);
	    }
	    if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {
	      this.bottomLeftCornerOverlay.refresh(fastDraw);
	    }
	    if (this.debug) {
	      this.debug.refresh(fastDraw);
	    }
	  },
	  adjustElementsSize: function() {
	    var force = arguments[0] !== (void 0) ? arguments[0] : false;
	    var totalColumns = this.wot.getSetting('totalColumns');
	    var totalRows = this.wot.getSetting('totalRows');
	    var headerRowSize = this.wot.wtViewport.getRowHeaderWidth();
	    var headerColumnSize = this.wot.wtViewport.getColumnHeaderHeight();
	    var hiderStyle = this.wot.wtTable.hider.style;
	    hiderStyle.width = (headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns)) + 'px';
	    hiderStyle.height = (headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1) + 'px';
	    this.topOverlay.adjustElementsSize(force);
	    this.leftOverlay.adjustElementsSize(force);
	    if (this.bottomOverlay.clone) {
	      this.bottomOverlay.adjustElementsSize(force);
	    }
	  },
	  applyToDOM: function() {
	    if (!this.topOverlay.areElementSizesAdjusted || !this.leftOverlay.areElementSizesAdjusted) {
	      this.adjustElementsSize();
	    }
	    this.topOverlay.applyToDOM();
	    if (this.bottomOverlay.clone) {
	      this.bottomOverlay.applyToDOM();
	    }
	    this.leftOverlay.applyToDOM();
	  }
	}, {});
	;
	window.WalkontableOverlays = WalkontableOverlays;

	//# 
	},{"eventManager":40,"helpers/dom/element":44,"helpers/unicode":52}],17:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableScroll: {get: function() {
	      return WalkontableScroll;
	    }},
	  __esModule: {value: true}
	});
	var WalkontableScroll = function WalkontableScroll(wotInstance) {
	  this.wot = wotInstance;
	  this.instance = wotInstance;
	};
	($traceurRuntime.createClass)(WalkontableScroll, {scrollViewport: function(coords) {
	    if (!this.wot.drawn) {
	      return;
	    }
	    var totalRows = this.wot.getSetting('totalRows');
	    var totalColumns = this.wot.getSetting('totalColumns');
	    var fixedRowsTop = this.instance.getSetting('fixedRowsTop');
	    var fixedRowsBottom = this.instance.getSetting('fixedRowsBottom');
	    var fixedColumnsLeft = this.instance.getSetting('fixedColumnsLeft');
	    if (coords.row < 0 || coords.row > totalRows - 1) {
	      throw new Error('row ' + coords.row + ' does not exist');
	    }
	    if (coords.col < 0 || coords.col > totalColumns - 1) {
	      throw new Error('column ' + coords.col + ' does not exist');
	    }
	    if (coords.row > this.instance.wtTable.getLastVisibleRow() && coords.row < totalRows - fixedRowsBottom) {
	      this.wot.wtOverlays.topOverlay.scrollTo(coords.row, true);
	    } else if (coords.row >= fixedRowsTop && coords.row < this.instance.wtTable.getFirstVisibleRow()) {
	      this.wot.wtOverlays.topOverlay.scrollTo(coords.row);
	    }
	    if (coords.col > this.instance.wtTable.getLastVisibleColumn()) {
	      this.wot.wtOverlays.leftOverlay.scrollTo(coords.col, true);
	    } else if (coords.col >= fixedColumnsLeft && coords.col < this.instance.wtTable.getFirstVisibleColumn()) {
	      this.wot.wtOverlays.leftOverlay.scrollTo(coords.col);
	    }
	  }}, {});
	;
	window.WalkontableScroll = WalkontableScroll;

	//# 
	},{}],18:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableSelection: {get: function() {
	      return WalkontableSelection;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $__border__,
	    $__cell_47_coords__,
	    $__cell_47_range__;
	var addClass = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;
	var WalkontableBorder = ($__border__ = require("border"), $__border__ && $__border__.__esModule && $__border__ || {default: $__border__}).WalkontableBorder;
	var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = ($__cell_47_range__ = require("cell/range"), $__cell_47_range__ && $__cell_47_range__.__esModule && $__cell_47_range__ || {default: $__cell_47_range__}).WalkontableCellRange;
	var WalkontableSelection = function WalkontableSelection(settings, cellRange) {
	  this.settings = settings;
	  this.cellRange = cellRange || null;
	  this.instanceBorders = {};
	};
	($traceurRuntime.createClass)(WalkontableSelection, {
	  getBorder: function(wotInstance) {
	    if (this.instanceBorders[wotInstance.guid]) {
	      return this.instanceBorders[wotInstance.guid];
	    }
	    this.instanceBorders[wotInstance.guid] = new WalkontableBorder(wotInstance, this.settings);
	  },
	  isEmpty: function() {
	    return this.cellRange === null;
	  },
	  add: function(coords) {
	    if (this.isEmpty()) {
	      this.cellRange = new WalkontableCellRange(coords, coords, coords);
	    } else {
	      this.cellRange.expand(coords);
	    }
	  },
	  replace: function(oldCoords, newCoords) {
	    if (!this.isEmpty()) {
	      if (this.cellRange.from.isEqual(oldCoords)) {
	        this.cellRange.from = newCoords;
	        return true;
	      }
	      if (this.cellRange.to.isEqual(oldCoords)) {
	        this.cellRange.to = newCoords;
	        return true;
	      }
	    }
	    return false;
	  },
	  clear: function() {
	    this.cellRange = null;
	  },
	  getCorners: function() {
	    var topLeft = this.cellRange.getTopLeftCorner();
	    var bottomRight = this.cellRange.getBottomRightCorner();
	    return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];
	  },
	  addClassAtCoords: function(wotInstance, sourceRow, sourceColumn, className) {
	    var TD = wotInstance.wtTable.getCell(new WalkontableCellCoords(sourceRow, sourceColumn));
	    if (typeof TD === 'object') {
	      addClass(TD, className);
	    }
	  },
	  draw: function(wotInstance) {
	    if (this.isEmpty()) {
	      if (this.settings.border) {
	        var border = this.getBorder(wotInstance);
	        if (border) {
	          border.disappear();
	        }
	      }
	      return;
	    }
	    var renderedRows = wotInstance.wtTable.getRenderedRowsCount();
	    var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();
	    var corners = this.getCorners();
	    var sourceRow,
	        sourceCol,
	        TH;
	    for (var column = 0; column < renderedColumns; column++) {
	      sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);
	      if (sourceCol >= corners[1] && sourceCol <= corners[3]) {
	        TH = wotInstance.wtTable.getColumnHeader(sourceCol);
	        if (TH && this.settings.highlightColumnClassName) {
	          addClass(TH, this.settings.highlightColumnClassName);
	        }
	      }
	    }
	    for (var row = 0; row < renderedRows; row++) {
	      sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);
	      if (sourceRow >= corners[0] && sourceRow <= corners[2]) {
	        TH = wotInstance.wtTable.getRowHeader(sourceRow);
	        if (TH && this.settings.highlightRowClassName) {
	          addClass(TH, this.settings.highlightRowClassName);
	        }
	      }
	      for (var column$__5 = 0; column$__5 < renderedColumns; column$__5++) {
	        sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column$__5);
	        if (sourceRow >= corners[0] && sourceRow <= corners[2] && sourceCol >= corners[1] && sourceCol <= corners[3]) {
	          if (this.settings.className) {
	            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.className);
	          }
	        } else if (sourceRow >= corners[0] && sourceRow <= corners[2]) {
	          if (this.settings.highlightRowClassName) {
	            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.highlightRowClassName);
	          }
	        } else if (sourceCol >= corners[1] && sourceCol <= corners[3]) {
	          if (this.settings.highlightColumnClassName) {
	            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.highlightColumnClassName);
	          }
	        }
	      }
	    }
	    wotInstance.getSetting('onBeforeDrawBorders', corners, this.settings.className);
	    if (this.settings.border) {
	      var border$__6 = this.getBorder(wotInstance);
	      if (border$__6) {
	        border$__6.appear(corners);
	      }
	    }
	  }
	}, {});
	;
	window.WalkontableSelection = WalkontableSelection;

	//# 
	},{"border":2,"cell/coords":5,"cell/range":6,"helpers/dom/element":44}],19:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableSettings: {get: function() {
	      return WalkontableSettings;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__;
	var fastInnerText = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).fastInnerText;
	var WalkontableSettings = function WalkontableSettings(wotInstance, settings) {
	  var $__1 = this;
	  this.wot = wotInstance;
	  this.instance = wotInstance;
	  this.defaults = {
	    table: void 0,
	    debug: false,
	    externalRowCalculator: false,
	    stretchH: 'none',
	    currentRowClassName: null,
	    currentColumnClassName: null,
	    data: void 0,
	    fixedColumnsLeft: 0,
	    fixedRowsTop: 0,
	    fixedRowsBottom: 0,
	    minSpareRows: 0,
	    rowHeaders: function() {
	      return [];
	    },
	    columnHeaders: function() {
	      return [];
	    },
	    totalRows: void 0,
	    totalColumns: void 0,
	    cellRenderer: (function(row, column, TD) {
	      var cellData = $__1.getSetting('data', row, column);
	      fastInnerText(TD, cellData === void 0 || cellData === null ? '' : cellData);
	    }),
	    columnWidth: function(col) {
	      return;
	    },
	    rowHeight: function(row) {
	      return;
	    },
	    defaultRowHeight: 23,
	    defaultColumnWidth: 50,
	    selections: null,
	    hideBorderOnMouseDownOver: false,
	    viewportRowCalculatorOverride: null,
	    viewportColumnCalculatorOverride: null,
	    onCellMouseDown: null,
	    onCellMouseOver: null,
	    onCellDblClick: null,
	    onCellCornerMouseDown: null,
	    onCellCornerDblClick: null,
	    beforeDraw: null,
	    onDraw: null,
	    onBeforeDrawBorders: null,
	    onScrollVertically: null,
	    onScrollHorizontally: null,
	    onBeforeTouchScroll: null,
	    onAfterMomentumScroll: null,
	    scrollbarWidth: 10,
	    scrollbarHeight: 10,
	    renderAllRows: false,
	    groups: false
	  };
	  this.settings = {};
	  for (var i in this.defaults) {
	    if (this.defaults.hasOwnProperty(i)) {
	      if (settings[i] !== void 0) {
	        this.settings[i] = settings[i];
	      } else if (this.defaults[i] === void 0) {
	        throw new Error('A required setting "' + i + '" was not provided');
	      } else {
	        this.settings[i] = this.defaults[i];
	      }
	    }
	  }
	};
	($traceurRuntime.createClass)(WalkontableSettings, {
	  update: function(settings, value) {
	    if (value === void 0) {
	      for (var i in settings) {
	        if (settings.hasOwnProperty(i)) {
	          this.settings[i] = settings[i];
	        }
	      }
	    } else {
	      this.settings[settings] = value;
	    }
	    return this.wot;
	  },
	  getSetting: function(key, param1, param2, param3, param4) {
	    if (typeof this.settings[key] === 'function') {
	      return this.settings[key](param1, param2, param3, param4);
	    } else if (param1 !== void 0 && Array.isArray(this.settings[key])) {
	      return this.settings[key][param1];
	    } else {
	      return this.settings[key];
	    }
	  },
	  has: function(key) {
	    return !!this.settings[key];
	  }
	}, {});
	;
	window.WalkontableSettings = WalkontableSettings;

	//# 
	},{"helpers/dom/element":44}],20:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableTable: {get: function() {
	      return WalkontableTable;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $__cell_47_coords__,
	    $__cell_47_range__,
	    $__filter_47_column__,
	    $__filter_47_row__,
	    $__tableRenderer__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getStyle = $__0.getStyle,
	    getTrimmingContainer = $__0.getTrimmingContainer,
	    hasClass = $__0.hasClass,
	    index = $__0.index,
	    offset = $__0.offset,
	    removeClass = $__0.removeClass,
	    removeTextNodes = $__0.removeTextNodes,
	    overlayContainsElement = $__0.overlayContainsElement;
	var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = ($__cell_47_range__ = require("cell/range"), $__cell_47_range__ && $__cell_47_range__.__esModule && $__cell_47_range__ || {default: $__cell_47_range__}).WalkontableCellRange;
	var WalkontableColumnFilter = ($__filter_47_column__ = require("filter/column"), $__filter_47_column__ && $__filter_47_column__.__esModule && $__filter_47_column__ || {default: $__filter_47_column__}).WalkontableColumnFilter;
	var WalkontableRowFilter = ($__filter_47_row__ = require("filter/row"), $__filter_47_row__ && $__filter_47_row__.__esModule && $__filter_47_row__ || {default: $__filter_47_row__}).WalkontableRowFilter;
	var WalkontableTableRenderer = ($__tableRenderer__ = require("tableRenderer"), $__tableRenderer__ && $__tableRenderer__.__esModule && $__tableRenderer__ || {default: $__tableRenderer__}).WalkontableTableRenderer;
	var WalkontableTable = function WalkontableTable(wotInstance, table) {
	  this.wot = wotInstance;
	  this.instance = this.wot;
	  this.TABLE = table;
	  this.TBODY = null;
	  this.THEAD = null;
	  this.COLGROUP = null;
	  this.tableOffset = 0;
	  this.holderOffset = 0;
	  removeTextNodes(this.TABLE);
	  this.spreader = this.createSpreader(this.TABLE);
	  this.hider = this.createHider(this.spreader);
	  this.holder = this.createHolder(this.hider);
	  this.wtRootElement = this.holder.parentNode;
	  this.alignOverlaysWithTrimmingContainer();
	  this.fixTableDomTree();
	  this.colgroupChildrenLength = this.COLGROUP.childNodes.length;
	  this.theadChildrenLength = this.THEAD.firstChild ? this.THEAD.firstChild.childNodes.length : 0;
	  this.tbodyChildrenLength = this.TBODY.childNodes.length;
	  this.rowFilter = null;
	  this.columnFilter = null;
	};
	($traceurRuntime.createClass)(WalkontableTable, {
	  fixTableDomTree: function() {
	    this.TBODY = this.TABLE.querySelector('tbody');
	    if (!this.TBODY) {
	      this.TBODY = document.createElement('tbody');
	      this.TABLE.appendChild(this.TBODY);
	    }
	    this.THEAD = this.TABLE.querySelector('thead');
	    if (!this.THEAD) {
	      this.THEAD = document.createElement('thead');
	      this.TABLE.insertBefore(this.THEAD, this.TBODY);
	    }
	    this.COLGROUP = this.TABLE.querySelector('colgroup');
	    if (!this.COLGROUP) {
	      this.COLGROUP = document.createElement('colgroup');
	      this.TABLE.insertBefore(this.COLGROUP, this.THEAD);
	    }
	    if (this.wot.getSetting('columnHeaders').length && !this.THEAD.childNodes.length) {
	      this.THEAD.appendChild(document.createElement('TR'));
	    }
	  },
	  createSpreader: function(table) {
	    var parent = table.parentNode;
	    var spreader;
	    if (!parent || parent.nodeType !== 1 || !hasClass(parent, 'wtHolder')) {
	      spreader = document.createElement('div');
	      spreader.className = 'wtSpreader';
	      if (parent) {
	        parent.insertBefore(spreader, table);
	      }
	      spreader.appendChild(table);
	    }
	    spreader.style.position = 'relative';
	    return spreader;
	  },
	  createHider: function(spreader) {
	    var parent = spreader.parentNode;
	    var hider;
	    if (!parent || parent.nodeType !== 1 || !hasClass(parent, 'wtHolder')) {
	      hider = document.createElement('div');
	      hider.className = 'wtHider';
	      if (parent) {
	        parent.insertBefore(hider, spreader);
	      }
	      hider.appendChild(spreader);
	    }
	    return hider;
	  },
	  createHolder: function(hider) {
	    var parent = hider.parentNode;
	    var holder;
	    if (!parent || parent.nodeType !== 1 || !hasClass(parent, 'wtHolder')) {
	      holder = document.createElement('div');
	      holder.style.position = 'relative';
	      holder.className = 'wtHolder';
	      if (parent) {
	        parent.insertBefore(holder, hider);
	      }
	      if (!this.isWorkingOnClone()) {
	        holder.parentNode.className += 'ht_master handsontable';
	      }
	      holder.appendChild(hider);
	    }
	    return holder;
	  },
	  alignOverlaysWithTrimmingContainer: function() {
	    var trimmingElement = getTrimmingContainer(this.wtRootElement);
	    if (!this.isWorkingOnClone()) {
	      this.holder.parentNode.style.position = 'relative';
	      if (trimmingElement === window) {
	        this.holder.style.overflow = 'visible';
	        this.wtRootElement.style.overflow = 'visible';
	      } else {
	        this.holder.style.width = getStyle(trimmingElement, 'width');
	        this.holder.style.height = getStyle(trimmingElement, 'height');
	        this.holder.style.overflow = '';
	      }
	    }
	  },
	  isWorkingOnClone: function() {
	    return !!this.wot.cloneSource;
	  },
	  draw: function(fastDraw) {
	    var totalRows = this.instance.getSetting('totalRows');
	    if (!this.isWorkingOnClone()) {
	      this.holderOffset = offset(this.holder);
	      fastDraw = this.wot.wtViewport.createRenderCalculators(fastDraw);
	    }
	    if (fastDraw) {
	      if (!this.isWorkingOnClone()) {
	        this.wot.wtViewport.createVisibleCalculators();
	      }
	      if (this.wot.wtOverlays) {
	        this.wot.wtOverlays.refresh(true);
	      }
	    } else {
	      if (this.isWorkingOnClone()) {
	        this.tableOffset = this.wot.cloneSource.wtTable.tableOffset;
	      } else {
	        this.tableOffset = offset(this.TABLE);
	      }
	      var startRow;
	      if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_DEBUG) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP_LEFT_CORNER)) {
	        startRow = 0;
	      } else if (WalkontableOverlay.isOverlayTypeOf(this.instance.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM) || WalkontableOverlay.isOverlayTypeOf(this.instance.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	        startRow = totalRows - this.wot.getSetting('fixedRowsBottom');
	      } else {
	        startRow = this.wot.wtViewport.rowsRenderCalculator.startRow;
	      }
	      var startColumn;
	      if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_DEBUG) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_LEFT) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP_LEFT_CORNER) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	        startColumn = 0;
	      } else {
	        startColumn = this.wot.wtViewport.columnsRenderCalculator.startColumn;
	      }
	      this.rowFilter = new WalkontableRowFilter(startRow, totalRows, this.wot.getSetting('columnHeaders').length);
	      this.columnFilter = new WalkontableColumnFilter(startColumn, this.wot.getSetting('totalColumns'), this.wot.getSetting('rowHeaders').length);
	      this._doDraw();
	      this.alignOverlaysWithTrimmingContainer();
	    }
	    this.refreshSelections(fastDraw);
	    if (!this.isWorkingOnClone()) {
	      this.wot.wtOverlays.topOverlay.resetFixedPosition();
	      if (this.wot.wtOverlays.bottomOverlay.clone) {
	        this.wot.wtOverlays.bottomOverlay.resetFixedPosition();
	      }
	      this.wot.wtOverlays.leftOverlay.resetFixedPosition();
	      if (this.wot.wtOverlays.topLeftCornerOverlay) {
	        this.wot.wtOverlays.topLeftCornerOverlay.resetFixedPosition();
	      }
	      if (this.instance.wtOverlays.bottomLeftCornerOverlay && this.instance.wtOverlays.bottomLeftCornerOverlay.clone) {
	        this.wot.wtOverlays.bottomLeftCornerOverlay.resetFixedPosition();
	      }
	    }
	    this.wot.drawn = true;
	    return this;
	  },
	  _doDraw: function() {
	    var wtRenderer = new WalkontableTableRenderer(this);
	    wtRenderer.render();
	  },
	  removeClassFromCells: function(className) {
	    var nodes = this.TABLE.querySelectorAll('.' + className);
	    for (var i = 0,
	        len = nodes.length; i < len; i++) {
	      removeClass(nodes[i], className);
	    }
	  },
	  refreshSelections: function(fastDraw) {
	    if (!this.wot.selections) {
	      return;
	    }
	    var len = this.wot.selections.length;
	    if (fastDraw) {
	      for (var i = 0; i < len; i++) {
	        if (this.wot.selections[i].settings.className) {
	          this.removeClassFromCells(this.wot.selections[i].settings.className);
	        }
	        if (this.wot.selections[i].settings.highlightRowClassName) {
	          this.removeClassFromCells(this.wot.selections[i].settings.highlightRowClassName);
	        }
	        if (this.wot.selections[i].settings.highlightColumnClassName) {
	          this.removeClassFromCells(this.wot.selections[i].settings.highlightColumnClassName);
	        }
	      }
	    }
	    for (var i$__7 = 0; i$__7 < len; i$__7++) {
	      this.wot.selections[i$__7].draw(this.wot, fastDraw);
	    }
	  },
	  getCell: function(coords) {
	    if (this.isRowBeforeRenderedRows(coords.row)) {
	      return -1;
	    } else if (this.isRowAfterRenderedRows(coords.row)) {
	      return -2;
	    }
	    var TR = this.TBODY.childNodes[this.rowFilter.sourceToRendered(coords.row)];
	    if (TR) {
	      return TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(coords.col)];
	    }
	  },
	  getColumnHeader: function(col) {
	    var level = arguments[1] !== (void 0) ? arguments[1] : 0;
	    var TR = this.THEAD.childNodes[level];
	    if (TR) {
	      return TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(col)];
	    }
	  },
	  getRowHeader: function(row) {
	    if (this.columnFilter.sourceColumnToVisibleRowHeadedColumn(0) === 0) {
	      return null;
	    }
	    var TR = this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];
	    if (TR) {
	      return TR.childNodes[0];
	    }
	  },
	  getCoords: function(TD) {
	    var TR = TD.parentNode;
	    var row = index(TR);
	    if (TR.parentNode === this.THEAD) {
	      row = this.rowFilter.visibleColHeadedRowToSourceRow(row);
	    } else {
	      row = this.rowFilter.renderedToSource(row);
	    }
	    var col = this.columnFilter.visibleRowHeadedColumnToSourceColumn(TD.cellIndex);
	    return new WalkontableCellCoords(row, col);
	  },
	  getTrForRow: function(row) {
	    return this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];
	  },
	  getFirstRenderedRow: function() {
	    return this.wot.wtViewport.rowsRenderCalculator.startRow;
	  },
	  getFirstVisibleRow: function() {
	    return this.wot.wtViewport.rowsVisibleCalculator.startRow;
	  },
	  getFirstRenderedColumn: function() {
	    return this.wot.wtViewport.columnsRenderCalculator.startColumn;
	  },
	  getFirstVisibleColumn: function() {
	    return this.wot.wtViewport.columnsVisibleCalculator.startColumn;
	  },
	  getLastRenderedRow: function() {
	    return this.wot.wtViewport.rowsRenderCalculator.endRow;
	  },
	  getLastVisibleRow: function() {
	    return this.wot.wtViewport.rowsVisibleCalculator.endRow;
	  },
	  getLastRenderedColumn: function() {
	    return this.wot.wtViewport.columnsRenderCalculator.endColumn;
	  },
	  getLastVisibleColumn: function() {
	    return this.wot.wtViewport.columnsVisibleCalculator.endColumn;
	  },
	  isRowBeforeRenderedRows: function(row) {
	    return (this.rowFilter.sourceToRendered(row) < 0 && row >= 0);
	  },
	  isRowAfterViewport: function(row) {
	    return (this.rowFilter.sourceToRendered(row) > this.getLastVisibleRow());
	  },
	  isRowAfterRenderedRows: function(row) {
	    return (this.rowFilter.sourceToRendered(row) > this.getLastRenderedRow());
	  },
	  isColumnBeforeViewport: function(column) {
	    return this.columnFilter.sourceToRendered(column) < 0 && column >= 0;
	  },
	  isColumnAfterViewport: function(column) {
	    return (this.columnFilter.sourceToRendered(column) > this.getLastVisibleColumn());
	  },
	  isLastRowFullyVisible: function() {
	    return this.getLastVisibleRow() === this.getLastRenderedRow();
	  },
	  isLastColumnFullyVisible: function() {
	    return this.getLastVisibleColumn() === this.getLastRenderedColumn();
	  },
	  getRenderedColumnsCount: function() {
	    if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_DEBUG)) {
	      return this.wot.getSetting('totalColumns');
	    } else if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_LEFT) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP_LEFT_CORNER) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	      return this.wot.getSetting('fixedColumnsLeft');
	    } else {
	      return this.wot.wtViewport.columnsRenderCalculator.count;
	    }
	  },
	  getRenderedRowsCount: function() {
	    if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_DEBUG)) {
	      return this.wot.getSetting('totalRows');
	    } else if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_TOP_LEFT_CORNER)) {
	      return this.wot.getSetting('fixedRowsTop');
	    } else if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	      return this.instance.getSetting('fixedRowsBottom');
	    }
	    return this.wot.wtViewport.rowsRenderCalculator.count;
	  },
	  getVisibleRowsCount: function() {
	    return this.wot.wtViewport.rowsVisibleCalculator.count;
	  },
	  allRowsInViewport: function() {
	    return this.wot.getSetting('totalRows') == this.getVisibleRowsCount();
	  },
	  getRowHeight: function(sourceRow) {
	    var height = this.wot.wtSettings.settings.rowHeight(sourceRow);
	    var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceRow];
	    if (oversizedHeight !== void 0) {
	      height = height ? Math.max(height, oversizedHeight) : oversizedHeight;
	    }
	    return height;
	  },
	  getColumnHeaderHeight: function(level) {
	    var height = this.wot.wtSettings.settings.defaultRowHeight;
	    var oversizedHeight = this.wot.wtViewport.oversizedColumnHeaders[level];
	    if (oversizedHeight !== void 0) {
	      height = height ? Math.max(height, oversizedHeight) : oversizedHeight;
	    }
	    return height;
	  },
	  getVisibleColumnsCount: function() {
	    return this.wot.wtViewport.columnsVisibleCalculator.count;
	  },
	  allColumnsInViewport: function() {
	    return this.wot.getSetting('totalColumns') == this.getVisibleColumnsCount();
	  },
	  getColumnWidth: function(sourceColumn) {
	    var width = this.wot.wtSettings.settings.columnWidth;
	    if (typeof width === 'function') {
	      width = width(sourceColumn);
	    } else if (typeof width === 'object') {
	      width = width[sourceColumn];
	    }
	    return width || this.wot.wtSettings.settings.defaultColumnWidth;
	  },
	  getStretchedColumnWidth: function(sourceColumn) {
	    var columnWidth = this.getColumnWidth(sourceColumn);
	    var width = [void 0, null].indexOf(columnWidth) === -1 ? columnWidth : this.instance.wtSettings.settings.defaultColumnWidth;
	    var calculator = this.wot.wtViewport.columnsRenderCalculator;
	    if (calculator) {
	      var stretchedWidth = calculator.getStretchedColumnWidth(sourceColumn, width);
	      if (stretchedWidth) {
	        width = stretchedWidth;
	      }
	    }
	    return width;
	  }
	}, {});
	;
	window.WalkontableTable = WalkontableTable;

	//# 
	},{"cell/coords":5,"cell/range":6,"filter/column":9,"filter/row":10,"helpers/dom/element":44,"tableRenderer":21}],21:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableTableRenderer: {get: function() {
	      return WalkontableTableRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    empty = $__0.empty,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    hasClass = $__0.hasClass,
	    innerHeight = $__0.innerHeight;
	var WalkontableTableRenderer = function WalkontableTableRenderer(wtTable) {
	  this.wtTable = wtTable;
	  this.wot = wtTable.instance;
	  this.instance = wtTable.instance;
	  this.rowFilter = wtTable.rowFilter;
	  this.columnFilter = wtTable.columnFilter;
	  this.TABLE = wtTable.TABLE;
	  this.THEAD = wtTable.THEAD;
	  this.TBODY = wtTable.TBODY;
	  this.COLGROUP = wtTable.COLGROUP;
	  this.rowHeaders = [];
	  this.rowHeaderCount = 0;
	  this.columnHeaders = [];
	  this.columnHeaderCount = 0;
	  this.fixedRowsTop = 0;
	  this.fixedRowsBottom = 0;
	};
	($traceurRuntime.createClass)(WalkontableTableRenderer, {
	  render: function() {
	    if (!this.wtTable.isWorkingOnClone()) {
	      this.wot.getSetting('beforeDraw', true);
	    }
	    this.rowHeaders = this.wot.getSetting('rowHeaders');
	    this.rowHeaderCount = this.rowHeaders.length;
	    this.fixedRowsTop = this.wot.getSetting('fixedRowsTop');
	    this.fixedRowsBottom = this.wot.getSetting('fixedRowsBottom');
	    this.columnHeaders = this.wot.getSetting('columnHeaders');
	    this.columnHeaderCount = this.columnHeaders.length;
	    var columnsToRender = this.wtTable.getRenderedColumnsCount();
	    var rowsToRender = this.wtTable.getRenderedRowsCount();
	    var totalColumns = this.wot.getSetting('totalColumns');
	    var totalRows = this.wot.getSetting('totalRows');
	    var workspaceWidth;
	    var adjusted = false;
	    if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM) || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM_LEFT_CORNER)) {
	      this.columnHeaders = [];
	      this.columnHeaderCount = 0;
	    }
	    if (totalColumns > 0) {
	      this.adjustAvailableNodes();
	      adjusted = true;
	      this.renderColumnHeaders();
	      this.renderRows(totalRows, rowsToRender, columnsToRender);
	      if (!this.wtTable.isWorkingOnClone()) {
	        workspaceWidth = this.wot.wtViewport.getWorkspaceWidth();
	        this.wot.wtViewport.containerWidth = null;
	      }
	      this.adjustColumnHeaderHeights();
	      this.adjustColumnWidths(columnsToRender);
	      this.markOversizedColumns();
	    }
	    if (!adjusted) {
	      this.adjustAvailableNodes();
	    }
	    this.removeRedundantRows(rowsToRender);
	    if (!this.wtTable.isWorkingOnClone()) {
	      this.markOversizedRows();
	      this.wot.wtViewport.createVisibleCalculators();
	      this.wot.wtOverlays.refresh(false);
	      this.wot.wtOverlays.applyToDOM();
	      if (workspaceWidth !== this.wot.wtViewport.getWorkspaceWidth()) {
	        this.wot.wtViewport.containerWidth = null;
	        var firstRendered = this.wtTable.getFirstRenderedColumn();
	        var lastRendered = this.wtTable.getLastRenderedColumn();
	        for (var i = firstRendered; i < lastRendered; i++) {
	          var width = this.wtTable.getStretchedColumnWidth(i);
	          var renderedIndex = this.columnFilter.sourceToRendered(i);
	          this.COLGROUP.childNodes[renderedIndex + this.rowHeaderCount].style.width = width + 'px';
	        }
	      }
	      this.wot.getSetting('onDraw', true);
	    } else if (WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM)) {
	      var masterOverlay = this.wot.cloneOverlay.instance;
	      this.wot.cloneOverlay.markOversizedFixedBottomRows();
	      masterOverlay.wtOverlays.adjustElementsSize();
	    }
	  },
	  removeRedundantRows: function(renderedRowsCount) {
	    while (this.wtTable.tbodyChildrenLength > renderedRowsCount) {
	      this.TBODY.removeChild(this.TBODY.lastChild);
	      this.wtTable.tbodyChildrenLength--;
	    }
	  },
	  renderRows: function(totalRows, rowsToRender, columnsToRender) {
	    var lastTD,
	        TR;
	    var visibleRowIndex = 0;
	    var sourceRowIndex = this.rowFilter.renderedToSource(visibleRowIndex);
	    var isWorkingOnClone = this.wtTable.isWorkingOnClone();
	    while (sourceRowIndex < totalRows && sourceRowIndex >= 0) {
	      if (visibleRowIndex > 1000) {
	        throw new Error('Security brake: Too much TRs. Please define height for your table, which will enforce scrollbars.');
	      }
	      if (rowsToRender !== void 0 && visibleRowIndex === rowsToRender) {
	        break;
	      }
	      TR = this.getOrCreateTrForRow(visibleRowIndex, TR);
	      this.renderRowHeaders(sourceRowIndex, TR);
	      this.adjustColumns(TR, columnsToRender + this.rowHeaderCount);
	      lastTD = this.renderCells(sourceRowIndex, TR, columnsToRender);
	      if (!isWorkingOnClone || WalkontableOverlay.isOverlayTypeOf(this.wot.cloneOverlay, WalkontableOverlay.CLONE_BOTTOM)) {
	        this.resetOversizedRow(sourceRowIndex);
	      }
	      if (TR.firstChild) {
	        var height = this.wot.wtTable.getRowHeight(sourceRowIndex);
	        if (height) {
	          height--;
	          TR.firstChild.style.height = height + 'px';
	        } else {
	          TR.firstChild.style.height = '';
	        }
	      }
	      visibleRowIndex++;
	      sourceRowIndex = this.rowFilter.renderedToSource(visibleRowIndex);
	    }
	  },
	  resetOversizedRow: function(sourceRow) {
	    if (this.wot.getSetting('externalRowCalculator')) {
	      return;
	    }
	    if (this.wot.wtViewport.oversizedRows && this.wot.wtViewport.oversizedRows[sourceRow]) {
	      this.wot.wtViewport.oversizedRows[sourceRow] = void 0;
	    }
	  },
	  markOversizedRows: function() {
	    if (this.wot.getSetting('externalRowCalculator')) {
	      return;
	    }
	    var rowCount = this.instance.wtTable.TBODY.childNodes.length;
	    var expectedTableHeight = rowCount * this.instance.wtSettings.settings.defaultRowHeight;
	    var actualTableHeight = innerHeight(this.instance.wtTable.TBODY) - 1;
	    var previousRowHeight;
	    var rowInnerHeight;
	    var sourceRowIndex;
	    var currentTr;
	    var rowHeader;
	    var totalRows = this.instance.getSetting('totalRows');
	    if (expectedTableHeight === actualTableHeight && !this.instance.getSetting('fixedRowsBottom')) {
	      return;
	    }
	    while (rowCount) {
	      rowCount--;
	      sourceRowIndex = this.instance.wtTable.rowFilter.renderedToSource(rowCount);
	      previousRowHeight = this.instance.wtTable.getRowHeight(sourceRowIndex);
	      currentTr = this.instance.wtTable.getTrForRow(sourceRowIndex);
	      rowHeader = currentTr.querySelector('th');
	      if (rowHeader) {
	        rowInnerHeight = innerHeight(rowHeader);
	      } else {
	        rowInnerHeight = innerHeight(currentTr) - 1;
	      }
	      if ((!previousRowHeight && this.instance.wtSettings.settings.defaultRowHeight < rowInnerHeight || previousRowHeight < rowInnerHeight)) {
	        this.instance.wtViewport.oversizedRows[sourceRowIndex] = ++rowInnerHeight;
	      }
	    }
	  },
	  markOversizedColumns: function() {
	    var overlayName = this.wot.getOverlayName();
	    if (!this.columnHeaderCount || this.wot.wtViewport.isMarkedOversizedColumn[overlayName] || this.wtTable.isWorkingOnClone()) {
	      return;
	    }
	    var columnCount = this.wtTable.getRenderedColumnsCount();
	    for (var i = 0; i < this.columnHeaderCount; i++) {
	      for (var renderedColumnIndex = (-1) * this.rowHeaderCount; renderedColumnIndex < columnCount; renderedColumnIndex++) {
	        this.markIfOversizedColumnHeader(renderedColumnIndex);
	      }
	    }
	    this.wot.wtViewport.isMarkedOversizedColumn[overlayName] = true;
	  },
	  adjustColumnHeaderHeights: function() {
	    var columnHeaders = this.wot.getSetting('columnHeaders');
	    var childs = this.wot.wtTable.THEAD.childNodes;
	    var oversizedCols = this.wot.wtViewport.oversizedColumnHeaders;
	    for (var i = 0,
	        len = columnHeaders.length; i < len; i++) {
	      if (oversizedCols[i]) {
	        if (childs[i].childNodes.length === 0) {
	          return;
	        }
	        childs[i].childNodes[0].style.height = oversizedCols[i] + 'px';
	      }
	    }
	  },
	  markIfOversizedColumnHeader: function(col) {
	    var sourceColIndex = this.wot.wtTable.columnFilter.renderedToSource(col);
	    var level = this.columnHeaderCount;
	    var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;
	    var previousColHeaderHeight;
	    var currentHeader;
	    var currentHeaderHeight;
	    while (level) {
	      level--;
	      previousColHeaderHeight = this.wot.wtTable.getColumnHeaderHeight(level);
	      currentHeader = this.wot.wtTable.getColumnHeader(sourceColIndex, level);
	      if (!currentHeader) {
	        continue;
	      }
	      currentHeaderHeight = innerHeight(currentHeader);
	      if (!previousColHeaderHeight && defaultRowHeight < currentHeaderHeight || previousColHeaderHeight < currentHeaderHeight) {
	        this.wot.wtViewport.oversizedColumnHeaders[level] = currentHeaderHeight;
	      }
	    }
	  },
	  renderCells: function(sourceRowIndex, TR, columnsToRender) {
	    var TD;
	    var sourceColIndex;
	    for (var visibleColIndex = 0; visibleColIndex < columnsToRender; visibleColIndex++) {
	      sourceColIndex = this.columnFilter.renderedToSource(visibleColIndex);
	      if (visibleColIndex === 0) {
	        TD = TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(sourceColIndex)];
	      } else {
	        TD = TD.nextSibling;
	      }
	      if (TD.nodeName == 'TH') {
	        TD = replaceThWithTd(TD, TR);
	      }
	      if (!hasClass(TD, 'hide')) {
	        TD.className = '';
	      }
	      TD.removeAttribute('style');
	      this.wot.wtSettings.settings.cellRenderer(sourceRowIndex, sourceColIndex, TD);
	    }
	    return TD;
	  },
	  adjustColumnWidths: function(columnsToRender) {
	    var scrollbarCompensation = 0;
	    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;
	    var mainHolder = sourceInstance.wtTable.holder;
	    if (mainHolder.offsetHeight < mainHolder.scrollHeight) {
	      scrollbarCompensation = getScrollbarWidth();
	    }
	    this.wot.wtViewport.columnsRenderCalculator.refreshStretching(this.wot.wtViewport.getViewportWidth() - scrollbarCompensation);
	    for (var renderedColIndex = 0; renderedColIndex < columnsToRender; renderedColIndex++) {
	      var width = this.wtTable.getStretchedColumnWidth(this.columnFilter.renderedToSource(renderedColIndex));
	      this.COLGROUP.childNodes[renderedColIndex + this.rowHeaderCount].style.width = width + 'px';
	    }
	  },
	  appendToTbody: function(TR) {
	    this.TBODY.appendChild(TR);
	    this.wtTable.tbodyChildrenLength++;
	  },
	  getOrCreateTrForRow: function(rowIndex, currentTr) {
	    var TR;
	    if (rowIndex >= this.wtTable.tbodyChildrenLength) {
	      TR = this.createRow();
	      this.appendToTbody(TR);
	    } else if (rowIndex === 0) {
	      TR = this.TBODY.firstChild;
	    } else {
	      TR = currentTr.nextSibling;
	    }
	    if (TR.className) {
	      TR.removeAttribute('class');
	    }
	    return TR;
	  },
	  createRow: function() {
	    var TR = document.createElement('TR');
	    for (var visibleColIndex = 0; visibleColIndex < this.rowHeaderCount; visibleColIndex++) {
	      TR.appendChild(document.createElement('TH'));
	    }
	    return TR;
	  },
	  renderRowHeader: function(row, col, TH) {
	    TH.className = '';
	    TH.removeAttribute('style');
	    this.rowHeaders[col](row, TH, col);
	  },
	  renderRowHeaders: function(row, TR) {
	    for (var TH = TR.firstChild,
	        visibleColIndex = 0; visibleColIndex < this.rowHeaderCount; visibleColIndex++) {
	      if (!TH) {
	        TH = document.createElement('TH');
	        TR.appendChild(TH);
	      } else if (TH.nodeName == 'TD') {
	        TH = replaceTdWithTh(TH, TR);
	      }
	      this.renderRowHeader(row, visibleColIndex, TH);
	      TH = TH.nextSibling;
	    }
	  },
	  adjustAvailableNodes: function() {
	    this.adjustColGroups();
	    this.adjustThead();
	  },
	  renderColumnHeaders: function() {
	    var overlayName = this.wot.getOverlayName();
	    if (!this.columnHeaderCount) {
	      return;
	    }
	    var columnCount = this.wtTable.getRenderedColumnsCount();
	    for (var i = 0; i < this.columnHeaderCount; i++) {
	      var TR = this.getTrForColumnHeaders(i);
	      for (var renderedColumnIndex = (-1) * this.rowHeaderCount; renderedColumnIndex < columnCount; renderedColumnIndex++) {
	        var sourceCol = this.columnFilter.renderedToSource(renderedColumnIndex);
	        this.renderColumnHeader(i, sourceCol, TR.childNodes[renderedColumnIndex + this.rowHeaderCount]);
	      }
	    }
	  },
	  adjustColGroups: function() {
	    var columnCount = this.wtTable.getRenderedColumnsCount();
	    while (this.wtTable.colgroupChildrenLength < columnCount + this.rowHeaderCount) {
	      this.COLGROUP.appendChild(document.createElement('COL'));
	      this.wtTable.colgroupChildrenLength++;
	    }
	    while (this.wtTable.colgroupChildrenLength > columnCount + this.rowHeaderCount) {
	      this.COLGROUP.removeChild(this.COLGROUP.lastChild);
	      this.wtTable.colgroupChildrenLength--;
	    }
	    if (this.rowHeaderCount) {
	      addClass(this.COLGROUP.childNodes[0], 'rowHeader');
	    }
	  },
	  adjustThead: function() {
	    var columnCount = this.wtTable.getRenderedColumnsCount();
	    var TR = this.THEAD.firstChild;
	    if (this.columnHeaders.length) {
	      for (var i = 0,
	          len = this.columnHeaders.length; i < len; i++) {
	        TR = this.THEAD.childNodes[i];
	        if (!TR) {
	          TR = document.createElement('TR');
	          this.THEAD.appendChild(TR);
	        }
	        this.theadChildrenLength = TR.childNodes.length;
	        while (this.theadChildrenLength < columnCount + this.rowHeaderCount) {
	          TR.appendChild(document.createElement('TH'));
	          this.theadChildrenLength++;
	        }
	        while (this.theadChildrenLength > columnCount + this.rowHeaderCount) {
	          TR.removeChild(TR.lastChild);
	          this.theadChildrenLength--;
	        }
	      }
	      var theadChildrenLength = this.THEAD.childNodes.length;
	      if (theadChildrenLength > this.columnHeaders.length) {
	        for (var i$__2 = this.columnHeaders.length; i$__2 < theadChildrenLength; i$__2++) {
	          this.THEAD.removeChild(this.THEAD.lastChild);
	        }
	      }
	    } else if (TR) {
	      empty(TR);
	    }
	  },
	  getTrForColumnHeaders: function(index) {
	    return this.THEAD.childNodes[index];
	  },
	  renderColumnHeader: function(row, col, TH) {
	    TH.className = '';
	    TH.removeAttribute('style');
	    return this.columnHeaders[row](col, TH, row);
	  },
	  adjustColumns: function(TR, desiredCount) {
	    var count = TR.childNodes.length;
	    while (count < desiredCount) {
	      var TD = document.createElement('TD');
	      TR.appendChild(TD);
	      count++;
	    }
	    while (count > desiredCount) {
	      TR.removeChild(TR.lastChild);
	      count--;
	    }
	  },
	  removeRedundantColumns: function(columnsToRender) {
	    while (this.wtTable.tbodyChildrenLength > columnsToRender) {
	      this.TBODY.removeChild(this.TBODY.lastChild);
	      this.wtTable.tbodyChildrenLength--;
	    }
	  }
	}, {});
	function replaceTdWithTh(TD, TR) {
	  var TH = document.createElement('TH');
	  TR.insertBefore(TH, TD);
	  TR.removeChild(TD);
	  return TH;
	}
	function replaceThWithTd(TH, TR) {
	  var TD = document.createElement('TD');
	  TR.insertBefore(TD, TH);
	  TR.removeChild(TH);
	  return TD;
	}
	;
	window.WalkontableTableRenderer = WalkontableTableRenderer;

	//# 
	},{"helpers/dom/element":44}],22:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  WalkontableViewport: {get: function() {
	      return WalkontableViewport;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47__46__46__47_eventManager__,
	    $__calculator_47_viewportColumns__,
	    $__calculator_47_viewportRows__;
	var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    getScrollTop = $__0.getScrollTop,
	    getStyle = $__0.getStyle,
	    offset = $__0.offset,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth;
	var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;
	var WalkontableViewportColumnsCalculator = ($__calculator_47_viewportColumns__ = require("calculator/viewportColumns"), $__calculator_47_viewportColumns__ && $__calculator_47_viewportColumns__.__esModule && $__calculator_47_viewportColumns__ || {default: $__calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;
	var WalkontableViewportRowsCalculator = ($__calculator_47_viewportRows__ = require("calculator/viewportRows"), $__calculator_47_viewportRows__ && $__calculator_47_viewportRows__.__esModule && $__calculator_47_viewportRows__ || {default: $__calculator_47_viewportRows__}).WalkontableViewportRowsCalculator;
	var WalkontableViewport = function WalkontableViewport(wotInstance) {
	  var $__4 = this;
	  this.wot = wotInstance;
	  this.instance = this.wot;
	  this.oversizedRows = [];
	  this.oversizedColumnHeaders = [];
	  this.isMarkedOversizedColumn = {};
	  this.clientHeight = 0;
	  this.containerWidth = NaN;
	  this.rowHeaderWidth = NaN;
	  this.rowsVisibleCalculator = null;
	  this.columnsVisibleCalculator = null;
	  this.eventManager = new EventManager(this.wot);
	  this.eventManager.addEventListener(window, 'resize', (function() {
	    $__4.clientHeight = $__4.getWorkspaceHeight();
	  }));
	};
	($traceurRuntime.createClass)(WalkontableViewport, {
	  getWorkspaceHeight: function() {
	    var trimmingContainer = this.instance.wtOverlays.topOverlay.trimmingContainer;
	    var elemHeight;
	    var height = 0;
	    if (trimmingContainer === window) {
	      height = document.documentElement.clientHeight;
	    } else {
	      elemHeight = outerHeight(trimmingContainer);
	      height = (elemHeight > 0 && trimmingContainer.clientHeight > 0) ? trimmingContainer.clientHeight : Infinity;
	    }
	    return height;
	  },
	  getWorkspaceWidth: function() {
	    var width;
	    var totalColumns = this.instance.getSetting('totalColumns');
	    var trimmingContainer = this.instance.wtOverlays.leftOverlay.trimmingContainer;
	    var overflow;
	    var stretchSetting = this.instance.getSetting('stretchH');
	    var docOffsetWidth = document.documentElement.offsetWidth;
	    if (Handsontable.freezeOverlays) {
	      width = Math.min(docOffsetWidth - this.getWorkspaceOffset().left, docOffsetWidth);
	    } else {
	      width = Math.min(this.getContainerFillWidth(), docOffsetWidth - this.getWorkspaceOffset().left, docOffsetWidth);
	    }
	    if (trimmingContainer === window && totalColumns > 0 && this.sumColumnWidths(0, totalColumns - 1) > width) {
	      return document.documentElement.clientWidth;
	    }
	    if (trimmingContainer !== window) {
	      overflow = getStyle(this.instance.wtOverlays.leftOverlay.trimmingContainer, 'overflow');
	      if (overflow == 'scroll' || overflow == 'hidden' || overflow == 'auto') {
	        return Math.max(width, trimmingContainer.clientWidth);
	      }
	    }
	    if (stretchSetting === 'none' || !stretchSetting) {
	      return Math.max(width, outerWidth(this.instance.wtTable.TABLE));
	    } else {
	      return width;
	    }
	  },
	  hasVerticalScroll: function() {
	    return this.getWorkspaceActualHeight() > this.getWorkspaceHeight();
	  },
	  hasHorizontalScroll: function() {
	    return this.getWorkspaceActualWidth() > this.getWorkspaceWidth();
	  },
	  sumColumnWidths: function(from, length) {
	    var sum = 0;
	    while (from < length) {
	      sum += this.wot.wtTable.getColumnWidth(from);
	      from++;
	    }
	    return sum;
	  },
	  getContainerFillWidth: function() {
	    if (this.containerWidth) {
	      return this.containerWidth;
	    }
	    var mainContainer = this.instance.wtTable.holder;
	    var fillWidth;
	    var dummyElement;
	    dummyElement = document.createElement('div');
	    dummyElement.style.width = '100%';
	    dummyElement.style.height = '1px';
	    mainContainer.appendChild(dummyElement);
	    fillWidth = dummyElement.offsetWidth;
	    this.containerWidth = fillWidth;
	    mainContainer.removeChild(dummyElement);
	    return fillWidth;
	  },
	  getWorkspaceOffset: function() {
	    return offset(this.wot.wtTable.TABLE);
	  },
	  getWorkspaceActualHeight: function() {
	    return outerHeight(this.wot.wtTable.TABLE);
	  },
	  getWorkspaceActualWidth: function() {
	    return outerWidth(this.wot.wtTable.TABLE) || outerWidth(this.wot.wtTable.TBODY) || outerWidth(this.wot.wtTable.THEAD);
	  },
	  getColumnHeaderHeight: function() {
	    if (isNaN(this.columnHeaderHeight)) {
	      this.columnHeaderHeight = outerHeight(this.wot.wtTable.THEAD);
	    }
	    return this.columnHeaderHeight;
	  },
	  getViewportHeight: function() {
	    var containerHeight = this.getWorkspaceHeight();
	    var columnHeaderHeight;
	    if (containerHeight === Infinity) {
	      return containerHeight;
	    }
	    columnHeaderHeight = this.getColumnHeaderHeight();
	    if (columnHeaderHeight > 0) {
	      containerHeight -= columnHeaderHeight;
	    }
	    return containerHeight;
	  },
	  getRowHeaderWidth: function() {
	    if (this.wot.cloneSource) {
	      return this.wot.cloneSource.wtViewport.getRowHeaderWidth();
	    }
	    if (isNaN(this.rowHeaderWidth)) {
	      var rowHeaders = this.instance.getSetting('rowHeaders');
	      if (rowHeaders.length) {
	        var TH = this.instance.wtTable.TABLE.querySelector('TH');
	        this.rowHeaderWidth = 0;
	        for (var i = 0,
	            len = rowHeaders.length; i < len; i++) {
	          if (TH) {
	            this.rowHeaderWidth += outerWidth(TH);
	            TH = TH.nextSibling;
	          } else {
	            this.rowHeaderWidth += 50;
	          }
	        }
	      } else {
	        this.rowHeaderWidth = 0;
	      }
	    }
	    return this.rowHeaderWidth;
	  },
	  getViewportWidth: function() {
	    var containerWidth = this.getWorkspaceWidth();
	    var rowHeaderWidth;
	    if (containerWidth === Infinity) {
	      return containerWidth;
	    }
	    rowHeaderWidth = this.getRowHeaderWidth();
	    if (rowHeaderWidth > 0) {
	      return containerWidth - rowHeaderWidth;
	    }
	    return containerWidth;
	  },
	  createRowsCalculator: function() {
	    var visible = arguments[0] !== (void 0) ? arguments[0] : false;
	    var $__4 = this;
	    var height;
	    var pos;
	    var fixedRowsTop;
	    var scrollbarHeight;
	    var fixedRowsBottom;
	    var fixedRowsHeight;
	    var totalRows;
	    this.rowHeaderWidth = NaN;
	    if (this.wot.wtSettings.settings.renderAllRows) {
	      height = Infinity;
	    } else {
	      height = this.getViewportHeight();
	    }
	    pos = getScrollTop(this.wot.wtOverlays.mainTableScrollableElement) - this.wot.wtOverlays.topOverlay.getTableParentOffset();
	    if (pos < 0) {
	      pos = 0;
	    }
	    fixedRowsTop = this.wot.getSetting('fixedRowsTop');
	    fixedRowsBottom = this.wot.getSetting('fixedRowsBottom');
	    totalRows = this.wot.getSetting('totalRows');
	    if (fixedRowsTop) {
	      fixedRowsHeight = this.wot.wtOverlays.topOverlay.sumCellSizes(0, fixedRowsTop);
	      pos += fixedRowsHeight;
	      height -= fixedRowsHeight;
	    }
	    if (fixedRowsBottom && this.wot.wtOverlays.bottomOverlay.clone) {
	      fixedRowsHeight = this.wot.wtOverlays.bottomOverlay.sumCellSizes(totalRows - fixedRowsBottom, totalRows);
	      height -= fixedRowsHeight;
	    }
	    if (this.wot.wtTable.holder.clientHeight === this.wot.wtTable.holder.offsetHeight) {
	      scrollbarHeight = 0;
	    } else {
	      scrollbarHeight = getScrollbarWidth();
	    }
	    return new WalkontableViewportRowsCalculator(height, pos, this.wot.getSetting('totalRows'), (function(sourceRow) {
	      return $__4.wot.wtTable.getRowHeight(sourceRow);
	    }), visible ? null : this.wot.wtSettings.settings.viewportRowCalculatorOverride, visible, scrollbarHeight);
	  },
	  createColumnsCalculator: function() {
	    var visible = arguments[0] !== (void 0) ? arguments[0] : false;
	    var $__4 = this;
	    var width = this.getViewportWidth();
	    var pos;
	    var fixedColumnsLeft;
	    this.columnHeaderHeight = NaN;
	    pos = this.wot.wtOverlays.leftOverlay.getScrollPosition() - this.wot.wtOverlays.leftOverlay.getTableParentOffset();
	    if (pos < 0) {
	      pos = 0;
	    }
	    fixedColumnsLeft = this.wot.getSetting('fixedColumnsLeft');
	    if (fixedColumnsLeft) {
	      var fixedColumnsWidth = this.wot.wtOverlays.leftOverlay.sumCellSizes(0, fixedColumnsLeft);
	      pos += fixedColumnsWidth;
	      width -= fixedColumnsWidth;
	    }
	    if (this.wot.wtTable.holder.clientWidth !== this.wot.wtTable.holder.offsetWidth) {
	      width -= getScrollbarWidth();
	    }
	    return new WalkontableViewportColumnsCalculator(width, pos, this.wot.getSetting('totalColumns'), (function(sourceCol) {
	      return $__4.wot.wtTable.getColumnWidth(sourceCol);
	    }), visible ? null : this.wot.wtSettings.settings.viewportColumnCalculatorOverride, visible, this.wot.getSetting('stretchH'));
	  },
	  createRenderCalculators: function() {
	    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (fastDraw) {
	      var proposedRowsVisibleCalculator = this.createRowsCalculator(true);
	      var proposedColumnsVisibleCalculator = this.createColumnsCalculator(true);
	      if (!(this.areAllProposedVisibleRowsAlreadyRendered(proposedRowsVisibleCalculator) && this.areAllProposedVisibleColumnsAlreadyRendered(proposedColumnsVisibleCalculator))) {
	        fastDraw = false;
	      }
	    }
	    if (!fastDraw) {
	      this.rowsRenderCalculator = this.createRowsCalculator();
	      this.columnsRenderCalculator = this.createColumnsCalculator();
	    }
	    this.rowsVisibleCalculator = null;
	    this.columnsVisibleCalculator = null;
	    return fastDraw;
	  },
	  createVisibleCalculators: function() {
	    this.rowsVisibleCalculator = this.createRowsCalculator(true);
	    this.columnsVisibleCalculator = this.createColumnsCalculator(true);
	  },
	  areAllProposedVisibleRowsAlreadyRendered: function(proposedRowsVisibleCalculator) {
	    if (this.rowsVisibleCalculator) {
	      if (proposedRowsVisibleCalculator.startRow < this.rowsRenderCalculator.startRow || (proposedRowsVisibleCalculator.startRow === this.rowsRenderCalculator.startRow && proposedRowsVisibleCalculator.startRow > 0)) {
	        return false;
	      } else if (proposedRowsVisibleCalculator.endRow > this.rowsRenderCalculator.endRow || (proposedRowsVisibleCalculator.endRow === this.rowsRenderCalculator.endRow && proposedRowsVisibleCalculator.endRow < this.wot.getSetting('totalRows') - 1)) {
	        return false;
	      } else {
	        return true;
	      }
	    }
	    return false;
	  },
	  areAllProposedVisibleColumnsAlreadyRendered: function(proposedColumnsVisibleCalculator) {
	    if (this.columnsVisibleCalculator) {
	      if (proposedColumnsVisibleCalculator.startColumn < this.columnsRenderCalculator.startColumn || (proposedColumnsVisibleCalculator.startColumn === this.columnsRenderCalculator.startColumn && proposedColumnsVisibleCalculator.startColumn > 0)) {
	        return false;
	      } else if (proposedColumnsVisibleCalculator.endColumn > this.columnsRenderCalculator.endColumn || (proposedColumnsVisibleCalculator.endColumn === this.columnsRenderCalculator.endColumn && proposedColumnsVisibleCalculator.endColumn < this.wot.getSetting('totalColumns') - 1)) {
	        return false;
	      } else {
	        return true;
	      }
	    }
	    return false;
	  }
	}, {});
	;
	window.WalkontableViewport = WalkontableViewport;

	//# 
	},{"calculator/viewportColumns":3,"calculator/viewportRows":4,"eventManager":40,"helpers/dom/element":44}],23:[function(require,module,exports){
	"use strict";
	var $__shims_47_classes__,
	    $__es6collections__,
	    $__pluginHooks__,
	    $__core__,
	    $__renderers_47__95_cellDecorator__,
	    $__cellTypes__,
	    $___46__46__47_plugins_47_jqueryHandsontable__,
	    $__helpers_47_array__,
	    $__helpers_47_browser__,
	    $__helpers_47_data__,
	    $__helpers_47_function__,
	    $__helpers_47_mixed__,
	    $__helpers_47_number__,
	    $__helpers_47_object__,
	    $__helpers_47_setting__,
	    $__helpers_47_string__,
	    $__helpers_47_unicode__,
	    $__helpers_47_dom_47_element__,
	    $__helpers_47_dom_47_event__;
	var version = Handsontable.version;
	var buildDate = Handsontable.buildDate;
	window.Handsontable = function Handsontable(rootElement, userSettings) {
	  var instance = new Handsontable.Core(rootElement, userSettings || {});
	  instance.init();
	  return instance;
	};
	Handsontable.version = version;
	Handsontable.buildDate = buildDate;
	($__shims_47_classes__ = require("shims/classes"), $__shims_47_classes__ && $__shims_47_classes__.__esModule && $__shims_47_classes__ || {default: $__shims_47_classes__});
	($__es6collections__ = require("es6collections"), $__es6collections__ && $__es6collections__.__esModule && $__es6collections__ || {default: $__es6collections__});
	Handsontable.plugins = {};
	var Hooks = ($__pluginHooks__ = require("pluginHooks"), $__pluginHooks__ && $__pluginHooks__.__esModule && $__pluginHooks__ || {default: $__pluginHooks__}).Hooks;
	if (!Handsontable.hooks) {
	  Handsontable.hooks = new Hooks();
	}
	($__core__ = require("core"), $__core__ && $__core__.__esModule && $__core__ || {default: $__core__});
	($__renderers_47__95_cellDecorator__ = require("renderers/_cellDecorator"), $__renderers_47__95_cellDecorator__ && $__renderers_47__95_cellDecorator__.__esModule && $__renderers_47__95_cellDecorator__ || {default: $__renderers_47__95_cellDecorator__});
	($__cellTypes__ = require("cellTypes"), $__cellTypes__ && $__cellTypes__.__esModule && $__cellTypes__ || {default: $__cellTypes__});
	($___46__46__47_plugins_47_jqueryHandsontable__ = require("plugins/jqueryHandsontable"), $___46__46__47_plugins_47_jqueryHandsontable__ && $___46__46__47_plugins_47_jqueryHandsontable__.__esModule && $___46__46__47_plugins_47_jqueryHandsontable__ || {default: $___46__46__47_plugins_47_jqueryHandsontable__});
	var arrayHelpers = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__});
	var browserHelpers = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__});
	var dataHelpers = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__});
	var functionHelpers = ($__helpers_47_function__ = require("helpers/function"), $__helpers_47_function__ && $__helpers_47_function__.__esModule && $__helpers_47_function__ || {default: $__helpers_47_function__});
	var mixedHelpers = ($__helpers_47_mixed__ = require("helpers/mixed"), $__helpers_47_mixed__ && $__helpers_47_mixed__.__esModule && $__helpers_47_mixed__ || {default: $__helpers_47_mixed__});
	var numberHelpers = ($__helpers_47_number__ = require("helpers/number"), $__helpers_47_number__ && $__helpers_47_number__.__esModule && $__helpers_47_number__ || {default: $__helpers_47_number__});
	var objectHelpers = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__});
	var settingHelpers = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__});
	var stringHelpers = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__});
	var unicodeHelpers = ($__helpers_47_unicode__ = require("helpers/unicode"), $__helpers_47_unicode__ && $__helpers_47_unicode__.__esModule && $__helpers_47_unicode__ || {default: $__helpers_47_unicode__});
	var helpers = [arrayHelpers, browserHelpers, dataHelpers, functionHelpers, mixedHelpers, numberHelpers, objectHelpers, settingHelpers, stringHelpers, unicodeHelpers];
	Handsontable.helper = {};
	arrayHelpers.arrayEach(helpers, (function(helper) {
	  arrayHelpers.arrayEach(Object.getOwnPropertyNames(helper), (function(key) {
	    if (key.charAt(0) !== '_') {
	      Handsontable.helper[key] = helper[key];
	    }
	  }));
	}));
	var domHelpers = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__});
	var domEventHelpers = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__});
	Handsontable.dom = {};
	Handsontable.Dom = Handsontable.dom;
	arrayHelpers.arrayEach([domHelpers, domEventHelpers], (function(helper) {
	  arrayHelpers.arrayEach(Object.getOwnPropertyNames(helper), (function(key) {
	    if (key.charAt(0) !== '_') {
	      Handsontable.dom[key] = helper[key];
	    }
	  }));
	}));

	//# 
	},{"cellTypes":24,"core":25,"es6collections":"es6collections","helpers/array":41,"helpers/browser":42,"helpers/data":43,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/function":46,"helpers/mixed":47,"helpers/number":48,"helpers/object":49,"helpers/setting":50,"helpers/string":51,"helpers/unicode":52,"pluginHooks":54,"plugins/jqueryHandsontable":1,"renderers/_cellDecorator":87,"shims/classes":94}],24:[function(require,module,exports){
	"use strict";
	var $__helpers_47_browser__,
	    $__editors__,
	    $__renderers__,
	    $__editors_47_autocompleteEditor__,
	    $__editors_47_checkboxEditor__,
	    $__editors_47_dateEditor__,
	    $__editors_47_dropdownEditor__,
	    $__editors_47_handsontableEditor__,
	    $__editors_47_mobileTextEditor__,
	    $__editors_47_numericEditor__,
	    $__editors_47_passwordEditor__,
	    $__editors_47_selectEditor__,
	    $__editors_47_textEditor__,
	    $__renderers_47_autocompleteRenderer__,
	    $__renderers_47_checkboxRenderer__,
	    $__renderers_47_htmlRenderer__,
	    $__renderers_47_numericRenderer__,
	    $__renderers_47_passwordRenderer__,
	    $__renderers_47_textRenderer__,
	    $__validators_47_autocompleteValidator__,
	    $__validators_47_dateValidator__,
	    $__validators_47_numericValidator__;
	var isMobileBrowser = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__}).isMobileBrowser;
	var getEditorConstructor = ($__editors__ = require("editors"), $__editors__ && $__editors__.__esModule && $__editors__ || {default: $__editors__}).getEditorConstructor;
	var getRenderer = ($__renderers__ = require("renderers"), $__renderers__ && $__renderers__.__esModule && $__renderers__ || {default: $__renderers__}).getRenderer;
	var AutocompleteEditor = ($__editors_47_autocompleteEditor__ = require("editors/autocompleteEditor"), $__editors_47_autocompleteEditor__ && $__editors_47_autocompleteEditor__.__esModule && $__editors_47_autocompleteEditor__ || {default: $__editors_47_autocompleteEditor__}).AutocompleteEditor;
	var CheckboxEditor = ($__editors_47_checkboxEditor__ = require("editors/checkboxEditor"), $__editors_47_checkboxEditor__ && $__editors_47_checkboxEditor__.__esModule && $__editors_47_checkboxEditor__ || {default: $__editors_47_checkboxEditor__}).CheckboxEditor;
	var DateEditor = ($__editors_47_dateEditor__ = require("editors/dateEditor"), $__editors_47_dateEditor__ && $__editors_47_dateEditor__.__esModule && $__editors_47_dateEditor__ || {default: $__editors_47_dateEditor__}).DateEditor;
	var DropdownEditor = ($__editors_47_dropdownEditor__ = require("editors/dropdownEditor"), $__editors_47_dropdownEditor__ && $__editors_47_dropdownEditor__.__esModule && $__editors_47_dropdownEditor__ || {default: $__editors_47_dropdownEditor__}).DropdownEditor;
	var HandsontableEditor = ($__editors_47_handsontableEditor__ = require("editors/handsontableEditor"), $__editors_47_handsontableEditor__ && $__editors_47_handsontableEditor__.__esModule && $__editors_47_handsontableEditor__ || {default: $__editors_47_handsontableEditor__}).HandsontableEditor;
	var MobileTextEditor = ($__editors_47_mobileTextEditor__ = require("editors/mobileTextEditor"), $__editors_47_mobileTextEditor__ && $__editors_47_mobileTextEditor__.__esModule && $__editors_47_mobileTextEditor__ || {default: $__editors_47_mobileTextEditor__}).MobileTextEditor;
	var NumericEditor = ($__editors_47_numericEditor__ = require("editors/numericEditor"), $__editors_47_numericEditor__ && $__editors_47_numericEditor__.__esModule && $__editors_47_numericEditor__ || {default: $__editors_47_numericEditor__}).NumericEditor;
	var PasswordEditor = ($__editors_47_passwordEditor__ = require("editors/passwordEditor"), $__editors_47_passwordEditor__ && $__editors_47_passwordEditor__.__esModule && $__editors_47_passwordEditor__ || {default: $__editors_47_passwordEditor__}).PasswordEditor;
	var SelectEditor = ($__editors_47_selectEditor__ = require("editors/selectEditor"), $__editors_47_selectEditor__ && $__editors_47_selectEditor__.__esModule && $__editors_47_selectEditor__ || {default: $__editors_47_selectEditor__}).SelectEditor;
	var TextEditor = ($__editors_47_textEditor__ = require("editors/textEditor"), $__editors_47_textEditor__ && $__editors_47_textEditor__.__esModule && $__editors_47_textEditor__ || {default: $__editors_47_textEditor__}).TextEditor;
	var AutocompleteRenderer = ($__renderers_47_autocompleteRenderer__ = require("renderers/autocompleteRenderer"), $__renderers_47_autocompleteRenderer__ && $__renderers_47_autocompleteRenderer__.__esModule && $__renderers_47_autocompleteRenderer__ || {default: $__renderers_47_autocompleteRenderer__}).AutocompleteRenderer;
	var CheckboxRenderer = ($__renderers_47_checkboxRenderer__ = require("renderers/checkboxRenderer"), $__renderers_47_checkboxRenderer__ && $__renderers_47_checkboxRenderer__.__esModule && $__renderers_47_checkboxRenderer__ || {default: $__renderers_47_checkboxRenderer__}).CheckboxRenderer;
	var HtmlRenderer = ($__renderers_47_htmlRenderer__ = require("renderers/htmlRenderer"), $__renderers_47_htmlRenderer__ && $__renderers_47_htmlRenderer__.__esModule && $__renderers_47_htmlRenderer__ || {default: $__renderers_47_htmlRenderer__}).HtmlRenderer;
	var NumericRenderer = ($__renderers_47_numericRenderer__ = require("renderers/numericRenderer"), $__renderers_47_numericRenderer__ && $__renderers_47_numericRenderer__.__esModule && $__renderers_47_numericRenderer__ || {default: $__renderers_47_numericRenderer__}).NumericRenderer;
	var PasswordRenderer = ($__renderers_47_passwordRenderer__ = require("renderers/passwordRenderer"), $__renderers_47_passwordRenderer__ && $__renderers_47_passwordRenderer__.__esModule && $__renderers_47_passwordRenderer__ || {default: $__renderers_47_passwordRenderer__}).PasswordRenderer;
	var TextRenderer = ($__renderers_47_textRenderer__ = require("renderers/textRenderer"), $__renderers_47_textRenderer__ && $__renderers_47_textRenderer__.__esModule && $__renderers_47_textRenderer__ || {default: $__renderers_47_textRenderer__}).TextRenderer;
	var AutocompleteValidator = ($__validators_47_autocompleteValidator__ = require("validators/autocompleteValidator"), $__validators_47_autocompleteValidator__ && $__validators_47_autocompleteValidator__.__esModule && $__validators_47_autocompleteValidator__ || {default: $__validators_47_autocompleteValidator__}).AutocompleteValidator;
	var DateValidator = ($__validators_47_dateValidator__ = require("validators/dateValidator"), $__validators_47_dateValidator__ && $__validators_47_dateValidator__.__esModule && $__validators_47_dateValidator__ || {default: $__validators_47_dateValidator__}).DateValidator;
	var NumericValidator = ($__validators_47_numericValidator__ = require("validators/numericValidator"), $__validators_47_numericValidator__ && $__validators_47_numericValidator__.__esModule && $__validators_47_numericValidator__ || {default: $__validators_47_numericValidator__}).NumericValidator;
	Handsontable.mobileBrowser = isMobileBrowser();
	Handsontable.AutocompleteCell = {
	  editor: getEditorConstructor('autocomplete'),
	  renderer: getRenderer('autocomplete'),
	  validator: Handsontable.AutocompleteValidator
	};
	Handsontable.CheckboxCell = {
	  editor: getEditorConstructor('checkbox'),
	  renderer: getRenderer('checkbox')
	};
	Handsontable.TextCell = {
	  editor: Handsontable.mobileBrowser ? getEditorConstructor('mobile') : getEditorConstructor('text'),
	  renderer: getRenderer('text')
	};
	Handsontable.NumericCell = {
	  editor: getEditorConstructor('numeric'),
	  renderer: getRenderer('numeric'),
	  validator: Handsontable.NumericValidator,
	  dataType: 'number'
	};
	Handsontable.DateCell = {
	  editor: getEditorConstructor('date'),
	  validator: Handsontable.DateValidator,
	  renderer: getRenderer('autocomplete')
	};
	Handsontable.HandsontableCell = {
	  editor: getEditorConstructor('handsontable'),
	  renderer: getRenderer('autocomplete')
	};
	Handsontable.PasswordCell = {
	  editor: getEditorConstructor('password'),
	  renderer: getRenderer('password'),
	  copyable: false
	};
	Handsontable.DropdownCell = {
	  editor: getEditorConstructor('dropdown'),
	  renderer: getRenderer('autocomplete'),
	  validator: Handsontable.AutocompleteValidator
	};
	Handsontable.cellTypes = {
	  text: Handsontable.TextCell,
	  date: Handsontable.DateCell,
	  numeric: Handsontable.NumericCell,
	  checkbox: Handsontable.CheckboxCell,
	  autocomplete: Handsontable.AutocompleteCell,
	  handsontable: Handsontable.HandsontableCell,
	  password: Handsontable.PasswordCell,
	  dropdown: Handsontable.DropdownCell
	};
	Handsontable.cellLookup = {validator: {
	    numeric: Handsontable.NumericValidator,
	    autocomplete: Handsontable.AutocompleteValidator
	  }};

	//# 
	},{"editors":28,"editors/autocompleteEditor":30,"editors/checkboxEditor":31,"editors/dateEditor":32,"editors/dropdownEditor":33,"editors/handsontableEditor":34,"editors/mobileTextEditor":35,"editors/numericEditor":36,"editors/passwordEditor":37,"editors/selectEditor":38,"editors/textEditor":39,"helpers/browser":42,"renderers":86,"renderers/autocompleteRenderer":88,"renderers/checkboxRenderer":89,"renderers/htmlRenderer":90,"renderers/numericRenderer":91,"renderers/passwordRenderer":92,"renderers/textRenderer":93,"validators/autocompleteValidator":98,"validators/dateValidator":99,"validators/numericValidator":100}],25:[function(require,module,exports){
	"use strict";
	var $__numeral__,
	    $__helpers_47_dom_47_element__,
	    $__helpers_47_setting__,
	    $__dataMap__,
	    $__editorManager__,
	    $__eventManager__,
	    $__helpers_47_object__,
	    $__helpers_47_array__,
	    $__plugins__,
	    $__renderers__,
	    $__helpers_47_string__,
	    $__helpers_47_number__,
	    $__tableView__,
	    $__helpers_47_data__,
	    $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $__3rdparty_47_walkontable_47_src_47_cell_47_range__,
	    $__3rdparty_47_walkontable_47_src_47_selection__,
	    $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__;
	var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;
	var $__1 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),
	    addClass = $__1.addClass,
	    empty = $__1.empty,
	    isChildOfWebComponentTable = $__1.isChildOfWebComponentTable,
	    removeClass = $__1.removeClass;
	var columnFactory = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__}).columnFactory;
	var DataMap = ($__dataMap__ = require("dataMap"), $__dataMap__ && $__dataMap__.__esModule && $__dataMap__ || {default: $__dataMap__}).DataMap;
	var EditorManager = ($__editorManager__ = require("editorManager"), $__editorManager__ && $__editorManager__.__esModule && $__editorManager__ || {default: $__editorManager__}).EditorManager;
	var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;
	var $__6 = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}),
	    extend = $__6.extend,
	    duckSchema = $__6.duckSchema,
	    isObjectEquals = $__6.isObjectEquals,
	    deepClone = $__6.deepClone;
	var arrayFlatten = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__}).arrayFlatten;
	var getPlugin = ($__plugins__ = require("plugins"), $__plugins__ && $__plugins__.__esModule && $__plugins__ || {default: $__plugins__}).getPlugin;
	var getRenderer = ($__renderers__ = require("renderers"), $__renderers__ && $__renderers__.__esModule && $__renderers__ || {default: $__renderers__}).getRenderer;
	var randomString = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).randomString;
	var rangeEach = ($__helpers_47_number__ = require("helpers/number"), $__helpers_47_number__ && $__helpers_47_number__.__esModule && $__helpers_47_number__ || {default: $__helpers_47_number__}).rangeEach;
	var TableView = ($__tableView__ = require("tableView"), $__tableView__ && $__tableView__.__esModule && $__tableView__ || {default: $__tableView__}).TableView;
	var $__13 = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__}),
	    translateRowsToColumns = $__13.translateRowsToColumns,
	    cellMethodLookupFactory = $__13.cellMethodLookupFactory,
	    spreadsheetColumnLabel = $__13.spreadsheetColumnLabel;
	var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = ($__3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $__3rdparty_47_walkontable_47_src_47_cell_47_range__ && $__3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;
	var WalkontableSelection = ($__3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $__3rdparty_47_walkontable_47_src_47_selection__ && $__3rdparty_47_walkontable_47_src_47_selection__.__esModule && $__3rdparty_47_walkontable_47_src_47_selection__ || {default: $__3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;
	var WalkontableViewportColumnsCalculator = ($__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ = require("3rdparty/walkontable/src/calculator/viewportColumns"), $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ && $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__.__esModule && $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ || {default: $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;
	Handsontable.activeGuid = null;
	Handsontable.Core = function Core(rootElement, userSettings) {
	  var priv,
	      datamap,
	      grid,
	      selection,
	      editorManager,
	      instance = this,
	      GridSettings = function() {},
	      eventManager = eventManagerObject(instance);
	  extend(GridSettings.prototype, DefaultSettings.prototype);
	  extend(GridSettings.prototype, userSettings);
	  extend(GridSettings.prototype, expandType(userSettings));
	  this.rootElement = rootElement;
	  this.isHotTableEnv = isChildOfWebComponentTable(this.rootElement);
	  Handsontable.eventManager.isHotTableEnv = this.isHotTableEnv;
	  this.container = document.createElement('DIV');
	  this.renderCall = false;
	  rootElement.insertBefore(this.container, rootElement.firstChild);
	  this.guid = 'ht_' + randomString();
	  if (!this.rootElement.id || this.rootElement.id.substring(0, 3) === 'ht_') {
	    this.rootElement.id = this.guid;
	  }
	  priv = {
	    cellSettings: [],
	    columnSettings: [],
	    columnsSettingConflicts: ['data', 'width'],
	    settings: new GridSettings(),
	    selRange: null,
	    isPopulated: null,
	    scrollable: null,
	    firstRun: true
	  };
	  grid = {
	    alter: function(action, index, amount, source, keepEmptyRows) {
	      var delta;
	      amount = amount || 1;
	      switch (action) {
	        case 'insert_row':
	          if (instance.getSettings().maxRows === instance.countRows()) {
	            return;
	          }
	          delta = datamap.createRow(index, amount);
	          if (delta) {
	            if (selection.isSelected() && priv.selRange.from.row >= index) {
	              priv.selRange.from.row = priv.selRange.from.row + delta;
	              selection.transformEnd(delta, 0);
	            } else {
	              selection.refreshBorders();
	            }
	          }
	          break;
	        case 'insert_col':
	          delta = datamap.createCol(index, amount);
	          if (delta) {
	            if (Array.isArray(instance.getSettings().colHeaders)) {
	              var spliceArray = [index, 0];
	              spliceArray.length += delta;
	              Array.prototype.splice.apply(instance.getSettings().colHeaders, spliceArray);
	            }
	            if (selection.isSelected() && priv.selRange.from.col >= index) {
	              priv.selRange.from.col = priv.selRange.from.col + delta;
	              selection.transformEnd(0, delta);
	            } else {
	              selection.refreshBorders();
	            }
	          }
	          break;
	        case 'remove_row':
	          index = instance.runHooks('modifyCol', index);
	          datamap.removeRow(index, amount);
	          priv.cellSettings.splice(index, amount);
	          var totalRows = instance.countRows();
	          var fixedRowsTop = instance.getSettings().fixedRowsTop;
	          if (fixedRowsTop >= index + 1) {
	            instance.getSettings().fixedRowsTop -= Math.min(amount, fixedRowsTop - index);
	          }
	          var fixedRowsBottom = instance.getSettings().fixedRowsBottom;
	          if (fixedRowsBottom && totalRows - fixedRowsBottom <= index + 1) {
	            instance.getSettings().fixedRowsBottom -= Math.min(amount, fixedRowsBottom - index);
	          }
	          grid.adjustRowsAndCols();
	          selection.refreshBorders();
	          break;
	        case 'remove_col':
	          datamap.removeCol(index, amount);
	          for (var row = 0,
	              len = datamap.getAll().length; row < len; row++) {
	            if (row in priv.cellSettings) {
	              priv.cellSettings[row].splice(index, amount);
	            }
	          }
	          var fixedColumnsLeft = instance.getSettings().fixedColumnsLeft;
	          if (fixedColumnsLeft >= index + 1) {
	            instance.getSettings().fixedColumnsLeft -= Math.min(amount, fixedColumnsLeft - index);
	          }
	          if (Array.isArray(instance.getSettings().colHeaders)) {
	            if (typeof index == 'undefined') {
	              index = -1;
	            }
	            instance.getSettings().colHeaders.splice(index, amount);
	          }
	          grid.adjustRowsAndCols();
	          selection.refreshBorders();
	          break;
	        default:
	          throw new Error('There is no such action "' + action + '"');
	          break;
	      }
	      if (!keepEmptyRows) {
	        grid.adjustRowsAndCols();
	      }
	    },
	    adjustRowsAndCols: function() {
	      if (priv.settings.minRows) {
	        var rows = instance.countRows();
	        if (rows < priv.settings.minRows) {
	          for (var r = 0,
	              minRows = priv.settings.minRows; r < minRows - rows; r++) {
	            datamap.createRow(instance.countRows(), 1, true);
	          }
	        }
	      }
	      if (priv.settings.minSpareRows) {
	        var emptyRows = instance.countEmptyRows(true);
	        if (emptyRows < priv.settings.minSpareRows) {
	          for (; emptyRows < priv.settings.minSpareRows && instance.countRows() < priv.settings.maxRows; emptyRows++) {
	            datamap.createRow(instance.countRows(), 1, true);
	          }
	        }
	      }
	      {
	        var emptyCols;
	        if (priv.settings.minCols || priv.settings.minSpareCols) {
	          emptyCols = instance.countEmptyCols(true);
	        }
	        if (priv.settings.minCols && !priv.settings.columns && instance.countCols() < priv.settings.minCols) {
	          for (; instance.countCols() < priv.settings.minCols; emptyCols++) {
	            datamap.createCol(instance.countCols(), 1, true);
	          }
	        }
	        if (priv.settings.minSpareCols && !priv.settings.columns && instance.dataType === 'array' && emptyCols < priv.settings.minSpareCols) {
	          for (; emptyCols < priv.settings.minSpareCols && instance.countCols() < priv.settings.maxCols; emptyCols++) {
	            datamap.createCol(instance.countCols(), 1, true);
	          }
	        }
	      }
	      var rowCount = instance.countRows();
	      var colCount = instance.countCols();
	      if (rowCount === 0 || colCount === 0) {
	        selection.deselect();
	      }
	      if (selection.isSelected()) {
	        var selectionChanged = false;
	        var fromRow = priv.selRange.from.row;
	        var fromCol = priv.selRange.from.col;
	        var toRow = priv.selRange.to.row;
	        var toCol = priv.selRange.to.col;
	        if (fromRow > rowCount - 1) {
	          fromRow = rowCount - 1;
	          selectionChanged = true;
	          if (toRow > fromRow) {
	            toRow = fromRow;
	          }
	        } else if (toRow > rowCount - 1) {
	          toRow = rowCount - 1;
	          selectionChanged = true;
	          if (fromRow > toRow) {
	            fromRow = toRow;
	          }
	        }
	        if (fromCol > colCount - 1) {
	          fromCol = colCount - 1;
	          selectionChanged = true;
	          if (toCol > fromCol) {
	            toCol = fromCol;
	          }
	        } else if (toCol > colCount - 1) {
	          toCol = colCount - 1;
	          selectionChanged = true;
	          if (fromCol > toCol) {
	            fromCol = toCol;
	          }
	        }
	        if (selectionChanged) {
	          instance.selectCell(fromRow, fromCol, toRow, toCol);
	        }
	      }
	      if (instance.view) {
	        instance.view.wt.wtOverlays.adjustElementsSize();
	      }
	    },
	    populateFromArray: function(start, input, end, source, method, direction, deltas) {
	      var r,
	          rlen,
	          c,
	          clen,
	          setData = [],
	          current = {};
	      rlen = input.length;
	      if (rlen === 0) {
	        return false;
	      }
	      var repeatCol,
	          repeatRow,
	          cmax,
	          rmax,
	          baseEnd = {
	            row: end === null ? null : end.row,
	            col: end === null ? null : end.col
	          };
	      switch (method) {
	        case 'shift_down':
	          repeatCol = end ? end.col - start.col + 1 : 0;
	          repeatRow = end ? end.row - start.row + 1 : 0;
	          input = translateRowsToColumns(input);
	          for (c = 0, clen = input.length, cmax = Math.max(clen, repeatCol); c < cmax; c++) {
	            if (c < clen) {
	              for (r = 0, rlen = input[c].length; r < repeatRow - rlen; r++) {
	                input[c].push(input[c][r % rlen]);
	              }
	              input[c].unshift(start.col + c, start.row, 0);
	              instance.spliceCol.apply(instance, input[c]);
	            } else {
	              input[c % clen][0] = start.col + c;
	              instance.spliceCol.apply(instance, input[c % clen]);
	            }
	          }
	          break;
	        case 'shift_right':
	          repeatCol = end ? end.col - start.col + 1 : 0;
	          repeatRow = end ? end.row - start.row + 1 : 0;
	          for (r = 0, rlen = input.length, rmax = Math.max(rlen, repeatRow); r < rmax; r++) {
	            if (r < rlen) {
	              for (c = 0, clen = input[r].length; c < repeatCol - clen; c++) {
	                input[r].push(input[r][c % clen]);
	              }
	              input[r].unshift(start.row + r, start.col, 0);
	              instance.spliceRow.apply(instance, input[r]);
	            } else {
	              input[r % rlen][0] = start.row + r;
	              instance.spliceRow.apply(instance, input[r % rlen]);
	            }
	          }
	          break;
	        case 'overwrite':
	        default:
	          current.row = start.row;
	          current.col = start.col;
	          var selected = {
	            row: (end && start) ? (end.row - start.row + 1) : 1,
	            col: (end && start) ? (end.col - start.col + 1) : 1
	          };
	          var skippedRow = 0;
	          var skippedColumn = 0;
	          var pushData = true;
	          var cellMeta;
	          var getInputValue = function getInputValue(row) {
	            var col = arguments[1] !== (void 0) ? arguments[1] : null;
	            var rowValue = input[row % input.length];
	            if (col !== null) {
	              return rowValue[col % rowValue.length];
	            }
	            return rowValue;
	          };
	          var rowInputLength = input.length;
	          var rowSelectionLength = end ? end.row - start.row + 1 : 0;
	          if (end) {
	            rlen = rowSelectionLength;
	          } else {
	            rlen = Math.max(rowInputLength, rowSelectionLength);
	          }
	          for (r = 0; r < rlen; r++) {
	            if ((end && current.row > end.row && rowSelectionLength > rowInputLength) || (!priv.settings.allowInsertRow && current.row > instance.countRows() - 1) || (current.row >= priv.settings.maxRows)) {
	              break;
	            }
	            var logicalRow = r - skippedRow;
	            var colInputLength = getInputValue(logicalRow).length;
	            var colSelectionLength = end ? end.col - start.col + 1 : 0;
	            if (end) {
	              clen = colSelectionLength;
	            } else {
	              clen = Math.max(colInputLength, colSelectionLength);
	            }
	            current.col = start.col;
	            cellMeta = instance.getCellMeta(current.row, current.col);
	            if ((source === 'paste' || source === 'autofill') && cellMeta.skipRowOnPaste) {
	              skippedRow++;
	              current.row++;
	              rlen++;
	              continue;
	            }
	            skippedColumn = 0;
	            for (c = 0; c < clen; c++) {
	              if ((end && current.col > end.col && colSelectionLength > colInputLength) || (!priv.settings.allowInsertColumn && current.col > instance.countCols() - 1) || (current.col >= priv.settings.maxCols)) {
	                break;
	              }
	              cellMeta = instance.getCellMeta(current.row, current.col);
	              if ((source === 'paste' || source === 'autofill') && cellMeta.skipColumnOnPaste) {
	                skippedColumn++;
	                current.col++;
	                clen++;
	                continue;
	              }
	              if (cellMeta.readOnly) {
	                current.col++;
	                continue;
	              }
	              var logicalColumn = c - skippedColumn;
	              var value = getInputValue(logicalRow, logicalColumn);
	              var orgValue = instance.getDataAtCell(current.row, current.col);
	              var index = {
	                row: logicalRow,
	                col: logicalColumn
	              };
	              if (source === 'autofill') {
	                var result = instance.runHooks('beforeAutofillInsidePopulate', index, direction, input, deltas, {}, selected);
	                if (result) {
	                  value = typeof(result.value) === 'undefined' ? value : result.value;
	                }
	              }
	              if (value !== null && typeof value === 'object') {
	                if (orgValue === null || typeof orgValue !== 'object') {
	                  pushData = false;
	                } else {
	                  var orgValueSchema = duckSchema(orgValue[0] || orgValue);
	                  var valueSchema = duckSchema(value[0] || value);
	                  if (isObjectEquals(orgValueSchema, valueSchema)) {
	                    value = deepClone(value);
	                  } else {
	                    pushData = false;
	                  }
	                }
	              } else if (orgValue !== null && typeof orgValue === 'object') {
	                pushData = false;
	              }
	              if (pushData) {
	                setData.push([current.row, current.col, value]);
	              }
	              pushData = true;
	              current.col++;
	            }
	            current.row++;
	          }
	          instance.setDataAtCell(setData, null, null, source || 'populateFromArray');
	          break;
	      }
	    }
	  };
	  this.selection = selection = {
	    inProgress: false,
	    selectedHeader: {
	      cols: false,
	      rows: false
	    },
	    setSelectedHeaders: function(rows, cols) {
	      instance.selection.selectedHeader.rows = rows;
	      instance.selection.selectedHeader.cols = cols;
	    },
	    begin: function() {
	      instance.selection.inProgress = true;
	    },
	    finish: function() {
	      var sel = instance.getSelected();
	      Handsontable.hooks.run(instance, 'afterSelectionEnd', sel[0], sel[1], sel[2], sel[3]);
	      Handsontable.hooks.run(instance, 'afterSelectionEndByProp', sel[0], instance.colToProp(sel[1]), sel[2], instance.colToProp(sel[3]));
	      instance.selection.inProgress = false;
	    },
	    isInProgress: function() {
	      return instance.selection.inProgress;
	    },
	    setRangeStart: function(coords, keepEditorOpened) {
	      Handsontable.hooks.run(instance, 'beforeSetRangeStart', coords);
	      priv.selRange = new WalkontableCellRange(coords, coords, coords);
	      selection.setRangeEnd(coords, null, keepEditorOpened);
	    },
	    setRangeEnd: function(coords, scrollToCell, keepEditorOpened) {
	      if (priv.selRange === null) {
	        return;
	      }
	      var disableVisualSelection,
	          isHeaderSelected = false,
	          areCoordsPositive = true;
	      var firstVisibleRow = instance.view.wt.wtTable.getFirstVisibleRow();
	      var firstVisibleColumn = instance.view.wt.wtTable.getFirstVisibleColumn();
	      var newRangeCoords = {
	        row: null,
	        col: null
	      };
	      Handsontable.hooks.run(instance, 'beforeSetRangeEnd', coords);
	      instance.selection.begin();
	      newRangeCoords.row = coords.row < 0 ? firstVisibleRow : coords.row;
	      newRangeCoords.col = coords.col < 0 ? firstVisibleColumn : coords.col;
	      priv.selRange.to = new WalkontableCellCoords(newRangeCoords.row, newRangeCoords.col);
	      if (!priv.settings.multiSelect) {
	        priv.selRange.from = coords;
	      }
	      instance.view.wt.selections.current.clear();
	      disableVisualSelection = instance.getCellMeta(priv.selRange.highlight.row, priv.selRange.highlight.col).disableVisualSelection;
	      if (typeof disableVisualSelection === 'string') {
	        disableVisualSelection = [disableVisualSelection];
	      }
	      if (disableVisualSelection === false || Array.isArray(disableVisualSelection) && disableVisualSelection.indexOf('current') === -1) {
	        instance.view.wt.selections.current.add(priv.selRange.highlight);
	      }
	      instance.view.wt.selections.area.clear();
	      if ((disableVisualSelection === false || Array.isArray(disableVisualSelection) && disableVisualSelection.indexOf('area') === -1) && selection.isMultiple()) {
	        instance.view.wt.selections.area.add(priv.selRange.from);
	        instance.view.wt.selections.area.add(priv.selRange.to);
	      }
	      if (priv.settings.currentRowClassName || priv.settings.currentColClassName) {
	        instance.view.wt.selections.highlight.clear();
	        instance.view.wt.selections.highlight.add(priv.selRange.from);
	        instance.view.wt.selections.highlight.add(priv.selRange.to);
	      }
	      Handsontable.hooks.run(instance, 'afterSelection', priv.selRange.from.row, priv.selRange.from.col, priv.selRange.to.row, priv.selRange.to.col);
	      Handsontable.hooks.run(instance, 'afterSelectionByProp', priv.selRange.from.row, datamap.colToProp(priv.selRange.from.col), priv.selRange.to.row, datamap.colToProp(priv.selRange.to.col));
	      if ((priv.selRange.from.row === 0 && priv.selRange.to.row === instance.countRows() - 1 && instance.countRows() > 1) || (priv.selRange.from.col === 0 && priv.selRange.to.col === instance.countCols() - 1 && instance.countCols() > 1)) {
	        isHeaderSelected = true;
	      }
	      if (coords.row < 0 || coords.col < 0) {
	        areCoordsPositive = false;
	      }
	      if (scrollToCell !== false && !isHeaderSelected && areCoordsPositive) {
	        if (priv.selRange.from && !selection.isMultiple()) {
	          instance.view.scrollViewport(priv.selRange.from);
	        } else {
	          instance.view.scrollViewport(coords);
	        }
	      }
	      selection.refreshBorders(null, keepEditorOpened);
	    },
	    refreshBorders: function(revertOriginal, keepEditor) {
	      if (!keepEditor) {
	        editorManager.destroyEditor(revertOriginal);
	      }
	      instance.view.render();
	      if (selection.isSelected() && !keepEditor) {
	        editorManager.prepareEditor();
	      }
	    },
	    isMultiple: function() {
	      var isMultiple = !(priv.selRange.to.col === priv.selRange.from.col && priv.selRange.to.row === priv.selRange.from.row),
	          modifier = Handsontable.hooks.run(instance, 'afterIsMultipleSelection', isMultiple);
	      if (isMultiple) {
	        return modifier;
	      }
	    },
	    transformStart: function(rowDelta, colDelta, force, keepEditorOpened) {
	      var delta = new WalkontableCellCoords(rowDelta, colDelta),
	          rowTransformDir = 0,
	          colTransformDir = 0,
	          totalRows,
	          totalCols,
	          coords,
	          fixedRowsBottom;
	      instance.runHooks('modifyTransformStart', delta);
	      totalRows = instance.countRows();
	      totalCols = instance.countCols();
	      fixedRowsBottom = instance.getSettings().fixedRowsBottom;
	      if (priv.selRange.highlight.row + rowDelta > totalRows - 1) {
	        if (force && priv.settings.minSpareRows > 0 && !(fixedRowsBottom && priv.selRange.highlight.row >= totalRows - fixedRowsBottom - 1)) {
	          instance.alter('insert_row', totalRows);
	          totalRows = instance.countRows();
	        } else if (priv.settings.autoWrapCol) {
	          delta.row = 1 - totalRows;
	          delta.col = priv.selRange.highlight.col + delta.col == totalCols - 1 ? 1 - totalCols : 1;
	        }
	      } else if (priv.settings.autoWrapCol && priv.selRange.highlight.row + delta.row < 0 && priv.selRange.highlight.col + delta.col >= 0) {
	        delta.row = totalRows - 1;
	        delta.col = priv.selRange.highlight.col + delta.col == 0 ? totalCols - 1 : -1;
	      }
	      if (priv.selRange.highlight.col + delta.col > totalCols - 1) {
	        if (force && priv.settings.minSpareCols > 0) {
	          instance.alter('insert_col', totalCols);
	          totalCols = instance.countCols();
	        } else if (priv.settings.autoWrapRow) {
	          delta.row = priv.selRange.highlight.row + delta.row == totalRows - 1 ? 1 - totalRows : 1;
	          delta.col = 1 - totalCols;
	        }
	      } else if (priv.settings.autoWrapRow && priv.selRange.highlight.col + delta.col < 0 && priv.selRange.highlight.row + delta.row >= 0) {
	        delta.row = priv.selRange.highlight.row + delta.row == 0 ? totalRows - 1 : -1;
	        delta.col = totalCols - 1;
	      }
	      coords = new WalkontableCellCoords(priv.selRange.highlight.row + delta.row, priv.selRange.highlight.col + delta.col);
	      if (coords.row < 0) {
	        rowTransformDir = -1;
	        coords.row = 0;
	      } else if (coords.row > 0 && coords.row >= totalRows) {
	        rowTransformDir = 1;
	        coords.row = totalRows - 1;
	      }
	      if (coords.col < 0) {
	        colTransformDir = -1;
	        coords.col = 0;
	      } else if (coords.col > 0 && coords.col >= totalCols) {
	        colTransformDir = 1;
	        coords.col = totalCols - 1;
	      }
	      instance.runHooks('afterModifyTransformStart', coords, rowTransformDir, colTransformDir);
	      selection.setRangeStart(coords, keepEditorOpened);
	    },
	    transformEnd: function(rowDelta, colDelta) {
	      var delta = new WalkontableCellCoords(rowDelta, colDelta),
	          rowTransformDir = 0,
	          colTransformDir = 0,
	          totalRows,
	          totalCols,
	          coords;
	      instance.runHooks('modifyTransformEnd', delta);
	      totalRows = instance.countRows();
	      totalCols = instance.countCols();
	      coords = new WalkontableCellCoords(priv.selRange.to.row + delta.row, priv.selRange.to.col + delta.col);
	      if (coords.row < 0) {
	        rowTransformDir = -1;
	        coords.row = 0;
	      } else if (coords.row > 0 && coords.row >= totalRows) {
	        rowTransformDir = 1;
	        coords.row = totalRows - 1;
	      }
	      if (coords.col < 0) {
	        colTransformDir = -1;
	        coords.col = 0;
	      } else if (coords.col > 0 && coords.col >= totalCols) {
	        colTransformDir = 1;
	        coords.col = totalCols - 1;
	      }
	      instance.runHooks('afterModifyTransformEnd', coords, rowTransformDir, colTransformDir);
	      selection.setRangeEnd(coords, true);
	    },
	    isSelected: function() {
	      return (priv.selRange !== null);
	    },
	    inInSelection: function(coords) {
	      if (!selection.isSelected()) {
	        return false;
	      }
	      return priv.selRange.includes(coords);
	    },
	    deselect: function() {
	      if (!selection.isSelected()) {
	        return;
	      }
	      instance.selection.inProgress = false;
	      priv.selRange = null;
	      instance.view.wt.selections.current.clear();
	      instance.view.wt.selections.area.clear();
	      if (priv.settings.currentRowClassName || priv.settings.currentColClassName) {
	        instance.view.wt.selections.highlight.clear();
	      }
	      editorManager.destroyEditor();
	      selection.refreshBorders();
	      Handsontable.hooks.run(instance, 'afterDeselect');
	    },
	    selectAll: function() {
	      if (!priv.settings.multiSelect) {
	        return;
	      }
	      selection.setRangeStart(new WalkontableCellCoords(0, 0));
	      selection.setRangeEnd(new WalkontableCellCoords(instance.countRows() - 1, instance.countCols() - 1), false);
	    },
	    empty: function() {
	      if (!selection.isSelected()) {
	        return;
	      }
	      var topLeft = priv.selRange.getTopLeftCorner();
	      var bottomRight = priv.selRange.getBottomRightCorner();
	      var r,
	          c,
	          changes = [];
	      for (r = topLeft.row; r <= bottomRight.row; r++) {
	        for (c = topLeft.col; c <= bottomRight.col; c++) {
	          if (!instance.getCellMeta(r, c).readOnly) {
	            changes.push([r, c, '']);
	          }
	        }
	      }
	      instance.setDataAtCell(changes);
	    }
	  };
	  this.init = function() {
	    Handsontable.hooks.run(instance, 'beforeInit');
	    if (Handsontable.mobileBrowser) {
	      addClass(instance.rootElement, 'mobile');
	    }
	    this.updateSettings(priv.settings, true);
	    this.view = new TableView(this);
	    editorManager = new EditorManager(instance, priv, selection, datamap);
	    this.forceFullRender = true;
	    Handsontable.hooks.run(instance, 'init');
	    this.view.render();
	    if (typeof priv.firstRun === 'object') {
	      Handsontable.hooks.run(instance, 'afterChange', priv.firstRun[0], priv.firstRun[1]);
	      priv.firstRun = false;
	    }
	    Handsontable.hooks.run(instance, 'afterInit');
	  };
	  function ValidatorsQueue() {
	    var resolved = false;
	    return {
	      validatorsInQueue: 0,
	      valid: true,
	      addValidatorToQueue: function() {
	        this.validatorsInQueue++;
	        resolved = false;
	      },
	      removeValidatorFormQueue: function() {
	        this.validatorsInQueue = this.validatorsInQueue - 1 < 0 ? 0 : this.validatorsInQueue - 1;
	        this.checkIfQueueIsEmpty();
	      },
	      onQueueEmpty: function(valid) {},
	      checkIfQueueIsEmpty: function() {
	        if (this.validatorsInQueue == 0 && resolved == false) {
	          resolved = true;
	          this.onQueueEmpty(this.valid);
	        }
	      }
	    };
	  }
	  function validateChanges(changes, source, callback) {
	    var waitingForValidator = new ValidatorsQueue();
	    waitingForValidator.onQueueEmpty = resolve;
	    for (var i = changes.length - 1; i >= 0; i--) {
	      if (changes[i] === null) {
	        changes.splice(i, 1);
	      } else {
	        var row = changes[i][0];
	        var col = datamap.propToCol(changes[i][1]);
	        var logicalCol = instance.runHooks('modifyCol', col);
	        var cellProperties = instance.getCellMeta(row, logicalCol);
	        if (cellProperties.type === 'numeric' && typeof changes[i][3] === 'string') {
	          if (changes[i][3].length > 0 && (/^-?[\d\s]*(\.|\,)?\d*$/.test(changes[i][3]) || cellProperties.format)) {
	            var len = changes[i][3].length;
	            if (typeof cellProperties.language == 'undefined') {
	              numeral.language('en');
	            } else if (changes[i][3].indexOf('.') === len - 3 && changes[i][3].indexOf(',') === -1) {
	              numeral.language('en');
	            } else {
	              numeral.language(cellProperties.language);
	            }
	            if (numeral.validate(changes[i][3])) {
	              changes[i][3] = numeral().unformat(changes[i][3]);
	            }
	          }
	        }
	        if (instance.getCellValidator(cellProperties)) {
	          waitingForValidator.addValidatorToQueue();
	          instance.validateCell(changes[i][3], cellProperties, (function(i, cellProperties) {
	            return function(result) {
	              if (typeof result !== 'boolean') {
	                throw new Error('Validation error: result is not boolean');
	              }
	              if (result === false && cellProperties.allowInvalid === false) {
	                changes.splice(i, 1);
	                cellProperties.valid = true;
	                --i;
	              }
	              waitingForValidator.removeValidatorFormQueue();
	            };
	          })(i, cellProperties), source);
	        }
	      }
	    }
	    waitingForValidator.checkIfQueueIsEmpty();
	    function resolve() {
	      var beforeChangeResult;
	      if (changes.length) {
	        beforeChangeResult = Handsontable.hooks.run(instance, 'beforeChange', changes, source);
	        if (typeof beforeChangeResult === 'function') {
	          console.warn('Your beforeChange callback returns a function. It\'s not supported since Handsontable 0.12.1 (and the returned function will not be executed).');
	        } else if (beforeChangeResult === false) {
	          changes.splice(0, changes.length);
	        }
	      }
	      callback();
	    }
	  }
	  function applyChanges(changes, source) {
	    var i = changes.length - 1;
	    if (i < 0) {
	      return;
	    }
	    for (; 0 <= i; i--) {
	      if (changes[i] === null) {
	        changes.splice(i, 1);
	        continue;
	      }
	      if (changes[i][2] == null && changes[i][3] == null) {
	        continue;
	      }
	      if (priv.settings.allowInsertRow) {
	        while (changes[i][0] > instance.countRows() - 1) {
	          datamap.createRow();
	        }
	      }
	      if (instance.dataType === 'array' && priv.settings.allowInsertColumn) {
	        while (datamap.propToCol(changes[i][1]) > instance.countCols() - 1) {
	          datamap.createCol();
	        }
	      }
	      datamap.set(changes[i][0], changes[i][1], changes[i][3]);
	    }
	    instance.forceFullRender = true;
	    grid.adjustRowsAndCols();
	    Handsontable.hooks.run(instance, 'beforeChangeRender', changes, source);
	    selection.refreshBorders(null, true);
	    instance.view.wt.wtOverlays.adjustElementsSize();
	    Handsontable.hooks.run(instance, 'afterChange', changes, source || 'edit');
	  }
	  this.validateCell = function(value, cellProperties, callback, source) {
	    var validator = instance.getCellValidator(cellProperties);
	    function done(valid) {
	      var col = cellProperties.col,
	          row = cellProperties.row,
	          td = instance.getCell(row, col, true);
	      if (td) {
	        instance.view.wt.wtSettings.settings.cellRenderer(row, col, td);
	      }
	      callback(valid);
	    }
	    if (Object.prototype.toString.call(validator) === '[object RegExp]') {
	      validator = (function(validator) {
	        return function(value, callback) {
	          callback(validator.test(value));
	        };
	      })(validator);
	    }
	    if (typeof validator == 'function') {
	      value = Handsontable.hooks.run(instance, 'beforeValidate', value, cellProperties.row, cellProperties.prop, source);
	      instance._registerTimeout(setTimeout(function() {
	        validator.call(cellProperties, value, function(valid) {
	          valid = Handsontable.hooks.run(instance, 'afterValidate', valid, value, cellProperties.row, cellProperties.prop, source);
	          cellProperties.valid = valid;
	          done(valid);
	          Handsontable.hooks.run(instance, 'postAfterValidate', valid, value, cellProperties.row, cellProperties.prop, source);
	        });
	      }, 0));
	    } else {
	      cellProperties.valid = true;
	      done(cellProperties.valid);
	    }
	  };
	  function setDataInputToArray(row, propOrCol, value) {
	    if (typeof row === 'object') {
	      return row;
	    } else {
	      return [[row, propOrCol, value]];
	    }
	  }
	  this.setDataAtCell = function(row, col, value, source) {
	    var input = setDataInputToArray(row, col, value),
	        i,
	        ilen,
	        changes = [],
	        prop;
	    for (i = 0, ilen = input.length; i < ilen; i++) {
	      if (typeof input[i] !== 'object') {
	        throw new Error('Method `setDataAtCell` accepts row number or changes array of arrays as its first parameter');
	      }
	      if (typeof input[i][1] !== 'number') {
	        throw new Error('Method `setDataAtCell` accepts row and column number as its parameters. If you want to use object property name, use method `setDataAtRowProp`');
	      }
	      prop = datamap.colToProp(input[i][1]);
	      changes.push([input[i][0], prop, datamap.get(input[i][0], prop), input[i][2]]);
	    }
	    if (!source && typeof row === 'object') {
	      source = col;
	    }
	    validateChanges(changes, source, function() {
	      applyChanges(changes, source);
	    });
	  };
	  this.setDataAtRowProp = function(row, prop, value, source) {
	    var input = setDataInputToArray(row, prop, value),
	        i,
	        ilen,
	        changes = [];
	    for (i = 0, ilen = input.length; i < ilen; i++) {
	      changes.push([input[i][0], input[i][1], datamap.get(input[i][0], input[i][1]), input[i][2]]);
	    }
	    if (!source && typeof row === 'object') {
	      source = prop;
	    }
	    validateChanges(changes, source, function() {
	      applyChanges(changes, source);
	    });
	  };
	  this.listen = function() {
	    Handsontable.activeGuid = instance.guid;
	    if (document.activeElement && document.activeElement !== document.body) {
	      document.activeElement.blur();
	    } else if (!document.activeElement) {
	      document.body.focus();
	    }
	  };
	  this.unlisten = function() {
	    Handsontable.activeGuid = null;
	  };
	  this.isListening = function() {
	    return Handsontable.activeGuid === instance.guid;
	  };
	  this.destroyEditor = function(revertOriginal) {
	    selection.refreshBorders(revertOriginal);
	  };
	  this.populateFromArray = function(row, col, input, endRow, endCol, source, method, direction, deltas) {
	    var c;
	    if (!(typeof input === 'object' && typeof input[0] === 'object')) {
	      throw new Error('populateFromArray parameter `input` must be an array of arrays');
	    }
	    c = typeof endRow === 'number' ? new WalkontableCellCoords(endRow, endCol) : null;
	    return grid.populateFromArray(new WalkontableCellCoords(row, col), input, c, source, method, direction, deltas);
	  };
	  this.spliceCol = function(col, index, amount) {
	    return datamap.spliceCol.apply(datamap, arguments);
	  };
	  this.spliceRow = function(row, index, amount) {
	    return datamap.spliceRow.apply(datamap, arguments);
	  };
	  this.getSelected = function() {
	    if (selection.isSelected()) {
	      return [priv.selRange.from.row, priv.selRange.from.col, priv.selRange.to.row, priv.selRange.to.col];
	    }
	  };
	  this.getSelectedRange = function() {
	    if (selection.isSelected()) {
	      return priv.selRange;
	    }
	  };
	  this.render = function() {
	    if (instance.view) {
	      instance.renderCall = true;
	      instance.forceFullRender = true;
	      selection.refreshBorders(null, true);
	    }
	  };
	  this.loadData = function(data) {
	    if (typeof data === 'object' && data !== null) {
	      if (!(data.push && data.splice)) {
	        data = [data];
	      }
	    } else if (data === null) {
	      data = [];
	      var row;
	      for (var r = 0,
	          rlen = priv.settings.startRows; r < rlen; r++) {
	        row = [];
	        for (var c = 0,
	            clen = priv.settings.startCols; c < clen; c++) {
	          row.push(null);
	        }
	        data.push(row);
	      }
	    } else {
	      throw new Error('loadData only accepts array of objects or array of arrays (' + typeof data + ' given)');
	    }
	    priv.isPopulated = false;
	    GridSettings.prototype.data = data;
	    if (Array.isArray(priv.settings.dataSchema) || Array.isArray(data[0])) {
	      instance.dataType = 'array';
	    } else if (typeof priv.settings.dataSchema === 'function') {
	      instance.dataType = 'function';
	    } else {
	      instance.dataType = 'object';
	    }
	    datamap = new DataMap(instance, priv, GridSettings);
	    clearCellSettingCache();
	    grid.adjustRowsAndCols();
	    Handsontable.hooks.run(instance, 'afterLoadData');
	    if (priv.firstRun) {
	      priv.firstRun = [null, 'loadData'];
	    } else {
	      Handsontable.hooks.run(instance, 'afterChange', null, 'loadData');
	      instance.render();
	    }
	    priv.isPopulated = true;
	    function clearCellSettingCache() {
	      priv.cellSettings.length = 0;
	    }
	  };
	  this.getData = function(r, c, r2, c2) {
	    if (typeof r === 'undefined') {
	      return datamap.getAll();
	    } else {
	      return datamap.getRange(new WalkontableCellCoords(r, c), new WalkontableCellCoords(r2, c2), datamap.DESTINATION_RENDERER);
	    }
	  };
	  this.getCopyableText = function(startRow, startCol, endRow, endCol) {
	    return datamap.getCopyableText(new WalkontableCellCoords(startRow, startCol), new WalkontableCellCoords(endRow, endCol));
	  };
	  this.getCopyableData = function(row, column) {
	    return datamap.getCopyable(row, datamap.colToProp(column));
	  };
	  this.getSchema = function() {
	    return datamap.getSchema();
	  };
	  this.updateSettings = function(settings, init) {
	    var i,
	        clen;
	    if (typeof settings.rows !== 'undefined') {
	      throw new Error('"rows" setting is no longer supported. do you mean startRows, minRows or maxRows?');
	    }
	    if (typeof settings.cols !== 'undefined') {
	      throw new Error('"cols" setting is no longer supported. do you mean startCols, minCols or maxCols?');
	    }
	    for (i in settings) {
	      if (i === 'data') {
	        continue;
	      } else {
	        if (Handsontable.hooks.getRegistered().indexOf(i) > -1) {
	          if (typeof settings[i] === 'function' || Array.isArray(settings[i])) {
	            instance.addHook(i, settings[i]);
	          }
	        } else {
	          if (!init && settings.hasOwnProperty(i)) {
	            GridSettings.prototype[i] = settings[i];
	          }
	        }
	      }
	    }
	    if (settings.data === void 0 && priv.settings.data === void 0) {
	      instance.loadData(null);
	    } else if (settings.data !== void 0) {
	      instance.loadData(settings.data);
	    } else if (settings.columns !== void 0) {
	      datamap.createMap();
	    }
	    clen = instance.countCols();
	    priv.cellSettings.length = 0;
	    if (clen > 0) {
	      var proto,
	          column;
	      for (i = 0; i < clen; i++) {
	        priv.columnSettings[i] = columnFactory(GridSettings, priv.columnsSettingConflicts);
	        proto = priv.columnSettings[i].prototype;
	        if (GridSettings.prototype.columns) {
	          column = GridSettings.prototype.columns[i];
	          extend(proto, column);
	          extend(proto, expandType(column));
	        }
	      }
	    }
	    if (typeof settings.cell !== 'undefined') {
	      for (i in settings.cell) {
	        if (settings.cell.hasOwnProperty(i)) {
	          var cell = settings.cell[i];
	          instance.setCellMetaObject(cell.row, cell.col, cell);
	        }
	      }
	    }
	    Handsontable.hooks.run(instance, 'afterCellMetaReset');
	    if (typeof settings.className !== 'undefined') {
	      if (GridSettings.prototype.className) {
	        removeClass(instance.rootElement, GridSettings.prototype.className);
	      }
	      if (settings.className) {
	        addClass(instance.rootElement, settings.className);
	      }
	    }
	    if (typeof settings.height != 'undefined') {
	      var height = settings.height;
	      if (typeof height == 'function') {
	        height = height();
	      }
	      instance.rootElement.style.height = height + 'px';
	    }
	    if (typeof settings.width != 'undefined') {
	      var width = settings.width;
	      if (typeof width == 'function') {
	        width = width();
	      }
	      instance.rootElement.style.width = width + 'px';
	    }
	    if (height) {
	      instance.rootElement.style.overflow = 'hidden';
	    }
	    if (!init) {
	      Handsontable.hooks.run(instance, 'afterUpdateSettings');
	    }
	    grid.adjustRowsAndCols();
	    if (instance.view && !priv.firstRun) {
	      instance.forceFullRender = true;
	      selection.refreshBorders(null, true);
	    }
	  };
	  this.getValue = function() {
	    var sel = instance.getSelected();
	    if (GridSettings.prototype.getValue) {
	      if (typeof GridSettings.prototype.getValue === 'function') {
	        return GridSettings.prototype.getValue.call(instance);
	      } else if (sel) {
	        return instance.getData()[sel[0]][GridSettings.prototype.getValue];
	      }
	    } else if (sel) {
	      return instance.getDataAtCell(sel[0], sel[1]);
	    }
	  };
	  function expandType(obj) {
	    if (!obj.hasOwnProperty('type')) {
	      return;
	    }
	    var type,
	        expandedType = {};
	    if (typeof obj.type === 'object') {
	      type = obj.type;
	    } else if (typeof obj.type === 'string') {
	      type = Handsontable.cellTypes[obj.type];
	      if (type === void 0) {
	        throw new Error('You declared cell type "' + obj.type + '" as a string that is not mapped to a known object. Cell type must be an object or a string mapped to an object in Handsontable.cellTypes');
	      }
	    }
	    for (var i in type) {
	      if (type.hasOwnProperty(i) && !obj.hasOwnProperty(i)) {
	        expandedType[i] = type[i];
	      }
	    }
	    return expandedType;
	  }
	  this.getSettings = function() {
	    return priv.settings;
	  };
	  this.clear = function() {
	    selection.selectAll();
	    selection.empty();
	  };
	  this.alter = function(action, index, amount, source, keepEmptyRows) {
	    grid.alter(action, index, amount, source, keepEmptyRows);
	  };
	  this.getCell = function(row, col, topmost) {
	    return instance.view.getCellAtCoords(new WalkontableCellCoords(row, col), topmost);
	  };
	  this.getCoords = function(elem) {
	    return this.view.wt.wtTable.getCoords.call(this.view.wt.wtTable, elem);
	  };
	  this.colToProp = function(col) {
	    return datamap.colToProp(col);
	  };
	  this.propToCol = function(prop) {
	    return datamap.propToCol(prop);
	  };
	  this.getDataAtCell = function(row, col) {
	    return datamap.get(row, datamap.colToProp(col));
	  };
	  this.getDataAtRowProp = function(row, prop) {
	    return datamap.get(row, prop);
	  };
	  this.getDataAtCol = function(col) {
	    var out = [];
	    return out.concat.apply(out, datamap.getRange(new WalkontableCellCoords(0, col), new WalkontableCellCoords(priv.settings.data.length - 1, col), datamap.DESTINATION_RENDERER));
	  };
	  this.getDataAtProp = function(prop) {
	    var out = [],
	        range;
	    range = datamap.getRange(new WalkontableCellCoords(0, datamap.propToCol(prop)), new WalkontableCellCoords(priv.settings.data.length - 1, datamap.propToCol(prop)), datamap.DESTINATION_RENDERER);
	    return out.concat.apply(out, range);
	  };
	  this.getSourceDataAtCol = function(col) {
	    var out = [],
	        data = priv.settings.data;
	    for (var i = 0; i < data.length; i++) {
	      out.push(data[i][col]);
	    }
	    return out;
	  };
	  this.getSourceDataAtRow = function(row) {
	    return priv.settings.data[row];
	  };
	  this.getDataAtRow = function(row) {
	    var data = datamap.getRange(new WalkontableCellCoords(row, 0), new WalkontableCellCoords(row, this.countCols() - 1), datamap.DESTINATION_RENDERER);
	    return data[0];
	  };
	  this.getDataType = function(rowFrom, columnFrom, rowTo, columnTo) {
	    var $__18 = this;
	    var previousType = null;
	    var currentType = null;
	    if (rowFrom === void 0) {
	      rowFrom = 0;
	      rowTo = this.countRows();
	      columnFrom = 0;
	      columnTo = this.countCols();
	    }
	    if (rowTo === void 0) {
	      rowTo = rowFrom;
	    }
	    if (columnTo === void 0) {
	      columnTo = columnFrom;
	    }
	    var type = 'mixed';
	    rangeEach(Math.min(rowFrom, rowTo), Math.max(rowFrom, rowTo), (function(row) {
	      var isTypeEqual = true;
	      rangeEach(Math.min(columnFrom, columnTo), Math.max(columnFrom, columnTo), (function(column) {
	        var cellType = $__18.getCellMeta(row, column);
	        currentType = cellType.type;
	        if (previousType) {
	          isTypeEqual = previousType === currentType;
	        } else {
	          previousType = currentType;
	        }
	        return isTypeEqual;
	      }));
	      type = isTypeEqual ? currentType : 'mixed';
	      return isTypeEqual;
	    }));
	    return type;
	  };
	  this.removeCellMeta = function(row, col, key) {
	    var cellMeta = instance.getCellMeta(row, col);
	    if (cellMeta[key] != undefined) {
	      delete priv.cellSettings[row][col][key];
	    }
	  };
	  this.setCellMetaObject = function(row, col, prop) {
	    if (typeof prop === 'object') {
	      for (var key in prop) {
	        if (prop.hasOwnProperty(key)) {
	          var value = prop[key];
	          this.setCellMeta(row, col, key, value);
	        }
	      }
	    }
	  };
	  this.setCellMeta = function(row, col, key, val) {
	    if (!priv.cellSettings[row]) {
	      priv.cellSettings[row] = [];
	    }
	    if (!priv.cellSettings[row][col]) {
	      priv.cellSettings[row][col] = new priv.columnSettings[col]();
	    }
	    priv.cellSettings[row][col][key] = val;
	    Handsontable.hooks.run(instance, 'afterSetCellMeta', row, col, key, val);
	  };
	  this.getCellsMeta = function() {
	    return arrayFlatten(priv.cellSettings);
	  };
	  this.getCellMeta = function(row, col) {
	    var prop = datamap.colToProp(col),
	        cellProperties;
	    row = translateRowIndex(row);
	    col = translateColIndex(col);
	    if (!priv.columnSettings[col]) {
	      priv.columnSettings[col] = columnFactory(GridSettings, priv.columnsSettingConflicts);
	    }
	    if (!priv.cellSettings[row]) {
	      priv.cellSettings[row] = [];
	    }
	    if (!priv.cellSettings[row][col]) {
	      priv.cellSettings[row][col] = new priv.columnSettings[col]();
	    }
	    cellProperties = priv.cellSettings[row][col];
	    cellProperties.row = row;
	    cellProperties.col = col;
	    cellProperties.prop = prop;
	    cellProperties.instance = instance;
	    Handsontable.hooks.run(instance, 'beforeGetCellMeta', row, col, cellProperties);
	    extend(cellProperties, expandType(cellProperties));
	    if (cellProperties.cells) {
	      var settings = cellProperties.cells.call(cellProperties, row, col, prop);
	      if (settings) {
	        extend(cellProperties, settings);
	        extend(cellProperties, expandType(settings));
	      }
	    }
	    Handsontable.hooks.run(instance, 'afterGetCellMeta', row, col, cellProperties);
	    return cellProperties;
	  };
	  this.isColumnModificationAllowed = function() {
	    return !(instance.dataType === 'object' || instance.getSettings().columns);
	  };
	  function translateRowIndex(row) {
	    return Handsontable.hooks.run(instance, 'modifyRow', row);
	  }
	  function translateColIndex(col) {
	    return Handsontable.hooks.run(instance, 'modifyCol', col);
	  }
	  var rendererLookup = cellMethodLookupFactory('renderer');
	  this.getCellRenderer = function(row, col) {
	    var renderer = rendererLookup.call(this, row, col);
	    return getRenderer(renderer);
	  };
	  this.getCellEditor = cellMethodLookupFactory('editor');
	  this.getCellValidator = cellMethodLookupFactory('validator');
	  this.validateCells = function(callback) {
	    var waitingForValidator = new ValidatorsQueue();
	    waitingForValidator.onQueueEmpty = callback;
	    var i = instance.countRows() - 1;
	    while (i >= 0) {
	      var j = instance.countCols() - 1;
	      while (j >= 0) {
	        waitingForValidator.addValidatorToQueue();
	        instance.validateCell(instance.getDataAtCell(i, j), instance.getCellMeta(i, j), function(result) {
	          if (typeof result !== 'boolean') {
	            throw new Error('Validation error: result is not boolean');
	          }
	          if (result === false) {
	            waitingForValidator.valid = false;
	          }
	          waitingForValidator.removeValidatorFormQueue();
	        }, 'validateCells');
	        j--;
	      }
	      i--;
	    }
	    waitingForValidator.checkIfQueueIsEmpty();
	  };
	  this.getRowHeader = function(row) {
	    if (row === void 0) {
	      var out = [];
	      for (var i = 0,
	          ilen = instance.countRows(); i < ilen; i++) {
	        out.push(instance.getRowHeader(i));
	      }
	      return out;
	    } else if (Array.isArray(priv.settings.rowHeaders) && priv.settings.rowHeaders[row] !== void 0) {
	      return priv.settings.rowHeaders[row];
	    } else if (typeof priv.settings.rowHeaders === 'function') {
	      return priv.settings.rowHeaders(row);
	    } else if (priv.settings.rowHeaders && typeof priv.settings.rowHeaders !== 'string' && typeof priv.settings.rowHeaders !== 'number') {
	      return row + 1;
	    } else {
	      return priv.settings.rowHeaders;
	    }
	  };
	  this.hasRowHeaders = function() {
	    return !!priv.settings.rowHeaders;
	  };
	  this.hasColHeaders = function() {
	    if (priv.settings.colHeaders !== void 0 && priv.settings.colHeaders !== null) {
	      return !!priv.settings.colHeaders;
	    }
	    for (var i = 0,
	        ilen = instance.countCols(); i < ilen; i++) {
	      if (instance.getColHeader(i)) {
	        return true;
	      }
	    }
	    return false;
	  };
	  this.getColHeader = function(col) {
	    if (col === void 0) {
	      var out = [];
	      for (var i = 0,
	          ilen = instance.countCols(); i < ilen; i++) {
	        out.push(instance.getColHeader(i));
	      }
	      return out;
	    } else {
	      var baseCol = col;
	      col = Handsontable.hooks.run(instance, 'modifyCol', col);
	      if (priv.settings.columns && priv.settings.columns[col] && priv.settings.columns[col].title) {
	        return priv.settings.columns[col].title;
	      } else if (Array.isArray(priv.settings.colHeaders) && priv.settings.colHeaders[col] !== void 0) {
	        return priv.settings.colHeaders[col];
	      } else if (typeof priv.settings.colHeaders === 'function') {
	        return priv.settings.colHeaders(col);
	      } else if (priv.settings.colHeaders && typeof priv.settings.colHeaders !== 'string' && typeof priv.settings.colHeaders !== 'number') {
	        return spreadsheetColumnLabel(baseCol);
	      } else {
	        return priv.settings.colHeaders;
	      }
	    }
	  };
	  this._getColWidthFromSettings = function(col) {
	    var cellProperties = instance.getCellMeta(0, col);
	    var width = cellProperties.width;
	    if (width === void 0 || width === priv.settings.width) {
	      width = cellProperties.colWidths;
	    }
	    if (width !== void 0 && width !== null) {
	      switch (typeof width) {
	        case 'object':
	          width = width[col];
	          break;
	        case 'function':
	          width = width(col);
	          break;
	      }
	      if (typeof width === 'string') {
	        width = parseInt(width, 10);
	      }
	    }
	    return width;
	  };
	  this.getColWidth = function(col) {
	    var width = instance._getColWidthFromSettings(col);
	    width = Handsontable.hooks.run(instance, 'modifyColWidth', width, col);
	    if (width === void 0) {
	      width = WalkontableViewportColumnsCalculator.DEFAULT_WIDTH;
	    }
	    return width;
	  };
	  this._getRowHeightFromSettings = function(row) {
	    var height = priv.settings.rowHeights;
	    if (height !== void 0 && height !== null) {
	      switch (typeof height) {
	        case 'object':
	          height = height[row];
	          break;
	        case 'function':
	          height = height(row);
	          break;
	      }
	      if (typeof height === 'string') {
	        height = parseInt(height, 10);
	      }
	    }
	    return height;
	  };
	  this.getRowHeight = function(row) {
	    var height = instance._getRowHeightFromSettings(row);
	    height = Handsontable.hooks.run(instance, 'modifyRowHeight', height, row);
	    return height;
	  };
	  this.countRows = function() {
	    return priv.settings.data.length;
	  };
	  this.countCols = function() {
	    if (instance.dataType === 'object' || instance.dataType === 'function') {
	      if (priv.settings.columns && priv.settings.columns.length) {
	        return priv.settings.columns.length;
	      } else {
	        return datamap.colToPropCache.length;
	      }
	    } else if (instance.dataType === 'array') {
	      if (priv.settings.columns && priv.settings.columns.length) {
	        return priv.settings.columns.length;
	      } else if (priv.settings.data && priv.settings.data[0] && priv.settings.data[0].length) {
	        return priv.settings.data[0].length;
	      } else {
	        return 0;
	      }
	    }
	  };
	  this.getColspanOffset = function(col, level) {
	    var colspanSum = 0;
	    if (instance.colspanArray) {
	      for (var i = 0; i < col; i++) {
	        colspanSum += instance.colspanArray[level][i] - 1 || 0;
	      }
	      return colspanSum;
	    }
	    var colspanSum = 0;
	    var TRindex = instance.view.wt.wtTable.THEAD.childNodes.length - level - 1;
	    var TR = instance.view.wt.wtTable.THEAD.querySelector('tr:nth-child(' + parseInt(TRindex + 1, 10) + ')');
	    var rowHeadersCount = instance.view.wt.wtSettings.settings.rowHeaders().length;
	    for (var i = rowHeadersCount; i < rowHeadersCount + col; i++) {
	      if (TR.childNodes[i].hasAttribute('colspan')) {
	        colspanSum += parseInt(TR.childNodes[i].getAttribute('colspan'), 10) - 1;
	      }
	    }
	    return colspanSum;
	  };
	  this.getHeaderColspan = function(col, level) {
	    var TRindex = instance.view.wt.wtTable.THEAD.childNodes.length - level - 1;
	    var rowHeadersCount = instance.view.wt.wtSettings.settings.rowHeaders().length;
	    var TR = instance.view.wt.wtTable.THEAD.querySelector('tr:nth-child(' + parseInt(TRindex + 1, 10) + ')');
	    var offsettedColIndex = rowHeadersCount + col - instance.view.wt.wtViewport.columnsRenderCalculator.startColumn;
	    if (TR.childNodes[offsettedColIndex].hasAttribute('colspan')) {
	      return parseInt(TR.childNodes[offsettedColIndex].getAttribute('colspan'), 10);
	    }
	    return 0;
	  };
	  this.rowOffset = function() {
	    return instance.view.wt.wtTable.getFirstRenderedRow();
	  };
	  this.colOffset = function() {
	    return instance.view.wt.wtTable.getFirstRenderedColumn();
	  };
	  this.countRenderedRows = function() {
	    return instance.view.wt.drawn ? instance.view.wt.wtTable.getRenderedRowsCount() : -1;
	  };
	  this.countVisibleRows = function() {
	    return instance.view.wt.drawn ? instance.view.wt.wtTable.getVisibleRowsCount() : -1;
	  };
	  this.countRenderedCols = function() {
	    return instance.view.wt.drawn ? instance.view.wt.wtTable.getRenderedColumnsCount() : -1;
	  };
	  this.countVisibleCols = function() {
	    return instance.view.wt.drawn ? instance.view.wt.wtTable.getVisibleColumnsCount() : -1;
	  };
	  this.countEmptyRows = function(ending) {
	    var i = instance.countRows() - 1,
	        empty = 0,
	        row;
	    while (i >= 0) {
	      row = Handsontable.hooks.run(this, 'modifyRow', i);
	      if (instance.isEmptyRow(row)) {
	        empty++;
	      } else if (ending) {
	        break;
	      }
	      i--;
	    }
	    return empty;
	  };
	  this.countEmptyCols = function(ending) {
	    if (instance.countRows() < 1) {
	      return 0;
	    }
	    var i = instance.countCols() - 1,
	        empty = 0;
	    while (i >= 0) {
	      if (instance.isEmptyCol(i)) {
	        empty++;
	      } else if (ending) {
	        break;
	      }
	      i--;
	    }
	    return empty;
	  };
	  this.isEmptyRow = function(row) {
	    return priv.settings.isEmptyRow.call(instance, row);
	  };
	  this.isEmptyCol = function(col) {
	    return priv.settings.isEmptyCol.call(instance, col);
	  };
	  this.selectCell = function(row, col, endRow, endCol, scrollToCell, changeListener) {
	    var coords;
	    changeListener = typeof changeListener === 'undefined' || changeListener === true;
	    if (typeof row !== 'number' || row < 0 || row >= instance.countRows()) {
	      return false;
	    }
	    if (typeof col !== 'number' || col < 0 || col >= instance.countCols()) {
	      return false;
	    }
	    if (typeof endRow !== 'undefined') {
	      if (typeof endRow !== 'number' || endRow < 0 || endRow >= instance.countRows()) {
	        return false;
	      }
	      if (typeof endCol !== 'number' || endCol < 0 || endCol >= instance.countCols()) {
	        return false;
	      }
	    }
	    coords = new WalkontableCellCoords(row, col);
	    priv.selRange = new WalkontableCellRange(coords, coords, coords);
	    if (document.activeElement && document.activeElement !== document.documentElement && document.activeElement !== document.body) {
	      document.activeElement.blur();
	    }
	    if (changeListener) {
	      instance.listen();
	    }
	    if (typeof endRow === 'undefined') {
	      selection.setRangeEnd(priv.selRange.from, scrollToCell);
	    } else {
	      selection.setRangeEnd(new WalkontableCellCoords(endRow, endCol), scrollToCell);
	    }
	    instance.selection.finish();
	    return true;
	  };
	  this.selectCellByProp = function(row, prop, endRow, endProp, scrollToCell) {
	    arguments[1] = datamap.propToCol(arguments[1]);
	    if (typeof arguments[3] !== 'undefined') {
	      arguments[3] = datamap.propToCol(arguments[3]);
	    }
	    return instance.selectCell.apply(instance, arguments);
	  };
	  this.deselectCell = function() {
	    selection.deselect();
	  };
	  this.destroy = function() {
	    instance._clearTimeouts();
	    if (instance.view) {
	      instance.view.destroy();
	    }
	    empty(instance.rootElement);
	    eventManager.destroy();
	    Handsontable.hooks.run(instance, 'afterDestroy');
	    Handsontable.hooks.destroy(instance);
	    for (var i in instance) {
	      if (instance.hasOwnProperty(i)) {
	        if (typeof instance[i] === 'function') {
	          instance[i] = postMortem;
	        } else if (i !== 'guid') {
	          instance[i] = null;
	        }
	      }
	    }
	    priv = null;
	    datamap = null;
	    grid = null;
	    selection = null;
	    editorManager = null;
	    instance = null;
	    GridSettings = null;
	  };
	  function postMortem() {
	    throw new Error('This method cannot be called because this Handsontable instance has been destroyed');
	  }
	  this.getActiveEditor = function() {
	    return editorManager.getActiveEditor();
	  };
	  this.getPlugin = function(pluginName) {
	    return getPlugin(this, pluginName);
	  };
	  this.getInstance = function() {
	    return instance;
	  };
	  this.addHook = function(key, callback) {
	    Handsontable.hooks.add(key, callback, instance);
	  };
	  this.addHookOnce = function(key, callback) {
	    Handsontable.hooks.once(key, callback, instance);
	  };
	  this.removeHook = function(key, callback) {
	    Handsontable.hooks.remove(key, callback, instance);
	  };
	  this.runHooks = function(key, p1, p2, p3, p4, p5, p6) {
	    return Handsontable.hooks.run(instance, key, p1, p2, p3, p4, p5, p6);
	  };
	  this.timeouts = [];
	  this._registerTimeout = function(handle) {
	    this.timeouts.push(handle);
	  };
	  this._clearTimeouts = function() {
	    for (var i = 0,
	        ilen = this.timeouts.length; i < ilen; i++) {
	      clearTimeout(this.timeouts[i]);
	    }
	  };
	  this.version = Handsontable.version;
	  Handsontable.hooks.run(instance, 'construct');
	};
	var DefaultSettings = function() {};
	DefaultSettings.prototype = {
	  data: void 0,
	  dataSchema: void 0,
	  width: void 0,
	  height: void 0,
	  startRows: 5,
	  startCols: 5,
	  rowHeaders: null,
	  colHeaders: null,
	  colWidths: void 0,
	  columns: void 0,
	  cells: void 0,
	  cell: [],
	  comments: false,
	  customBorders: false,
	  minRows: 0,
	  minCols: 0,
	  maxRows: Infinity,
	  maxCols: Infinity,
	  minSpareRows: 0,
	  minSpareCols: 0,
	  allowInsertRow: true,
	  allowInsertColumn: true,
	  allowRemoveRow: true,
	  allowRemoveColumn: true,
	  multiSelect: true,
	  fillHandle: true,
	  fixedRowsTop: 0,
	  fixedRowsBottom: 0,
	  fixedColumnsLeft: 0,
	  outsideClickDeselects: true,
	  enterBeginsEditing: true,
	  enterMoves: {
	    row: 1,
	    col: 0
	  },
	  tabMoves: {
	    row: 0,
	    col: 1
	  },
	  autoWrapRow: false,
	  autoWrapCol: false,
	  copyRowsLimit: 1000,
	  copyColsLimit: 1000,
	  pasteMode: 'overwrite',
	  persistentState: false,
	  currentRowClassName: void 0,
	  currentColClassName: void 0,
	  className: void 0,
	  tableClassName: void 0,
	  stretchH: 'none',
	  isEmptyRow: function(row) {
	    var col,
	        colLen,
	        value,
	        meta;
	    for (col = 0, colLen = this.countCols(); col < colLen; col++) {
	      value = this.getDataAtCell(row, col);
	      if (value !== '' && value !== null && typeof value !== 'undefined') {
	        if (typeof value === 'object') {
	          meta = this.getCellMeta(row, col);
	          return isObjectEquals(this.getSchema()[meta.prop], value);
	        }
	        return false;
	      }
	    }
	    return true;
	  },
	  isEmptyCol: function(col) {
	    var row,
	        rowLen,
	        value;
	    for (row = 0, rowLen = this.countRows(); row < rowLen; row++) {
	      value = this.getDataAtCell(row, col);
	      if (value !== '' && value !== null && typeof value !== 'undefined') {
	        return false;
	      }
	    }
	    return true;
	  },
	  observeDOMVisibility: true,
	  allowInvalid: true,
	  invalidCellClassName: 'htInvalid',
	  placeholder: false,
	  placeholderCellClassName: 'htPlaceholder',
	  readOnlyCellClassName: 'htDimmed',
	  renderer: void 0,
	  commentedCellClassName: 'htCommentCell',
	  fragmentSelection: false,
	  readOnly: false,
	  skipColumnOnPaste: false,
	  search: false,
	  type: 'text',
	  copyable: true,
	  editor: void 0,
	  autoComplete: void 0,
	  visibleRows: 10,
	  trimDropdown: true,
	  debug: false,
	  wordWrap: true,
	  noWordWrapClassName: 'htNoWrap',
	  contextMenu: void 0,
	  contextMenuCopyPaste: void 0,
	  copyPaste: void 0,
	  undo: void 0,
	  columnSorting: void 0,
	  manualColumnMove: void 0,
	  manualColumnResize: void 0,
	  manualRowMove: void 0,
	  manualRowResize: void 0,
	  mergeCells: false,
	  viewportRowRenderingOffset: 'auto',
	  viewportColumnRenderingOffset: 'auto',
	  validator: void 0,
	  disableVisualSelection: false,
	  sortIndicator: false,
	  manualColumnFreeze: void 0,
	  trimWhitespace: true,
	  settings: void 0,
	  source: void 0,
	  title: void 0,
	  checkedTemplate: void 0,
	  uncheckedTemplate: void 0,
	  label: void 0,
	  format: void 0,
	  language: void 0,
	  selectOptions: void 0,
	  autoColumnSize: void 0,
	  autoRowSize: void 0,
	  dateFormat: void 0,
	  correctFormat: false,
	  defaultDate: void 0,
	  strict: void 0,
	  renderAllRows: void 0
	};
	Handsontable.DefaultSettings = DefaultSettings;

	//# 
	},{"3rdparty/walkontable/src/calculator/viewportColumns":3,"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/selection":18,"dataMap":26,"editorManager":27,"eventManager":40,"helpers/array":41,"helpers/data":43,"helpers/dom/element":44,"helpers/number":48,"helpers/object":49,"helpers/setting":50,"helpers/string":51,"numeral":"numeral","plugins":55,"renderers":86,"tableView":95}],26:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  DataMap: {get: function() {
	      return DataMap;
	    }},
	  __esModule: {value: true}
	});
	var $__SheetClip__,
	    $__helpers_47_data__,
	    $__helpers_47_setting__,
	    $__helpers_47_object__,
	    $__helpers_47_array__,
	    $__multiMap__;
	var SheetClip = ($__SheetClip__ = require("SheetClip"), $__SheetClip__ && $__SheetClip__.__esModule && $__SheetClip__ || {default: $__SheetClip__}).default;
	var cellMethodLookupFactory = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__}).cellMethodLookupFactory;
	var columnFactory = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__}).columnFactory;
	var $__3 = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}),
	    duckSchema = $__3.duckSchema,
	    deepExtend = $__3.deepExtend;
	var $__4 = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__}),
	    extendArray = $__4.extendArray,
	    to2dArray = $__4.to2dArray;
	var MultiMap = ($__multiMap__ = require("multiMap"), $__multiMap__ && $__multiMap__.__esModule && $__multiMap__ || {default: $__multiMap__}).MultiMap;
	function DataMap(instance, priv, GridSettings) {
	  this.instance = instance;
	  this.priv = priv;
	  this.GridSettings = GridSettings;
	  this.dataSource = this.instance.getSettings().data;
	  if (this.dataSource[0]) {
	    this.duckSchema = this.recursiveDuckSchema(this.dataSource[0]);
	  } else {
	    this.duckSchema = {};
	  }
	  this.createMap();
	}
	DataMap.prototype.DESTINATION_RENDERER = 1;
	DataMap.prototype.DESTINATION_CLIPBOARD_GENERATOR = 2;
	DataMap.prototype.recursiveDuckSchema = function(object) {
	  return duckSchema(object);
	};
	DataMap.prototype.recursiveDuckColumns = function(schema, lastCol, parent) {
	  var prop,
	      i;
	  if (typeof lastCol === 'undefined') {
	    lastCol = 0;
	    parent = '';
	  }
	  if (typeof schema === 'object' && !Array.isArray(schema)) {
	    for (i in schema) {
	      if (schema.hasOwnProperty(i)) {
	        if (schema[i] === null) {
	          prop = parent + i;
	          this.colToPropCache.push(prop);
	          this.propToColCache.set(prop, lastCol);
	          lastCol++;
	        } else {
	          lastCol = this.recursiveDuckColumns(schema[i], lastCol, i + '.');
	        }
	      }
	    }
	  }
	  return lastCol;
	};
	DataMap.prototype.createMap = function() {
	  var i,
	      ilen,
	      schema = this.getSchema();
	  if (typeof schema === 'undefined') {
	    throw new Error('trying to create `columns` definition but you didnt\' provide `schema` nor `data`');
	  }
	  this.colToPropCache = [];
	  this.propToColCache = new MultiMap();
	  var columns = this.instance.getSettings().columns;
	  if (columns) {
	    for (i = 0, ilen = columns.length; i < ilen; i++) {
	      if (typeof columns[i].data != 'undefined') {
	        this.colToPropCache[i] = columns[i].data;
	        this.propToColCache.set(columns[i].data, i);
	      }
	    }
	  } else {
	    this.recursiveDuckColumns(schema);
	  }
	};
	DataMap.prototype.colToProp = function(col) {
	  col = Handsontable.hooks.run(this.instance, 'modifyCol', col);
	  if (this.colToPropCache && typeof this.colToPropCache[col] !== 'undefined') {
	    return this.colToPropCache[col];
	  }
	  return col;
	};
	DataMap.prototype.propToCol = function(prop) {
	  var col;
	  if (typeof this.propToColCache.get(prop) === 'undefined') {
	    col = prop;
	  } else {
	    col = this.propToColCache.get(prop);
	  }
	  col = Handsontable.hooks.run(this.instance, 'modifyCol', col);
	  return col;
	};
	DataMap.prototype.getSchema = function() {
	  var schema = this.instance.getSettings().dataSchema;
	  if (schema) {
	    if (typeof schema === 'function') {
	      return schema();
	    }
	    return schema;
	  }
	  return this.duckSchema;
	};
	DataMap.prototype.createRow = function(index, amount, createdAutomatically) {
	  var row,
	      colCount = this.instance.countCols(),
	      numberOfCreatedRows = 0,
	      currentIndex;
	  if (!amount) {
	    amount = 1;
	  }
	  if (typeof index !== 'number' || index >= this.instance.countRows()) {
	    index = this.instance.countRows();
	  }
	  currentIndex = index;
	  var maxRows = this.instance.getSettings().maxRows;
	  while (numberOfCreatedRows < amount && this.instance.countRows() < maxRows) {
	    if (this.instance.dataType === 'array') {
	      row = [];
	      for (var c = 0; c < colCount; c++) {
	        row.push(null);
	      }
	    } else if (this.instance.dataType === 'function') {
	      row = this.instance.getSettings().dataSchema(index);
	    } else {
	      row = {};
	      deepExtend(row, this.getSchema());
	    }
	    if (index === this.instance.countRows()) {
	      this.dataSource.push(row);
	    } else {
	      this.dataSource.splice(index, 0, row);
	    }
	    numberOfCreatedRows++;
	    currentIndex++;
	  }
	  Handsontable.hooks.run(this.instance, 'afterCreateRow', index, numberOfCreatedRows, createdAutomatically);
	  this.instance.forceFullRender = true;
	  return numberOfCreatedRows;
	};
	DataMap.prototype.createCol = function(index, amount, createdAutomatically) {
	  if (!this.instance.isColumnModificationAllowed()) {
	    throw new Error('Cannot create new column. When data source in an object, ' + 'you can only have as much columns as defined in first data row, data schema or in the \'columns\' setting.' + 'If you want to be able to add new columns, you have to use array datasource.');
	  }
	  var rlen = this.instance.countRows(),
	      data = this.dataSource,
	      constructor,
	      numberOfCreatedCols = 0,
	      currentIndex;
	  if (!amount) {
	    amount = 1;
	  }
	  currentIndex = index;
	  var maxCols = this.instance.getSettings().maxCols;
	  while (numberOfCreatedCols < amount && this.instance.countCols() < maxCols) {
	    constructor = columnFactory(this.GridSettings, this.priv.columnsSettingConflicts);
	    if (typeof index !== 'number' || index >= this.instance.countCols()) {
	      for (var r = 0; r < rlen; r++) {
	        if (typeof data[r] === 'undefined') {
	          data[r] = [];
	        }
	        data[r].push(null);
	      }
	      this.priv.columnSettings.push(constructor);
	    } else {
	      for (var r = 0; r < rlen; r++) {
	        data[r].splice(currentIndex, 0, null);
	      }
	      this.priv.columnSettings.splice(currentIndex, 0, constructor);
	    }
	    numberOfCreatedCols++;
	    currentIndex++;
	  }
	  Handsontable.hooks.run(this.instance, 'afterCreateCol', index, numberOfCreatedCols, createdAutomatically);
	  this.instance.forceFullRender = true;
	  return numberOfCreatedCols;
	};
	DataMap.prototype.removeRow = function(index, amount) {
	  if (!amount) {
	    amount = 1;
	  }
	  if (typeof index !== 'number') {
	    index = -amount;
	  }
	  index = (this.instance.countRows() + index) % this.instance.countRows();
	  var logicRows = this.physicalRowsToLogical(index, amount);
	  var actionWasNotCancelled = Handsontable.hooks.run(this.instance, 'beforeRemoveRow', index, amount);
	  if (actionWasNotCancelled === false) {
	    return;
	  }
	  var data = this.dataSource;
	  var newData = data.filter(function(row, index) {
	    return logicRows.indexOf(index) == -1;
	  });
	  data.length = 0;
	  Array.prototype.push.apply(data, newData);
	  Handsontable.hooks.run(this.instance, 'afterRemoveRow', index, amount);
	  this.instance.forceFullRender = true;
	};
	DataMap.prototype.removeCol = function(index, amount) {
	  if (this.instance.dataType === 'object' || this.instance.getSettings().columns) {
	    throw new Error('cannot remove column with object data source or columns option specified');
	  }
	  if (!amount) {
	    amount = 1;
	  }
	  if (typeof index !== 'number') {
	    index = -amount;
	  }
	  index = (this.instance.countCols() + index) % this.instance.countCols();
	  var actionWasNotCancelled = Handsontable.hooks.run(this.instance, 'beforeRemoveCol', index, amount);
	  if (actionWasNotCancelled === false) {
	    return;
	  }
	  var data = this.dataSource;
	  for (var r = 0,
	      rlen = this.instance.countRows(); r < rlen; r++) {
	    data[r].splice(index, amount);
	  }
	  this.priv.columnSettings.splice(index, amount);
	  Handsontable.hooks.run(this.instance, 'afterRemoveCol', index, amount);
	  this.instance.forceFullRender = true;
	};
	DataMap.prototype.spliceCol = function(col, index, amount) {
	  var elements = 4 <= arguments.length ? [].slice.call(arguments, 3) : [];
	  var colData = this.instance.getDataAtCol(col);
	  var removed = colData.slice(index, index + amount);
	  var after = colData.slice(index + amount);
	  extendArray(elements, after);
	  var i = 0;
	  while (i < amount) {
	    elements.push(null);
	    i++;
	  }
	  to2dArray(elements);
	  this.instance.populateFromArray(index, col, elements, null, null, 'spliceCol');
	  return removed;
	};
	DataMap.prototype.spliceRow = function(row, index, amount) {
	  var elements = 4 <= arguments.length ? [].slice.call(arguments, 3) : [];
	  var rowData = this.instance.getSourceDataAtRow(row);
	  var removed = rowData.slice(index, index + amount);
	  var after = rowData.slice(index + amount);
	  extendArray(elements, after);
	  var i = 0;
	  while (i < amount) {
	    elements.push(null);
	    i++;
	  }
	  this.instance.populateFromArray(row, index, [elements], null, null, 'spliceRow');
	  return removed;
	};
	DataMap.prototype.get = function(row, prop) {
	  row = Handsontable.hooks.run(this.instance, 'modifyRow', row);
	  if (typeof prop === 'string' && prop.indexOf('.') > -1) {
	    var sliced = prop.split('.');
	    var out = this.dataSource[row];
	    if (!out) {
	      return null;
	    }
	    for (var i = 0,
	        ilen = sliced.length; i < ilen; i++) {
	      out = out[sliced[i]];
	      if (typeof out === 'undefined') {
	        return null;
	      }
	    }
	    return out;
	  } else if (typeof prop === 'function') {
	    return prop(this.dataSource.slice(row, row + 1)[0]);
	  } else {
	    return this.dataSource[row] ? this.dataSource[row][prop] : null;
	  }
	};
	var copyableLookup = cellMethodLookupFactory('copyable', false);
	DataMap.prototype.getCopyable = function(row, prop) {
	  if (copyableLookup.call(this.instance, row, this.propToCol(prop))) {
	    return this.get(row, prop);
	  }
	  return '';
	};
	DataMap.prototype.set = function(row, prop, value, source) {
	  row = Handsontable.hooks.run(this.instance, 'modifyRow', row, source || 'datamapGet');
	  if (typeof prop === 'string' && prop.indexOf('.') > -1) {
	    var sliced = prop.split('.');
	    var out = this.dataSource[row];
	    for (var i = 0,
	        ilen = sliced.length - 1; i < ilen; i++) {
	      if (typeof out[sliced[i]] === 'undefined') {
	        out[sliced[i]] = {};
	      }
	      out = out[sliced[i]];
	    }
	    out[sliced[i]] = value;
	  } else if (typeof prop === 'function') {
	    prop(this.dataSource.slice(row, row + 1)[0], value);
	  } else {
	    this.dataSource[row][prop] = value;
	  }
	};
	DataMap.prototype.physicalRowsToLogical = function(index, amount) {
	  var totalRows = this.instance.countRows();
	  var physicRow = (totalRows + index) % totalRows;
	  var logicRows = [];
	  var rowsToRemove = amount;
	  var row;
	  while (physicRow < totalRows && rowsToRemove) {
	    row = Handsontable.hooks.run(this.instance, 'modifyRow', physicRow);
	    logicRows.push(row);
	    rowsToRemove--;
	    physicRow++;
	  }
	  return logicRows;
	};
	DataMap.prototype.clear = function() {
	  for (var r = 0; r < this.instance.countRows(); r++) {
	    for (var c = 0; c < this.instance.countCols(); c++) {
	      this.set(r, this.colToProp(c), '');
	    }
	  }
	};
	DataMap.prototype.getAll = function() {
	  return this.dataSource;
	};
	DataMap.prototype.getRange = function(start, end, destination) {
	  var r,
	      rlen,
	      c,
	      clen,
	      output = [],
	      row;
	  var getFn = destination === this.DESTINATION_CLIPBOARD_GENERATOR ? this.getCopyable : this.get;
	  rlen = Math.max(start.row, end.row);
	  clen = Math.max(start.col, end.col);
	  for (r = Math.min(start.row, end.row); r <= rlen; r++) {
	    row = [];
	    for (c = Math.min(start.col, end.col); c <= clen; c++) {
	      row.push(getFn.call(this, r, this.colToProp(c)));
	    }
	    output.push(row);
	  }
	  return output;
	};
	DataMap.prototype.getText = function(start, end) {
	  return SheetClip.stringify(this.getRange(start, end, this.DESTINATION_RENDERER));
	};
	DataMap.prototype.getCopyableText = function(start, end) {
	  return SheetClip.stringify(this.getRange(start, end, this.DESTINATION_CLIPBOARD_GENERATOR));
	};
	;
	Handsontable.DataMap = DataMap;

	//# 
	},{"SheetClip":"SheetClip","helpers/array":41,"helpers/data":43,"helpers/object":49,"helpers/setting":50,"multiMap":53}],27:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  EditorManager: {get: function() {
	      return EditorManager;
	    }},
	  __esModule: {value: true}
	});
	var $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $__helpers_47_unicode__,
	    $__helpers_47_dom_47_event__,
	    $__editors__,
	    $__eventManager__;
	var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var $__1 = ($__helpers_47_unicode__ = require("helpers/unicode"), $__helpers_47_unicode__ && $__helpers_47_unicode__.__esModule && $__helpers_47_unicode__ || {default: $__helpers_47_unicode__}),
	    KEY_CODES = $__1.KEY_CODES,
	    isMetaKey = $__1.isMetaKey,
	    isCtrlKey = $__1.isCtrlKey;
	var $__2 = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__}),
	    stopPropagation = $__2.stopPropagation,
	    stopImmediatePropagation = $__2.stopImmediatePropagation,
	    isImmediatePropagationStopped = $__2.isImmediatePropagationStopped;
	var getEditor = ($__editors__ = require("editors"), $__editors__ && $__editors__.__esModule && $__editors__ || {default: $__editors__}).getEditor;
	var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;
	;
	Handsontable.EditorManager = EditorManager;
	function EditorManager(instance, priv, selection) {
	  var _this = this,
	      destroyed = false,
	      eventManager,
	      activeEditor;
	  eventManager = eventManagerObject(instance);
	  function moveSelectionAfterEnter(shiftKey) {
	    var enterMoves = typeof priv.settings.enterMoves === 'function' ? priv.settings.enterMoves(event) : priv.settings.enterMoves;
	    if (shiftKey) {
	      selection.transformStart(-enterMoves.row, -enterMoves.col);
	    } else {
	      selection.transformStart(enterMoves.row, enterMoves.col, true);
	    }
	  }
	  function moveSelectionUp(shiftKey) {
	    if (shiftKey) {
	      selection.transformEnd(-1, 0);
	    } else {
	      selection.transformStart(-1, 0);
	    }
	  }
	  function moveSelectionDown(shiftKey) {
	    if (shiftKey) {
	      selection.transformEnd(1, 0);
	    } else {
	      selection.transformStart(1, 0);
	    }
	  }
	  function moveSelectionRight(shiftKey) {
	    if (shiftKey) {
	      selection.transformEnd(0, 1);
	    } else {
	      selection.transformStart(0, 1);
	    }
	  }
	  function moveSelectionLeft(shiftKey) {
	    if (shiftKey) {
	      selection.transformEnd(0, -1);
	    } else {
	      selection.transformStart(0, -1);
	    }
	  }
	  function onKeyDown(event) {
	    var ctrlDown,
	        rangeModifier;
	    if (!instance.isListening()) {
	      return;
	    }
	    Handsontable.hooks.run(instance, 'beforeKeyDown', event);
	    if (destroyed) {
	      return;
	    }
	    if (isImmediatePropagationStopped(event)) {
	      return;
	    }
	    priv.lastKeyCode = event.keyCode;
	    if (!selection.isSelected()) {
	      return;
	    }
	    ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;
	    if (activeEditor && !activeEditor.isWaiting()) {
	      if (!isMetaKey(event.keyCode) && !isCtrlKey(event.keyCode) && !ctrlDown && !_this.isEditorOpened()) {
	        _this.openEditor('', event);
	        return;
	      }
	    }
	    rangeModifier = event.shiftKey ? selection.setRangeEnd : selection.setRangeStart;
	    switch (event.keyCode) {
	      case KEY_CODES.A:
	        if (!_this.isEditorOpened() && ctrlDown) {
	          selection.selectAll();
	          event.preventDefault();
	          stopPropagation(event);
	        }
	        break;
	      case KEY_CODES.ARROW_UP:
	        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {
	          _this.closeEditorAndSaveChanges(ctrlDown);
	        }
	        moveSelectionUp(event.shiftKey);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.ARROW_DOWN:
	        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {
	          _this.closeEditorAndSaveChanges(ctrlDown);
	        }
	        moveSelectionDown(event.shiftKey);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.ARROW_RIGHT:
	        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {
	          _this.closeEditorAndSaveChanges(ctrlDown);
	        }
	        moveSelectionRight(event.shiftKey);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.ARROW_LEFT:
	        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {
	          _this.closeEditorAndSaveChanges(ctrlDown);
	        }
	        moveSelectionLeft(event.shiftKey);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.TAB:
	        var tabMoves = typeof priv.settings.tabMoves === 'function' ? priv.settings.tabMoves(event) : priv.settings.tabMoves;
	        if (event.shiftKey) {
	          selection.transformStart(-tabMoves.row, -tabMoves.col);
	        } else {
	          selection.transformStart(tabMoves.row, tabMoves.col, true);
	        }
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.BACKSPACE:
	      case KEY_CODES.DELETE:
	        selection.empty(event);
	        _this.prepareEditor();
	        event.preventDefault();
	        break;
	      case KEY_CODES.F2:
	        _this.openEditor(null, event);
	        if (activeEditor) {
	          activeEditor.enableFullEditMode();
	        }
	        event.preventDefault();
	        break;
	      case KEY_CODES.ENTER:
	        if (_this.isEditorOpened()) {
	          if (activeEditor && activeEditor.state !== Handsontable.EditorState.WAITING) {
	            _this.closeEditorAndSaveChanges(ctrlDown);
	          }
	          moveSelectionAfterEnter(event.shiftKey);
	        } else {
	          if (instance.getSettings().enterBeginsEditing) {
	            _this.openEditor(null, event);
	            if (activeEditor) {
	              activeEditor.enableFullEditMode();
	            }
	          } else {
	            moveSelectionAfterEnter(event.shiftKey);
	          }
	        }
	        event.preventDefault();
	        stopImmediatePropagation(event);
	        break;
	      case KEY_CODES.ESCAPE:
	        if (_this.isEditorOpened()) {
	          _this.closeEditorAndRestoreOriginalValue(ctrlDown);
	        }
	        event.preventDefault();
	        break;
	      case KEY_CODES.HOME:
	        if (event.ctrlKey || event.metaKey) {
	          rangeModifier(new WalkontableCellCoords(0, priv.selRange.from.col));
	        } else {
	          rangeModifier(new WalkontableCellCoords(priv.selRange.from.row, 0));
	        }
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.END:
	        if (event.ctrlKey || event.metaKey) {
	          rangeModifier(new WalkontableCellCoords(instance.countRows() - 1, priv.selRange.from.col));
	        } else {
	          rangeModifier(new WalkontableCellCoords(priv.selRange.from.row, instance.countCols() - 1));
	        }
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.PAGE_UP:
	        selection.transformStart(-instance.countVisibleRows(), 0);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	      case KEY_CODES.PAGE_DOWN:
	        selection.transformStart(instance.countVisibleRows(), 0);
	        event.preventDefault();
	        stopPropagation(event);
	        break;
	    }
	  }
	  function init() {
	    instance.addHook('afterDocumentKeyDown', onKeyDown);
	    eventManager.addEventListener(document.documentElement, 'keydown', function(event) {
	      instance.runHooks('afterDocumentKeyDown', event);
	    });
	    function onDblClick(event, coords, elem) {
	      if (elem.nodeName == 'TD') {
	        _this.openEditor();
	        if (activeEditor) {
	          activeEditor.enableFullEditMode();
	        }
	      }
	    }
	    instance.view.wt.update('onCellDblClick', onDblClick);
	    instance.addHook('afterDestroy', function() {
	      destroyed = true;
	    });
	  }
	  this.destroyEditor = function(revertOriginal) {
	    this.closeEditor(revertOriginal);
	  };
	  this.getActiveEditor = function() {
	    return activeEditor;
	  };
	  this.prepareEditor = function() {
	    var row,
	        col,
	        prop,
	        td,
	        originalValue,
	        cellProperties,
	        editorClass;
	    if (activeEditor && activeEditor.isWaiting()) {
	      this.closeEditor(false, false, function(dataSaved) {
	        if (dataSaved) {
	          _this.prepareEditor();
	        }
	      });
	      return;
	    }
	    row = priv.selRange.highlight.row;
	    col = priv.selRange.highlight.col;
	    prop = instance.colToProp(col);
	    td = instance.getCell(row, col);
	    originalValue = instance.getDataAtCell(row, col);
	    cellProperties = instance.getCellMeta(row, col);
	    editorClass = instance.getCellEditor(cellProperties);
	    if (editorClass) {
	      activeEditor = Handsontable.editors.getEditor(editorClass, instance);
	      activeEditor.prepare(row, col, prop, td, originalValue, cellProperties);
	    } else {
	      activeEditor = void 0;
	    }
	  };
	  this.isEditorOpened = function() {
	    return activeEditor && activeEditor.isOpened();
	  };
	  this.openEditor = function(initialValue, event) {
	    if (activeEditor && !activeEditor.cellProperties.readOnly) {
	      activeEditor.beginEditing(initialValue, event);
	    } else if (activeEditor && activeEditor.cellProperties.readOnly) {
	      if (event && event.keyCode === KEY_CODES.ENTER) {
	        moveSelectionAfterEnter();
	      }
	    }
	  };
	  this.closeEditor = function(restoreOriginalValue, ctrlDown, callback) {
	    if (activeEditor) {
	      activeEditor.finishEditing(restoreOriginalValue, ctrlDown, callback);
	    } else {
	      if (callback) {
	        callback(false);
	      }
	    }
	  };
	  this.closeEditorAndSaveChanges = function(ctrlDown) {
	    return this.closeEditor(false, ctrlDown);
	  };
	  this.closeEditorAndRestoreOriginalValue = function(ctrlDown) {
	    return this.closeEditor(true, ctrlDown);
	  };
	  init();
	}

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"editors":28,"eventManager":40,"helpers/dom/event":45,"helpers/unicode":52}],28:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  registerEditor: {get: function() {
	      return registerEditor;
	    }},
	  getEditor: {get: function() {
	      return getEditor;
	    }},
	  hasEditor: {get: function() {
	      return hasEditor;
	    }},
	  getEditorConstructor: {get: function() {
	      return getEditorConstructor;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_string__;
	var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;
	;
	var registeredEditorNames = {},
	    registeredEditorClasses = new WeakMap();
	Handsontable.editors = Handsontable.editors || {};
	Handsontable.editors.registerEditor = registerEditor;
	Handsontable.editors.getEditor = getEditor;
	function RegisteredEditor(editorClass) {
	  var Clazz,
	      instances;
	  instances = {};
	  Clazz = editorClass;
	  this.getConstructor = function() {
	    return editorClass;
	  };
	  this.getInstance = function(hotInstance) {
	    if (!(hotInstance.guid in instances)) {
	      instances[hotInstance.guid] = new Clazz(hotInstance);
	    }
	    return instances[hotInstance.guid];
	  };
	}
	function registerEditor(editorName, editorClass) {
	  var editor = new RegisteredEditor(editorClass);
	  if (typeof editorName === 'string') {
	    registeredEditorNames[editorName] = editor;
	    Handsontable.editors[toUpperCaseFirst(editorName) + 'Editor'] = editorClass;
	  }
	  registeredEditorClasses.set(editorClass, editor);
	}
	function getEditor(editorName, hotInstance) {
	  var editor;
	  if (typeof editorName == 'function') {
	    if (!(registeredEditorClasses.get(editorName))) {
	      registerEditor(null, editorName);
	    }
	    editor = registeredEditorClasses.get(editorName);
	  } else if (typeof editorName == 'string') {
	    editor = registeredEditorNames[editorName];
	  } else {
	    throw Error('Only strings and functions can be passed as "editor" parameter ');
	  }
	  if (!editor) {
	    throw Error('No editor registered under name "' + editorName + '"');
	  }
	  return editor.getInstance(hotInstance);
	}
	function getEditorConstructor(editorName) {
	  var editor;
	  if (typeof editorName == 'string') {
	    editor = registeredEditorNames[editorName];
	  } else {
	    throw Error('Only strings and functions can be passed as "editor" parameter ');
	  }
	  if (!editor) {
	    throw Error('No editor registered under name "' + editorName + '"');
	  }
	  return editor.getConstructor();
	}
	function hasEditor(editorName) {
	  return registeredEditorNames[editorName] ? true : false;
	}

	//# 
	},{"helpers/string":51}],29:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  BaseEditor: {get: function() {
	      return BaseEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_mixed__,
	    $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	var WalkontableCellCoords = ($___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	;
	Handsontable.editors = Handsontable.editors || {};
	Handsontable.editors.BaseEditor = BaseEditor;
	Handsontable.EditorState = {
	  VIRGIN: 'STATE_VIRGIN',
	  EDITING: 'STATE_EDITING',
	  WAITING: 'STATE_WAITING',
	  FINISHED: 'STATE_FINISHED'
	};
	function BaseEditor(instance) {
	  this.instance = instance;
	  this.state = Handsontable.EditorState.VIRGIN;
	  this._opened = false;
	  this._fullEditMode = false;
	  this._closeCallback = null;
	  this.init();
	}
	BaseEditor.prototype._fireCallbacks = function(result) {
	  if (this._closeCallback) {
	    this._closeCallback(result);
	    this._closeCallback = null;
	  }
	};
	BaseEditor.prototype.init = function() {};
	BaseEditor.prototype.getValue = function() {
	  throw Error('Editor getValue() method unimplemented');
	};
	BaseEditor.prototype.setValue = function(newValue) {
	  throw Error('Editor setValue() method unimplemented');
	};
	BaseEditor.prototype.open = function() {
	  throw Error('Editor open() method unimplemented');
	};
	BaseEditor.prototype.close = function() {
	  throw Error('Editor close() method unimplemented');
	};
	BaseEditor.prototype.prepare = function(row, col, prop, td, originalValue, cellProperties) {
	  this.TD = td;
	  this.row = row;
	  this.col = col;
	  this.prop = prop;
	  this.originalValue = originalValue;
	  this.cellProperties = cellProperties;
	  this.state = Handsontable.EditorState.VIRGIN;
	};
	BaseEditor.prototype.extend = function() {
	  var baseClass = this.constructor;
	  function Editor() {
	    baseClass.apply(this, arguments);
	  }
	  function inherit(Child, Parent) {
	    function Bridge() {}
	    Bridge.prototype = Parent.prototype;
	    Child.prototype = new Bridge();
	    Child.prototype.constructor = Child;
	    return Child;
	  }
	  return inherit(Editor, baseClass);
	};
	BaseEditor.prototype.saveValue = function(val, ctrlDown) {
	  var sel,
	      tmp;
	  if (ctrlDown) {
	    sel = this.instance.getSelected();
	    if (sel[0] > sel[2]) {
	      tmp = sel[0];
	      sel[0] = sel[2];
	      sel[2] = tmp;
	    }
	    if (sel[1] > sel[3]) {
	      tmp = sel[1];
	      sel[1] = sel[3];
	      sel[3] = tmp;
	    }
	    this.instance.populateFromArray(sel[0], sel[1], val, sel[2], sel[3], 'edit');
	  } else {
	    this.instance.populateFromArray(this.row, this.col, val, null, null, 'edit');
	  }
	};
	BaseEditor.prototype.beginEditing = function(initialValue, event) {
	  if (this.state != Handsontable.EditorState.VIRGIN) {
	    return;
	  }
	  this.instance.view.scrollViewport(new WalkontableCellCoords(this.row, this.col));
	  this.instance.view.render();
	  this.state = Handsontable.EditorState.EDITING;
	  initialValue = typeof initialValue == 'string' ? initialValue : this.originalValue;
	  this.setValue(stringify(initialValue));
	  this.open(event);
	  this._opened = true;
	  this.focus();
	  this.instance.view.render();
	};
	BaseEditor.prototype.finishEditing = function(restoreOriginalValue, ctrlDown, callback) {
	  var _this = this,
	      val;
	  if (callback) {
	    var previousCloseCallback = this._closeCallback;
	    this._closeCallback = function(result) {
	      if (previousCloseCallback) {
	        previousCloseCallback(result);
	      }
	      callback(result);
	    };
	  }
	  if (this.isWaiting()) {
	    return;
	  }
	  if (this.state == Handsontable.EditorState.VIRGIN) {
	    this.instance._registerTimeout(setTimeout(function() {
	      _this._fireCallbacks(true);
	    }, 0));
	    return;
	  }
	  if (this.state == Handsontable.EditorState.EDITING) {
	    if (restoreOriginalValue) {
	      this.cancelChanges();
	      this.instance.view.render();
	      return;
	    }
	    if (this.instance.getSettings().trimWhitespace) {
	      val = [[typeof this.getValue() === 'string' ? String.prototype.trim.call(this.getValue() || '') : this.getValue()]];
	    } else {
	      val = [[this.getValue()]];
	    }
	    this.state = Handsontable.EditorState.WAITING;
	    this.saveValue(val, ctrlDown);
	    if (this.instance.getCellValidator(this.cellProperties)) {
	      this.instance.addHookOnce('postAfterValidate', function(result) {
	        _this.state = Handsontable.EditorState.FINISHED;
	        _this.discardEditor(result);
	      });
	    } else {
	      this.state = Handsontable.EditorState.FINISHED;
	      this.discardEditor(true);
	    }
	  }
	};
	BaseEditor.prototype.cancelChanges = function() {
	  this.state = Handsontable.EditorState.FINISHED;
	  this.discardEditor();
	};
	BaseEditor.prototype.discardEditor = function(result) {
	  if (this.state !== Handsontable.EditorState.FINISHED) {
	    return;
	  }
	  if (result === false && this.cellProperties.allowInvalid !== true) {
	    this.instance.selectCell(this.row, this.col);
	    this.focus();
	    this.state = Handsontable.EditorState.EDITING;
	    this._fireCallbacks(false);
	  } else {
	    this.close();
	    this._opened = false;
	    this._fullEditMode = false;
	    this.state = Handsontable.EditorState.VIRGIN;
	    this._fireCallbacks(true);
	  }
	};
	BaseEditor.prototype.enableFullEditMode = function() {
	  this._fullEditMode = true;
	};
	BaseEditor.prototype.isInFullEditMode = function() {
	  return this._fullEditMode;
	};
	BaseEditor.prototype.isOpened = function() {
	  return this._opened;
	};
	BaseEditor.prototype.isWaiting = function() {
	  return this.state === Handsontable.EditorState.WAITING;
	};
	BaseEditor.prototype.checkEditorSection = function() {
	  var totalRows = this.instance.countRows();
	  var section = '';
	  if (this.row < this.instance.getSettings().fixedRowsTop) {
	    if (this.col < this.instance.getSettings().fixedColumnsLeft) {
	      section = 'top-left-corner';
	    } else {
	      section = 'top';
	    }
	  } else if (this.instance.getSettings().fixedRowsBottom && this.row >= totalRows - this.instance.getSettings().fixedRowsBottom) {
	    if (this.col < this.instance.getSettings().fixedColumnsLeft) {
	      section = 'bottom-left-corner';
	    } else {
	      section = 'bottom';
	    }
	  } else {
	    if (this.col < this.instance.getSettings().fixedColumnsLeft) {
	      section = 'left';
	    }
	  }
	  return section;
	};

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"helpers/mixed":47}],30:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  AutocompleteEditor: {get: function() {
	      return AutocompleteEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_mixed__,
	    $___46__46__47_helpers_47_array__,
	    $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_editors__,
	    $__handsontableEditor__;
	var $__0 = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}),
	    KEY_CODES = $__0.KEY_CODES,
	    isPrintableChar = $__0.isPrintableChar;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	var pivot = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).pivot;
	var $__3 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__3.addClass,
	    getCaretPosition = $__3.getCaretPosition,
	    getScrollbarWidth = $__3.getScrollbarWidth,
	    getSelectionEndPosition = $__3.getSelectionEndPosition,
	    outerWidth = $__3.outerWidth,
	    setCaretPosition = $__3.setCaretPosition;
	var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditorConstructor = $__4.getEditorConstructor,
	    registerEditor = $__4.registerEditor;
	var HandsontableEditor = ($__handsontableEditor__ = require("handsontableEditor"), $__handsontableEditor__ && $__handsontableEditor__.__esModule && $__handsontableEditor__ || {default: $__handsontableEditor__}).HandsontableEditor;
	var AutocompleteEditor = HandsontableEditor.prototype.extend();
	AutocompleteEditor.prototype.init = function() {
	  HandsontableEditor.prototype.init.apply(this, arguments);
	  this.query = null;
	  this.choices = [];
	};
	AutocompleteEditor.prototype.createElements = function() {
	  HandsontableEditor.prototype.createElements.apply(this, arguments);
	  addClass(this.htContainer, 'autocompleteEditor');
	  addClass(this.htContainer, window.navigator.platform.indexOf('Mac') === -1 ? '' : 'htMacScroll');
	};
	var skipOne = false;
	function onBeforeKeyDown(event) {
	  skipOne = false;
	  var editor = this.getActiveEditor();
	  if (isPrintableChar(event.keyCode) || event.keyCode === KEY_CODES.BACKSPACE || event.keyCode === KEY_CODES.DELETE || event.keyCode === KEY_CODES.INSERT) {
	    var timeOffset = 0;
	    if (event.keyCode === KEY_CODES.C && (event.ctrlKey || event.metaKey)) {
	      return;
	    }
	    if (!editor.isOpened()) {
	      timeOffset += 10;
	    }
	    if (editor.htEditor) {
	      editor.instance._registerTimeout(setTimeout(function() {
	        editor.queryChoices(editor.TEXTAREA.value);
	        skipOne = true;
	      }, timeOffset));
	    }
	  }
	}
	AutocompleteEditor.prototype.prepare = function() {
	  this.instance.addHook('beforeKeyDown', onBeforeKeyDown);
	  HandsontableEditor.prototype.prepare.apply(this, arguments);
	};
	AutocompleteEditor.prototype.open = function() {
	  this.TEXTAREA_PARENT.style.overflow = 'auto';
	  HandsontableEditor.prototype.open.apply(this, arguments);
	  this.TEXTAREA_PARENT.style.overflow = '';
	  var choicesListHot = this.htEditor.getInstance();
	  var that = this;
	  var trimDropdown = this.cellProperties.trimDropdown === void 0 ? true : this.cellProperties.trimDropdown;
	  this.TEXTAREA.style.visibility = 'visible';
	  this.focus();
	  choicesListHot.updateSettings({
	    colWidths: trimDropdown ? [outerWidth(this.TEXTAREA) - 2] : void 0,
	    width: trimDropdown ? outerWidth(this.TEXTAREA) + getScrollbarWidth() + 2 : void 0,
	    afterRenderer: function(TD, row, col, prop, value) {
	      var caseSensitive = this.getCellMeta(row, col).filteringCaseSensitive === true,
	          indexOfMatch,
	          match,
	          value = stringify(value);
	      if (value) {
	        indexOfMatch = caseSensitive ? value.indexOf(this.query) : value.toLowerCase().indexOf(that.query.toLowerCase());
	        if (indexOfMatch != -1) {
	          match = value.substr(indexOfMatch, that.query.length);
	          TD.innerHTML = value.replace(match, '<strong>' + match + '</strong>');
	        }
	      }
	    },
	    autoColumnSize: true,
	    modifyColWidth: function(width, col) {
	      var autoWidths = this.getPlugin('autoColumnSize').widths;
	      if (autoWidths[col]) {
	        width = autoWidths[col];
	      }
	      return trimDropdown ? width : width + 15;
	    }
	  });
	  this.htEditor.view.wt.wtTable.holder.parentNode.style['padding-right'] = getScrollbarWidth() + 2 + 'px';
	  if (skipOne) {
	    skipOne = false;
	  }
	  that.instance._registerTimeout(setTimeout(function() {
	    that.queryChoices(that.TEXTAREA.value);
	  }, 0));
	};
	AutocompleteEditor.prototype.close = function() {
	  HandsontableEditor.prototype.close.apply(this, arguments);
	};
	AutocompleteEditor.prototype.queryChoices = function(query) {
	  this.query = query;
	  if (typeof this.cellProperties.source == 'function') {
	    var that = this;
	    this.cellProperties.source(query, function(choices) {
	      that.updateChoicesList(choices);
	    });
	  } else if (Array.isArray(this.cellProperties.source)) {
	    var choices;
	    if (!query || this.cellProperties.filter === false) {
	      choices = this.cellProperties.source;
	    } else {
	      var filteringCaseSensitive = this.cellProperties.filteringCaseSensitive === true;
	      var lowerCaseQuery = query.toLowerCase();
	      choices = this.cellProperties.source.filter(function(choice) {
	        if (filteringCaseSensitive) {
	          return choice.indexOf(query) != -1;
	        } else {
	          return choice.toLowerCase().indexOf(lowerCaseQuery) != -1;
	        }
	      });
	    }
	    this.updateChoicesList(choices);
	  } else {
	    this.updateChoicesList([]);
	  }
	};
	AutocompleteEditor.prototype.updateChoicesList = function(choices) {
	  var pos = getCaretPosition(this.TEXTAREA),
	      endPos = getSelectionEndPosition(this.TEXTAREA);
	  var orderByRelevance = AutocompleteEditor.sortByRelevance(this.getValue(), choices, this.cellProperties.filteringCaseSensitive);
	  var highlightIndex;
	  if (this.cellProperties.filter == false) {
	    highlightIndex = orderByRelevance[0];
	  } else {
	    var sorted = [];
	    for (var i = 0,
	        choicesCount = orderByRelevance.length; i < choicesCount; i++) {
	      sorted.push(choices[orderByRelevance[i]]);
	    }
	    highlightIndex = 0;
	    choices = sorted;
	  }
	  this.choices = choices;
	  this.htEditor.loadData(pivot([choices]));
	  this.updateDropdownHeight();
	  if (this.cellProperties.strict === true) {
	    this.highlightBestMatchingChoice(highlightIndex);
	  }
	  this.instance.listen();
	  this.TEXTAREA.focus();
	  setCaretPosition(this.TEXTAREA, pos, (pos == endPos ? void 0 : endPos));
	};
	AutocompleteEditor.prototype.updateDropdownHeight = function() {
	  var currentDropdownWidth = this.htEditor.getColWidth(0) + getScrollbarWidth() + 2;
	  var trimDropdown = this.cellProperties.trimDropdown === void 0 ? true : this.cellProperties.trimDropdown;
	  this.htEditor.updateSettings({
	    height: this.getDropdownHeight(),
	    width: trimDropdown ? void 0 : currentDropdownWidth
	  });
	  this.htEditor.view.wt.wtTable.alignOverlaysWithTrimmingContainer();
	};
	AutocompleteEditor.prototype.finishEditing = function(restoreOriginalValue) {
	  if (!restoreOriginalValue) {
	    this.instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	  }
	  HandsontableEditor.prototype.finishEditing.apply(this, arguments);
	};
	AutocompleteEditor.prototype.highlightBestMatchingChoice = function(index) {
	  if (typeof index === 'number') {
	    this.htEditor.selectCell(index, 0);
	  } else {
	    this.htEditor.deselectCell();
	  }
	};
	AutocompleteEditor.sortByRelevance = function(value, choices, caseSensitive) {
	  var choicesRelevance = [],
	      currentItem,
	      valueLength = value.length,
	      valueIndex,
	      charsLeft,
	      result = [],
	      i,
	      choicesCount;
	  if (valueLength === 0) {
	    for (i = 0, choicesCount = choices.length; i < choicesCount; i++) {
	      result.push(i);
	    }
	    return result;
	  }
	  for (i = 0, choicesCount = choices.length; i < choicesCount; i++) {
	    currentItem = stringify(choices[i]);
	    if (caseSensitive) {
	      valueIndex = currentItem.indexOf(value);
	    } else {
	      valueIndex = currentItem.toLowerCase().indexOf(value.toLowerCase());
	    }
	    if (valueIndex == -1) {
	      continue;
	    }
	    charsLeft = currentItem.length - valueIndex - valueLength;
	    choicesRelevance.push({
	      baseIndex: i,
	      index: valueIndex,
	      charsLeft: charsLeft,
	      value: currentItem
	    });
	  }
	  choicesRelevance.sort(function(a, b) {
	    if (b.index === -1) {
	      return -1;
	    }
	    if (a.index === -1) {
	      return 1;
	    }
	    if (a.index < b.index) {
	      return -1;
	    } else if (b.index < a.index) {
	      return 1;
	    } else if (a.index === b.index) {
	      if (a.charsLeft < b.charsLeft) {
	        return -1;
	      } else if (a.charsLeft > b.charsLeft) {
	        return 1;
	      } else {
	        return 0;
	      }
	    }
	  });
	  for (i = 0, choicesCount = choicesRelevance.length; i < choicesCount; i++) {
	    result.push(choicesRelevance[i].baseIndex);
	  }
	  return result;
	};
	AutocompleteEditor.prototype.getDropdownHeight = function() {
	  var firstRowHeight = this.htEditor.getInstance().getRowHeight(0) || 23;
	  var _visibleRows = this.cellProperties.visibleRows;
	  return this.choices.length >= _visibleRows ? _visibleRows * firstRowHeight : this.choices.length * firstRowHeight + 8;
	};
	AutocompleteEditor.prototype.allowKeyEventPropagation = function(keyCode) {
	  var selected = {row: this.htEditor.getSelectedRange() ? this.htEditor.getSelectedRange().from.row : -1};
	  var allowed = false;
	  if (keyCode === KEY_CODES.ARROW_DOWN && selected.row < this.htEditor.countRows() - 1) {
	    allowed = true;
	  }
	  if (keyCode === KEY_CODES.ARROW_UP && selected.row > -1) {
	    allowed = true;
	  }
	  return allowed;
	};
	;
	registerEditor('autocomplete', AutocompleteEditor);

	//# 
	},{"editors":28,"handsontableEditor":34,"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/unicode":52}],31:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  CheckboxEditor: {get: function() {
	      return CheckboxEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_editors__,
	    $___95_baseEditor__,
	    $___46__46__47_helpers_47_dom_47_element__;
	var registerEditor = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}).registerEditor;
	var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;
	var hasClass = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).hasClass;
	var CheckboxEditor = function CheckboxEditor() {
	  $traceurRuntime.superConstructor($CheckboxEditor).apply(this, arguments);
	};
	var $CheckboxEditor = CheckboxEditor;
	($traceurRuntime.createClass)(CheckboxEditor, {
	  beginEditing: function() {
	    var checkbox = this.TD.querySelector('input[type="checkbox"]');
	    if (!hasClass(checkbox, 'htBadValue')) {
	      checkbox.click();
	    }
	  },
	  finishEditing: function() {},
	  init: function() {},
	  open: function() {},
	  close: function() {},
	  getValue: function() {},
	  setValue: function() {},
	  focus: function() {}
	}, {}, BaseEditor);
	;
	registerEditor('checkbox', CheckboxEditor);

	//# 
	},{"_baseEditor":29,"editors":28,"helpers/dom/element":44}],32:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  DateEditor: {get: function() {
	      return DateEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_object__,
	    $___46__46__47_eventManager__,
	    $___46__46__47_editors__,
	    $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_dom_47_event__,
	    $__textEditor__,
	    $__moment__,
	    $__pikaday__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    outerHeight = $__0.outerHeight;
	var deepExtend = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).deepExtend;
	var EventManager = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).EventManager;
	var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__3.getEditor,
	    registerEditor = $__3.registerEditor;
	var isMetaKey = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).isMetaKey;
	var stopPropagation = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}).stopPropagation;
	var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;
	var moment = ($__moment__ = require("moment"), $__moment__ && $__moment__.__esModule && $__moment__ || {default: $__moment__}).default;
	var Pikaday = ($__pikaday__ = require("pikaday"), $__pikaday__ && $__pikaday__.__esModule && $__pikaday__ || {default: $__pikaday__}).default;
	Handsontable.editors = Handsontable.editors || {};
	Handsontable.editors.DateEditor = DateEditor;
	var DateEditor = function DateEditor(hotInstance) {
	  this.$datePicker = null;
	  this.datePicker = null;
	  this.datePickerStyle = null;
	  this.defaultDateFormat = 'DD/MM/YYYY';
	  this.isCellEdited = false;
	  this.parentDestroyed = false;
	  $traceurRuntime.superConstructor($DateEditor).call(this, hotInstance);
	};
	var $DateEditor = DateEditor;
	($traceurRuntime.createClass)(DateEditor, {
	  init: function() {
	    var $__9 = this;
	    if (typeof moment !== 'function') {
	      throw new Error('You need to include moment.js to your project.');
	    }
	    if (typeof Pikaday !== 'function') {
	      throw new Error('You need to include Pikaday to your project.');
	    }
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "init").call(this);
	    this.instance.addHook('afterDestroy', (function() {
	      $__9.parentDestroyed = true;
	      $__9.destroyElements();
	    }));
	  },
	  createElements: function() {
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "createElements").call(this);
	    this.datePicker = document.createElement('DIV');
	    this.datePickerStyle = this.datePicker.style;
	    this.datePickerStyle.position = 'absolute';
	    this.datePickerStyle.top = 0;
	    this.datePickerStyle.left = 0;
	    this.datePickerStyle.zIndex = 9999;
	    addClass(this.datePicker, 'htDatepickerHolder');
	    document.body.appendChild(this.datePicker);
	    this.$datePicker = new Pikaday(this.getDatePickerConfig());
	    var eventManager = new EventManager(this);
	    eventManager.addEventListener(this.datePicker, 'mousedown', (function(event) {
	      return stopPropagation(event);
	    }));
	    this.hideDatepicker();
	  },
	  destroyElements: function() {
	    this.$datePicker.destroy();
	  },
	  prepare: function(row, col, prop, td, originalValue, cellProperties) {
	    this._opened = false;
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "prepare").call(this, row, col, prop, td, originalValue, cellProperties);
	  },
	  open: function() {
	    var event = arguments[0] !== (void 0) ? arguments[0] : null;
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "open").call(this);
	    this.showDatepicker(event);
	  },
	  close: function() {
	    var $__9 = this;
	    this._opened = false;
	    this.instance._registerTimeout(setTimeout((function() {
	      $__9.instance.selection.refreshBorders();
	    }), 0));
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "close").call(this);
	  },
	  finishEditing: function() {
	    var isCancelled = arguments[0] !== (void 0) ? arguments[0] : false;
	    var ctrlDown = arguments[1] !== (void 0) ? arguments[1] : false;
	    if (isCancelled) {
	      var value = this.originalValue;
	      if (value !== void 0) {
	        this.setValue(value);
	      }
	    }
	    this.hideDatepicker();
	    $traceurRuntime.superGet(this, $DateEditor.prototype, "finishEditing").call(this, isCancelled, ctrlDown);
	  },
	  showDatepicker: function(event) {
	    this.$datePicker.config(this.getDatePickerConfig());
	    var offset = this.TD.getBoundingClientRect();
	    var dateFormat = this.cellProperties.dateFormat || this.defaultDateFormat;
	    var datePickerConfig = this.$datePicker.config();
	    var dateStr;
	    var isMouseDown = this.instance.view.isMouseDown();
	    var isMeta = event ? isMetaKey(event.keyCode) : false;
	    this.datePickerStyle.top = (window.pageYOffset + offset.top + outerHeight(this.TD)) + 'px';
	    this.datePickerStyle.left = (window.pageXOffset + offset.left) + 'px';
	    this.$datePicker._onInputFocus = function() {};
	    datePickerConfig.format = dateFormat;
	    if (this.originalValue) {
	      dateStr = this.originalValue;
	      if (moment(dateStr, dateFormat, true).isValid()) {
	        this.$datePicker.setMoment(moment(dateStr, dateFormat), true);
	      }
	      if (!isMeta && !isMouseDown) {
	        this.setValue('');
	      }
	    } else {
	      if (this.cellProperties.defaultDate) {
	        dateStr = this.cellProperties.defaultDate;
	        datePickerConfig.defaultDate = dateStr;
	        if (moment(dateStr, dateFormat, true).isValid()) {
	          this.$datePicker.setMoment(moment(dateStr, dateFormat), true);
	        }
	        if (!isMeta && !isMouseDown) {
	          this.setValue('');
	        }
	      } else {
	        this.$datePicker.gotoToday();
	      }
	    }
	    this.datePickerStyle.display = 'block';
	    this.$datePicker.show();
	  },
	  hideDatepicker: function() {
	    this.datePickerStyle.display = 'none';
	    this.$datePicker.hide();
	  },
	  getDatePickerConfig: function() {
	    var $__9 = this;
	    var htInput = this.TEXTAREA;
	    var options = {};
	    if (this.cellProperties && this.cellProperties.datePickerConfig) {
	      deepExtend(options, this.cellProperties.datePickerConfig);
	    }
	    var origOnSelect = options.onSelect;
	    var origOnClose = options.onClose;
	    options.field = htInput;
	    options.trigger = htInput;
	    options.container = this.datePicker;
	    options.bound = false;
	    options.format = options.format || this.defaultDateFormat;
	    options.reposition = options.reposition || false;
	    options.onSelect = (function(dateStr) {
	      if (!isNaN(dateStr.getTime())) {
	        dateStr = moment(dateStr).format($__9.cellProperties.dateFormat || $__9.defaultDateFormat);
	      }
	      $__9.setValue(dateStr);
	      $__9.hideDatepicker();
	      if (origOnSelect) {
	        origOnSelect();
	      }
	    });
	    options.onClose = (function() {
	      if (!$__9.parentDestroyed) {
	        $__9.finishEditing(false);
	      }
	      if (origOnClose) {
	        origOnClose();
	      }
	    });
	    return options;
	  }
	}, {}, TextEditor);
	;
	registerEditor('date', DateEditor);

	//# 
	},{"editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"moment":"moment","pikaday":"pikaday","textEditor":39}],33:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  DropdownEditor: {get: function() {
	      return DropdownEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_editors__,
	    $__autocompleteEditor__;
	var $__0 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__0.getEditor,
	    registerEditor = $__0.registerEditor;
	var AutocompleteEditor = ($__autocompleteEditor__ = require("autocompleteEditor"), $__autocompleteEditor__ && $__autocompleteEditor__.__esModule && $__autocompleteEditor__ || {default: $__autocompleteEditor__}).AutocompleteEditor;
	var DropdownEditor = function DropdownEditor() {
	  $traceurRuntime.superConstructor($DropdownEditor).apply(this, arguments);
	};
	var $DropdownEditor = DropdownEditor;
	($traceurRuntime.createClass)(DropdownEditor, {prepare: function(row, col, prop, td, originalValue, cellProperties) {
	    $traceurRuntime.superGet(this, $DropdownEditor.prototype, "prepare").call(this, row, col, prop, td, originalValue, cellProperties);
	    this.cellProperties.filter = false;
	    this.cellProperties.strict = true;
	  }}, {}, AutocompleteEditor);
	Handsontable.hooks.add('beforeValidate', function(value, row, col, source) {
	  var cellMeta = this.getCellMeta(row, col);
	  if (cellMeta.editor === Handsontable.editors.DropdownEditor) {
	    if (cellMeta.strict === void 0) {
	      cellMeta.filter = false;
	      cellMeta.strict = true;
	    }
	  }
	});
	;
	registerEditor('dropdown', DropdownEditor);

	//# 
	},{"autocompleteEditor":30,"editors":28}],34:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  HandsontableEditor: {get: function() {
	      return HandsontableEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_object__,
	    $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47_editors__,
	    $__textEditor__;
	var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;
	var extend = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).extend;
	var setCaretPosition = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).setCaretPosition;
	var $__3 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),
	    stopImmediatePropagation = $__3.stopImmediatePropagation,
	    isImmediatePropagationStopped = $__3.isImmediatePropagationStopped;
	var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__4.getEditor,
	    registerEditor = $__4.registerEditor;
	var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;
	var HandsontableEditor = TextEditor.prototype.extend();
	HandsontableEditor.prototype.createElements = function() {
	  TextEditor.prototype.createElements.apply(this, arguments);
	  var DIV = document.createElement('DIV');
	  DIV.className = 'handsontableEditor';
	  this.TEXTAREA_PARENT.appendChild(DIV);
	  this.htContainer = DIV;
	  this.assignHooks();
	};
	HandsontableEditor.prototype.prepare = function(td, row, col, prop, value, cellProperties) {
	  TextEditor.prototype.prepare.apply(this, arguments);
	  var parent = this;
	  var options = {
	    startRows: 0,
	    startCols: 0,
	    minRows: 0,
	    minCols: 0,
	    className: 'listbox',
	    copyPaste: false,
	    autoColumnSize: false,
	    autoRowSize: false,
	    readOnly: true,
	    fillHandle: false,
	    afterOnCellMouseDown: function() {
	      var value = this.getValue();
	      if (value !== void 0) {
	        parent.setValue(value);
	      }
	      parent.instance.destroyEditor();
	    }
	  };
	  if (this.cellProperties.handsontable) {
	    extend(options, cellProperties.handsontable);
	  }
	  this.htOptions = options;
	};
	var onBeforeKeyDown = function(event) {
	  if (isImmediatePropagationStopped(event)) {
	    return;
	  }
	  var editor = this.getActiveEditor();
	  var innerHOT = editor.htEditor.getInstance();
	  var rowToSelect;
	  if (event.keyCode == KEY_CODES.ARROW_DOWN) {
	    if (innerHOT.getSelected()) {
	      var selectedRow = innerHOT.getSelected()[0];
	      var lastRow = innerHOT.countRows() - 1;
	      rowToSelect = Math.min(lastRow, selectedRow + 1);
	    } else {
	      rowToSelect = 0;
	    }
	  } else if (event.keyCode == KEY_CODES.ARROW_UP) {
	    if (innerHOT.getSelected()) {
	      var selectedRow = innerHOT.getSelected()[0];
	      rowToSelect = selectedRow - 1;
	    }
	  }
	  if (rowToSelect !== void 0) {
	    if (rowToSelect < 0) {
	      innerHOT.deselectCell();
	    } else {
	      innerHOT.selectCell(rowToSelect, 0);
	    }
	    if (innerHOT.getData().length) {
	      event.preventDefault();
	      stopImmediatePropagation(event);
	      editor.instance.listen();
	      editor.TEXTAREA.focus();
	    }
	  }
	};
	HandsontableEditor.prototype.open = function() {
	  this.instance.addHook('beforeKeyDown', onBeforeKeyDown);
	  TextEditor.prototype.open.apply(this, arguments);
	  if (this.htEditor) {
	    this.htEditor.destroy();
	  }
	  this.htEditor = new Handsontable(this.htContainer, this.htOptions);
	  if (this.cellProperties.strict) {
	    this.htEditor.selectCell(0, 0);
	    this.TEXTAREA.style.visibility = 'hidden';
	  } else {
	    this.htEditor.deselectCell();
	    this.TEXTAREA.style.visibility = 'visible';
	  }
	  setCaretPosition(this.TEXTAREA, 0, this.TEXTAREA.value.length);
	};
	HandsontableEditor.prototype.close = function() {
	  this.instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	  this.instance.listen();
	  TextEditor.prototype.close.apply(this, arguments);
	};
	HandsontableEditor.prototype.focus = function() {
	  this.instance.listen();
	  TextEditor.prototype.focus.apply(this, arguments);
	};
	HandsontableEditor.prototype.beginEditing = function(initialValue) {
	  var onBeginEditing = this.instance.getSettings().onBeginEditing;
	  if (onBeginEditing && onBeginEditing() === false) {
	    return;
	  }
	  TextEditor.prototype.beginEditing.apply(this, arguments);
	};
	HandsontableEditor.prototype.finishEditing = function(isCancelled, ctrlDown) {
	  if (this.htEditor && this.htEditor.isListening()) {
	    this.instance.listen();
	  }
	  if (this.htEditor && this.htEditor.getSelected()) {
	    var value = this.htEditor.getInstance().getValue();
	    if (value !== void 0) {
	      this.setValue(value);
	    }
	  }
	  return TextEditor.prototype.finishEditing.apply(this, arguments);
	};
	HandsontableEditor.prototype.assignHooks = function() {
	  var _this = this;
	  this.instance.addHook('afterDestroy', function() {
	    if (_this.htEditor) {
	      _this.htEditor.destroy();
	    }
	  });
	};
	;
	registerEditor('handsontable', HandsontableEditor);

	//# 
	},{"editors":28,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"textEditor":39}],35:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  MobileTextEditor: {get: function() {
	      return MobileTextEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_editors__,
	    $___95_baseEditor__,
	    $___46__46__47_eventManager__;
	var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;
	var $__1 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),
	    stopImmediatePropagation = $__1.stopImmediatePropagation,
	    isImmediatePropagationStopped = $__1.isImmediatePropagationStopped;
	var $__2 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__2.addClass,
	    getScrollLeft = $__2.getScrollLeft,
	    getScrollTop = $__2.getScrollTop,
	    hasClass = $__2.hasClass,
	    isChildOf = $__2.isChildOf,
	    offset = $__2.offset,
	    outerHeight = $__2.outerHeight,
	    outerWidth = $__2.outerWidth,
	    removeClass = $__2.removeClass,
	    setCaretPosition = $__2.setCaretPosition;
	var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__3.getEditor,
	    registerEditor = $__3.registerEditor;
	var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;
	var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;
	var MobileTextEditor = BaseEditor.prototype.extend(),
	    domDimensionsCache = {};
	var createControls = function() {
	  this.controls = {};
	  this.controls.leftButton = document.createElement('DIV');
	  this.controls.leftButton.className = 'leftButton';
	  this.controls.rightButton = document.createElement('DIV');
	  this.controls.rightButton.className = 'rightButton';
	  this.controls.upButton = document.createElement('DIV');
	  this.controls.upButton.className = 'upButton';
	  this.controls.downButton = document.createElement('DIV');
	  this.controls.downButton.className = 'downButton';
	  for (var button in this.controls) {
	    if (this.controls.hasOwnProperty(button)) {
	      this.positionControls.appendChild(this.controls[button]);
	    }
	  }
	};
	MobileTextEditor.prototype.valueChanged = function() {
	  return this.initValue != this.getValue();
	};
	MobileTextEditor.prototype.init = function() {
	  var that = this;
	  this.eventManager = eventManagerObject(this.instance);
	  this.createElements();
	  this.bindEvents();
	  this.instance.addHook('afterDestroy', function() {
	    that.destroy();
	  });
	};
	MobileTextEditor.prototype.getValue = function() {
	  return this.TEXTAREA.value;
	};
	MobileTextEditor.prototype.setValue = function(newValue) {
	  this.initValue = newValue;
	  this.TEXTAREA.value = newValue;
	};
	MobileTextEditor.prototype.createElements = function() {
	  this.editorContainer = document.createElement('DIV');
	  this.editorContainer.className = 'htMobileEditorContainer';
	  this.cellPointer = document.createElement('DIV');
	  this.cellPointer.className = 'cellPointer';
	  this.moveHandle = document.createElement('DIV');
	  this.moveHandle.className = 'moveHandle';
	  this.inputPane = document.createElement('DIV');
	  this.inputPane.className = 'inputs';
	  this.positionControls = document.createElement('DIV');
	  this.positionControls.className = 'positionControls';
	  this.TEXTAREA = document.createElement('TEXTAREA');
	  addClass(this.TEXTAREA, 'handsontableInput');
	  this.inputPane.appendChild(this.TEXTAREA);
	  this.editorContainer.appendChild(this.cellPointer);
	  this.editorContainer.appendChild(this.moveHandle);
	  this.editorContainer.appendChild(this.inputPane);
	  this.editorContainer.appendChild(this.positionControls);
	  createControls.call(this);
	  document.body.appendChild(this.editorContainer);
	};
	MobileTextEditor.prototype.onBeforeKeyDown = function(event) {
	  var instance = this;
	  var that = instance.getActiveEditor();
	  if (event.target !== that.TEXTAREA || isImmediatePropagationStopped(event)) {
	    return;
	  }
	  switch (event.keyCode) {
	    case KEY_CODES.ENTER:
	      that.close();
	      event.preventDefault();
	      break;
	    case KEY_CODES.BACKSPACE:
	      stopImmediatePropagation(event);
	      break;
	  }
	};
	MobileTextEditor.prototype.open = function() {
	  this.instance.addHook('beforeKeyDown', this.onBeforeKeyDown);
	  addClass(this.editorContainer, 'active');
	  removeClass(this.cellPointer, 'hidden');
	  this.updateEditorPosition();
	};
	MobileTextEditor.prototype.focus = function() {
	  this.TEXTAREA.focus();
	  setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length);
	};
	MobileTextEditor.prototype.close = function() {
	  this.TEXTAREA.blur();
	  this.instance.removeHook('beforeKeyDown', this.onBeforeKeyDown);
	  removeClass(this.editorContainer, 'active');
	};
	MobileTextEditor.prototype.scrollToView = function() {
	  var coords = this.instance.getSelectedRange().highlight;
	  this.instance.view.scrollViewport(coords);
	};
	MobileTextEditor.prototype.hideCellPointer = function() {
	  if (!hasClass(this.cellPointer, 'hidden')) {
	    addClass(this.cellPointer, 'hidden');
	  }
	};
	MobileTextEditor.prototype.updateEditorPosition = function(x, y) {
	  if (x && y) {
	    x = parseInt(x, 10);
	    y = parseInt(y, 10);
	    this.editorContainer.style.top = y + 'px';
	    this.editorContainer.style.left = x + 'px';
	  } else {
	    var selection = this.instance.getSelected(),
	        selectedCell = this.instance.getCell(selection[0], selection[1]);
	    if (!domDimensionsCache.cellPointer) {
	      domDimensionsCache.cellPointer = {
	        height: outerHeight(this.cellPointer),
	        width: outerWidth(this.cellPointer)
	      };
	    }
	    if (!domDimensionsCache.editorContainer) {
	      domDimensionsCache.editorContainer = {width: outerWidth(this.editorContainer)};
	    }
	    if (selectedCell !== undefined) {
	      var scrollLeft = this.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer == window ? 0 : getScrollLeft(this.instance.view.wt.wtOverlays.leftOverlay.holder);
	      var scrollTop = this.instance.view.wt.wtOverlays.topOverlay.trimmingContainer == window ? 0 : getScrollTop(this.instance.view.wt.wtOverlays.topOverlay.holder);
	      var selectedCellOffset = offset(selectedCell),
	          selectedCellWidth = outerWidth(selectedCell),
	          currentScrollPosition = {
	            x: scrollLeft,
	            y: scrollTop
	          };
	      this.editorContainer.style.top = parseInt(selectedCellOffset.top + outerHeight(selectedCell) - currentScrollPosition.y + domDimensionsCache.cellPointer.height, 10) + 'px';
	      this.editorContainer.style.left = parseInt((window.innerWidth / 2) - (domDimensionsCache.editorContainer.width / 2), 10) + 'px';
	      if (selectedCellOffset.left + selectedCellWidth / 2 > parseInt(this.editorContainer.style.left, 10) + domDimensionsCache.editorContainer.width) {
	        this.editorContainer.style.left = window.innerWidth - domDimensionsCache.editorContainer.width + 'px';
	      } else if (selectedCellOffset.left + selectedCellWidth / 2 < parseInt(this.editorContainer.style.left, 10) + 20) {
	        this.editorContainer.style.left = 0 + 'px';
	      }
	      this.cellPointer.style.left = parseInt(selectedCellOffset.left - (domDimensionsCache.cellPointer.width / 2) - offset(this.editorContainer).left + (selectedCellWidth / 2) - currentScrollPosition.x, 10) + 'px';
	    }
	  }
	};
	MobileTextEditor.prototype.updateEditorData = function() {
	  var selected = this.instance.getSelected(),
	      selectedValue = this.instance.getDataAtCell(selected[0], selected[1]);
	  this.row = selected[0];
	  this.col = selected[1];
	  this.setValue(selectedValue);
	  this.updateEditorPosition();
	};
	MobileTextEditor.prototype.prepareAndSave = function() {
	  var val;
	  if (!this.valueChanged()) {
	    return true;
	  }
	  if (this.instance.getSettings().trimWhitespace) {
	    val = [[String.prototype.trim.call(this.getValue())]];
	  } else {
	    val = [[this.getValue()]];
	  }
	  this.saveValue(val);
	};
	MobileTextEditor.prototype.bindEvents = function() {
	  var that = this;
	  this.eventManager.addEventListener(this.controls.leftButton, 'touchend', function(event) {
	    that.prepareAndSave();
	    that.instance.selection.transformStart(0, -1, null, true);
	    that.updateEditorData();
	    event.preventDefault();
	  });
	  this.eventManager.addEventListener(this.controls.rightButton, 'touchend', function(event) {
	    that.prepareAndSave();
	    that.instance.selection.transformStart(0, 1, null, true);
	    that.updateEditorData();
	    event.preventDefault();
	  });
	  this.eventManager.addEventListener(this.controls.upButton, 'touchend', function(event) {
	    that.prepareAndSave();
	    that.instance.selection.transformStart(-1, 0, null, true);
	    that.updateEditorData();
	    event.preventDefault();
	  });
	  this.eventManager.addEventListener(this.controls.downButton, 'touchend', function(event) {
	    that.prepareAndSave();
	    that.instance.selection.transformStart(1, 0, null, true);
	    that.updateEditorData();
	    event.preventDefault();
	  });
	  this.eventManager.addEventListener(this.moveHandle, 'touchstart', function(event) {
	    if (event.touches.length == 1) {
	      var touch = event.touches[0],
	          onTouchPosition = {
	            x: that.editorContainer.offsetLeft,
	            y: that.editorContainer.offsetTop
	          },
	          onTouchOffset = {
	            x: touch.pageX - onTouchPosition.x,
	            y: touch.pageY - onTouchPosition.y
	          };
	      that.eventManager.addEventListener(this, 'touchmove', function(event) {
	        var touch = event.touches[0];
	        that.updateEditorPosition(touch.pageX - onTouchOffset.x, touch.pageY - onTouchOffset.y);
	        that.hideCellPointer();
	        event.preventDefault();
	      });
	    }
	  });
	  this.eventManager.addEventListener(document.body, 'touchend', function(event) {
	    if (!isChildOf(event.target, that.editorContainer) && !isChildOf(event.target, that.instance.rootElement)) {
	      that.close();
	    }
	  });
	  this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.leftOverlay.holder, 'scroll', function(event) {
	    if (that.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer != window) {
	      that.hideCellPointer();
	    }
	  });
	  this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.topOverlay.holder, 'scroll', function(event) {
	    if (that.instance.view.wt.wtOverlays.topOverlay.trimmingContainer != window) {
	      that.hideCellPointer();
	    }
	  });
	};
	MobileTextEditor.prototype.destroy = function() {
	  this.eventManager.clear();
	  this.editorContainer.parentNode.removeChild(this.editorContainer);
	};
	;
	registerEditor('mobile', MobileTextEditor);

	//# 
	},{"_baseEditor":29,"editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],36:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  NumericEditor: {get: function() {
	      return NumericEditor;
	    }},
	  __esModule: {value: true}
	});
	var $__numeral__,
	    $___46__46__47_editors__,
	    $__textEditor__;
	var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;
	var $__1 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__1.getEditor,
	    registerEditor = $__1.registerEditor;
	var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;
	var NumericEditor = function NumericEditor() {
	  $traceurRuntime.superConstructor($NumericEditor).apply(this, arguments);
	};
	var $NumericEditor = NumericEditor;
	($traceurRuntime.createClass)(NumericEditor, {beginEditing: function(initialValue) {
	    if (typeof initialValue === 'undefined' && this.originalValue) {
	      if (typeof this.cellProperties.language !== 'undefined') {
	        numeral.language(this.cellProperties.language);
	      }
	      var decimalDelimiter = numeral.languageData().delimiters.decimal;
	      initialValue = ('' + this.originalValue).replace('.', decimalDelimiter);
	    }
	    $traceurRuntime.superGet(this, $NumericEditor.prototype, "beginEditing").call(this, initialValue);
	  }}, {}, TextEditor);
	;
	registerEditor('numeric', NumericEditor);

	//# 
	},{"editors":28,"numeral":"numeral","textEditor":39}],37:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  PasswordEditor: {get: function() {
	      return PasswordEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_editors__,
	    $__textEditor__;
	var empty = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).empty;
	var $__1 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__1.getEditor,
	    registerEditor = $__1.registerEditor;
	var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;
	var PasswordEditor = function PasswordEditor() {
	  $traceurRuntime.superConstructor($PasswordEditor).apply(this, arguments);
	};
	var $PasswordEditor = PasswordEditor;
	($traceurRuntime.createClass)(PasswordEditor, {createElements: function() {
	    $traceurRuntime.superGet(this, $PasswordEditor.prototype, "createElements").call(this);
	    this.TEXTAREA = document.createElement('input');
	    this.TEXTAREA.setAttribute('type', 'password');
	    this.TEXTAREA.className = 'handsontableInput';
	    this.textareaStyle = this.TEXTAREA.style;
	    this.textareaStyle.width = 0;
	    this.textareaStyle.height = 0;
	    empty(this.TEXTAREA_PARENT);
	    this.TEXTAREA_PARENT.appendChild(this.TEXTAREA);
	  }}, {}, TextEditor);
	;
	registerEditor('password', PasswordEditor);

	//# 
	},{"editors":28,"helpers/dom/element":44,"textEditor":39}],38:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  SelectEditor: {get: function() {
	      return SelectEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_editors__,
	    $___95_baseEditor__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    empty = $__0.empty,
	    fastInnerHTML = $__0.fastInnerHTML,
	    getComputedStyle = $__0.getComputedStyle,
	    getCssTransform = $__0.getCssTransform,
	    getScrollableElement = $__0.getScrollableElement,
	    offset = $__0.offset,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth,
	    resetCssTransform = $__0.resetCssTransform;
	var stopImmediatePropagation = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;
	var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;
	var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__3.getEditor,
	    registerEditor = $__3.registerEditor;
	var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;
	var SelectEditor = BaseEditor.prototype.extend();
	SelectEditor.prototype.init = function() {
	  this.select = document.createElement('SELECT');
	  addClass(this.select, 'htSelectEditor');
	  this.select.style.display = 'none';
	  this.instance.rootElement.appendChild(this.select);
	  this.registerHooks();
	};
	SelectEditor.prototype.registerHooks = function() {
	  var $__5 = this;
	  this.instance.addHook('afterScrollVertically', (function() {
	    return $__5.refreshDimensions();
	  }));
	  this.instance.addHook('afterColumnResize', (function() {
	    return $__5.refreshDimensions();
	  }));
	  this.instance.addHook('afterRowResize', (function() {
	    return $__5.refreshDimensions();
	  }));
	};
	SelectEditor.prototype.prepare = function() {
	  BaseEditor.prototype.prepare.apply(this, arguments);
	  var selectOptions = this.cellProperties.selectOptions;
	  var options;
	  if (typeof selectOptions == 'function') {
	    options = this.prepareOptions(selectOptions(this.row, this.col, this.prop));
	  } else {
	    options = this.prepareOptions(selectOptions);
	  }
	  empty(this.select);
	  for (var option in options) {
	    if (options.hasOwnProperty(option)) {
	      var optionElement = document.createElement('OPTION');
	      optionElement.value = option;
	      fastInnerHTML(optionElement, options[option]);
	      this.select.appendChild(optionElement);
	    }
	  }
	};
	SelectEditor.prototype.prepareOptions = function(optionsToPrepare) {
	  var preparedOptions = {};
	  if (Array.isArray(optionsToPrepare)) {
	    for (var i = 0,
	        len = optionsToPrepare.length; i < len; i++) {
	      preparedOptions[optionsToPrepare[i]] = optionsToPrepare[i];
	    }
	  } else if (typeof optionsToPrepare == 'object') {
	    preparedOptions = optionsToPrepare;
	  }
	  return preparedOptions;
	};
	SelectEditor.prototype.getValue = function() {
	  return this.select.value;
	};
	SelectEditor.prototype.setValue = function(value) {
	  this.select.value = value;
	};
	var onBeforeKeyDown = function(event) {
	  var instance = this;
	  var editor = instance.getActiveEditor();
	  switch (event.keyCode) {
	    case KEY_CODES.ARROW_UP:
	      var previousOptionIndex = editor.select.selectedIndex - 1;
	      if (previousOptionIndex >= 0) {
	        editor.select[previousOptionIndex].selected = true;
	      }
	      stopImmediatePropagation(event);
	      event.preventDefault();
	      break;
	    case KEY_CODES.ARROW_DOWN:
	      var nextOptionIndex = editor.select.selectedIndex + 1;
	      if (nextOptionIndex <= editor.select.length - 1) {
	        editor.select[nextOptionIndex].selected = true;
	      }
	      stopImmediatePropagation(event);
	      event.preventDefault();
	      break;
	  }
	};
	SelectEditor.prototype.open = function() {
	  this._opened = true;
	  this.refreshDimensions();
	  this.select.style.display = '';
	  this.instance.addHook('beforeKeyDown', onBeforeKeyDown);
	};
	SelectEditor.prototype.close = function() {
	  this._opened = false;
	  this.select.style.display = 'none';
	  this.instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	};
	SelectEditor.prototype.focus = function() {
	  this.select.focus();
	};
	SelectEditor.prototype.refreshDimensions = function() {
	  if (this.state !== Handsontable.EditorState.EDITING) {
	    return;
	  }
	  this.TD = this.getEditedCell();
	  if (!this.TD) {
	    this.close();
	    return;
	  }
	  var width = outerWidth(this.TD) + 1,
	      height = outerHeight(this.TD) + 1,
	      currentOffset = offset(this.TD),
	      containerOffset = offset(this.instance.rootElement),
	      scrollableContainer = getScrollableElement(this.TD),
	      editTop = currentOffset.top - containerOffset.top - 1 - (scrollableContainer.scrollTop || 0),
	      editLeft = currentOffset.left - containerOffset.left - 1 - (scrollableContainer.scrollLeft || 0),
	      editorSection = this.checkEditorSection(),
	      cssTransformOffset;
	  var settings = this.instance.getSettings();
	  var rowHeadersCount = settings.rowHeaders ? 1 : 0;
	  var colHeadersCount = settings.colHeaders ? 1 : 0;
	  switch (editorSection) {
	    case 'top':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'left':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'top-left-corner':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'bottom-left-corner':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.bottomLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'bottom':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.bottomOverlay.clone.wtTable.holder.parentNode);
	      break;
	  }
	  if (this.instance.getSelected()[0] === 0) {
	    editTop += 1;
	  }
	  if (this.instance.getSelected()[1] === 0) {
	    editLeft += 1;
	  }
	  var selectStyle = this.select.style;
	  if (cssTransformOffset && cssTransformOffset != -1) {
	    selectStyle[cssTransformOffset[0]] = cssTransformOffset[1];
	  } else {
	    resetCssTransform(this.select);
	  }
	  var cellComputedStyle = getComputedStyle(this.TD);
	  if (parseInt(cellComputedStyle.borderTopWidth, 10) > 0) {
	    height -= 1;
	  }
	  if (parseInt(cellComputedStyle.borderLeftWidth, 10) > 0) {
	    width -= 1;
	  }
	  selectStyle.height = height + 'px';
	  selectStyle.minWidth = width + 'px';
	  selectStyle.top = editTop + 'px';
	  selectStyle.left = editLeft + 'px';
	  selectStyle.margin = '0px';
	};
	SelectEditor.prototype.getEditedCell = function() {
	  var editorSection = this.checkEditorSection(),
	      editedCell;
	  switch (editorSection) {
	    case 'top':
	      editedCell = this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.select.style.zIndex = 101;
	      break;
	    case 'corner':
	      editedCell = this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.select.style.zIndex = 103;
	      break;
	    case 'left':
	      editedCell = this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.select.style.zIndex = 102;
	      break;
	    default:
	      editedCell = this.instance.getCell(this.row, this.col);
	      this.select.style.zIndex = '';
	      break;
	  }
	  return editedCell != -1 && editedCell != -2 ? editedCell : void 0;
	};
	;
	registerEditor('select', SelectEditor);

	//# 
	},{"_baseEditor":29,"editors":28,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],39:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  TextEditor: {get: function() {
	      return TextEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $__autoResize__,
	    $___95_baseEditor__,
	    $___46__46__47_eventManager__,
	    $___46__46__47_editors__,
	    $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_dom_47_event__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    getCaretPosition = $__0.getCaretPosition,
	    getComputedStyle = $__0.getComputedStyle,
	    getCssTransform = $__0.getCssTransform,
	    getScrollableElement = $__0.getScrollableElement,
	    innerWidth = $__0.innerWidth,
	    offset = $__0.offset,
	    resetCssTransform = $__0.resetCssTransform,
	    setCaretPosition = $__0.setCaretPosition;
	var autoResize = ($__autoResize__ = require("autoResize"), $__autoResize__ && $__autoResize__.__esModule && $__autoResize__ || {default: $__autoResize__}).default;
	var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;
	var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;
	var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),
	    getEditor = $__4.getEditor,
	    registerEditor = $__4.registerEditor;
	var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;
	var $__6 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),
	    stopPropagation = $__6.stopPropagation,
	    stopImmediatePropagation = $__6.stopImmediatePropagation,
	    isImmediatePropagationStopped = $__6.isImmediatePropagationStopped;
	var TextEditor = BaseEditor.prototype.extend();
	TextEditor.prototype.init = function() {
	  var that = this;
	  this.createElements();
	  this.eventManager = eventManagerObject(this);
	  this.bindEvents();
	  this.autoResize = autoResize();
	  this.instance.addHook('afterDestroy', function() {
	    that.destroy();
	  });
	};
	TextEditor.prototype.getValue = function() {
	  return this.TEXTAREA.value;
	};
	TextEditor.prototype.setValue = function(newValue) {
	  this.TEXTAREA.value = newValue;
	};
	var onBeforeKeyDown = function onBeforeKeyDown(event) {
	  var instance = this,
	      that = instance.getActiveEditor(),
	      ctrlDown;
	  ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;
	  if (event.target !== that.TEXTAREA || isImmediatePropagationStopped(event)) {
	    return;
	  }
	  if (event.keyCode === 17 || event.keyCode === 224 || event.keyCode === 91 || event.keyCode === 93) {
	    stopImmediatePropagation(event);
	    return;
	  }
	  switch (event.keyCode) {
	    case KEY_CODES.ARROW_RIGHT:
	      if (that.isInFullEditMode()) {
	        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {
	          stopImmediatePropagation(event);
	        }
	      }
	      break;
	    case KEY_CODES.ARROW_LEFT:
	      if (that.isInFullEditMode()) {
	        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {
	          stopImmediatePropagation(event);
	        }
	      }
	      break;
	    case KEY_CODES.ARROW_UP:
	    case KEY_CODES.ARROW_DOWN:
	      if (that.isInFullEditMode()) {
	        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {
	          stopImmediatePropagation(event);
	        }
	      }
	      break;
	    case KEY_CODES.ENTER:
	      var selected = that.instance.getSelected();
	      var isMultipleSelection = !(selected[0] === selected[2] && selected[1] === selected[3]);
	      if ((ctrlDown && !isMultipleSelection) || event.altKey) {
	        if (that.isOpened()) {
	          var caretPosition = getCaretPosition(that.TEXTAREA),
	              value = that.getValue();
	          var newValue = value.slice(0, caretPosition) + '\n' + value.slice(caretPosition);
	          that.setValue(newValue);
	          setCaretPosition(that.TEXTAREA, caretPosition + 1);
	        } else {
	          that.beginEditing(that.originalValue + '\n');
	        }
	        stopImmediatePropagation(event);
	      }
	      event.preventDefault();
	      break;
	    case KEY_CODES.A:
	    case KEY_CODES.X:
	    case KEY_CODES.C:
	    case KEY_CODES.V:
	      if (ctrlDown) {
	        stopImmediatePropagation(event);
	      }
	      break;
	    case KEY_CODES.BACKSPACE:
	    case KEY_CODES.DELETE:
	    case KEY_CODES.HOME:
	    case KEY_CODES.END:
	      stopImmediatePropagation(event);
	      break;
	  }
	  if ([KEY_CODES.ARROW_UP, KEY_CODES.ARROW_RIGHT, KEY_CODES.ARROW_DOWN, KEY_CODES.ARROW_LEFT].indexOf(event.keyCode) === -1) {
	    that.autoResize.resize(String.fromCharCode(event.keyCode));
	  }
	};
	TextEditor.prototype.open = function() {
	  this.refreshDimensions();
	  this.instance.addHook('beforeKeyDown', onBeforeKeyDown);
	};
	TextEditor.prototype.close = function(tdOutside) {
	  this.textareaParentStyle.display = 'none';
	  this.autoResize.unObserve();
	  if (document.activeElement === this.TEXTAREA) {
	    this.instance.listen();
	  }
	  this.instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	};
	TextEditor.prototype.focus = function() {
	  this.TEXTAREA.focus();
	  setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length);
	};
	TextEditor.prototype.createElements = function() {
	  this.TEXTAREA = document.createElement('TEXTAREA');
	  addClass(this.TEXTAREA, 'handsontableInput');
	  this.textareaStyle = this.TEXTAREA.style;
	  this.textareaStyle.width = 0;
	  this.textareaStyle.height = 0;
	  this.TEXTAREA_PARENT = document.createElement('DIV');
	  addClass(this.TEXTAREA_PARENT, 'handsontableInputHolder');
	  this.textareaParentStyle = this.TEXTAREA_PARENT.style;
	  this.textareaParentStyle.top = 0;
	  this.textareaParentStyle.left = 0;
	  this.textareaParentStyle.display = 'none';
	  this.TEXTAREA_PARENT.appendChild(this.TEXTAREA);
	  this.instance.rootElement.appendChild(this.TEXTAREA_PARENT);
	  var that = this;
	  this.instance._registerTimeout(setTimeout(function() {
	    that.refreshDimensions();
	  }, 0));
	};
	TextEditor.prototype.getEditedCell = function() {
	  var editorSection = this.checkEditorSection(),
	      editedCell;
	  switch (editorSection) {
	    case 'top':
	      editedCell = this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.textareaParentStyle.zIndex = 101;
	      break;
	    case 'top-left-corner':
	      editedCell = this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.textareaParentStyle.zIndex = 103;
	      break;
	    case 'bottom-left-corner':
	      editedCell = this.instance.view.wt.wtOverlays.bottomLeftCornerOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.textareaParentStyle.zIndex = 103;
	      break;
	    case 'left':
	      editedCell = this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.textareaParentStyle.zIndex = 102;
	      break;
	    case 'bottom':
	      editedCell = this.instance.view.wt.wtOverlays.bottomOverlay.clone.wtTable.getCell({
	        row: this.row,
	        col: this.col
	      });
	      this.textareaParentStyle.zIndex = 102;
	      break;
	    default:
	      editedCell = this.instance.getCell(this.row, this.col);
	      this.textareaParentStyle.zIndex = '';
	      break;
	  }
	  return editedCell != -1 && editedCell != -2 ? editedCell : void 0;
	};
	TextEditor.prototype.refreshDimensions = function() {
	  if (this.state !== Handsontable.EditorState.EDITING) {
	    return;
	  }
	  this.TD = this.getEditedCell();
	  if (!this.TD) {
	    this.close(true);
	    return;
	  }
	  var currentOffset = offset(this.TD),
	      containerOffset = offset(this.instance.rootElement),
	      scrollableContainer = getScrollableElement(this.TD),
	      totalRowsCount = this.instance.countRows(),
	      editTop = currentOffset.top - containerOffset.top - 1 - (scrollableContainer.scrollTop || 0),
	      editLeft = currentOffset.left - containerOffset.left - 1 - (scrollableContainer.scrollLeft || 0),
	      settings = this.instance.getSettings(),
	      rowHeadersCount = settings.rowHeaders ? 1 : 0,
	      colHeadersCount = settings.colHeaders ? 1 : 0,
	      editorSection = this.checkEditorSection(),
	      backgroundColor = this.TD.style.backgroundColor,
	      cssTransformOffset;
	  switch (editorSection) {
	    case 'top':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'left':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'top-left-corner':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'bottom-left-corner':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.bottomLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      break;
	    case 'bottom':
	      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.bottomOverlay.clone.wtTable.holder.parentNode);
	      break;
	  }
	  if (colHeadersCount && this.instance.getSelected()[0] === 0 || (settings.fixedRowsBottom && this.instance.getSelected()[0] === totalRowsCount - settings.fixedRowsBottom)) {
	    editTop += 1;
	  }
	  if (this.instance.getSelected()[1] === 0) {
	    editLeft += 1;
	  }
	  if (cssTransformOffset && cssTransformOffset != -1) {
	    this.textareaParentStyle[cssTransformOffset[0]] = cssTransformOffset[1];
	  } else {
	    resetCssTransform(this.textareaParentStyle);
	  }
	  this.textareaParentStyle.top = editTop + 'px';
	  this.textareaParentStyle.left = editLeft + 'px';
	  var cellTopOffset = this.TD.offsetTop - this.instance.view.wt.wtOverlays.topOverlay.getScrollPosition(),
	      cellLeftOffset = this.TD.offsetLeft - this.instance.view.wt.wtOverlays.leftOverlay.getScrollPosition();
	  var width = innerWidth(this.TD) - 8;
	  var maxWidth = this.instance.view.maximumVisibleElementWidth(cellLeftOffset) - 9;
	  var height = this.TD.scrollHeight + 1;
	  var maxHeight = Math.max(this.instance.view.maximumVisibleElementHeight(cellTopOffset) - 2, 23);
	  var cellComputedStyle = getComputedStyle(this.TD);
	  this.TEXTAREA.style.fontSize = cellComputedStyle.fontSize;
	  this.TEXTAREA.style.fontFamily = cellComputedStyle.fontFamily;
	  this.TEXTAREA.style.backgroundColor = '';
	  this.TEXTAREA.style.backgroundColor = backgroundColor ? backgroundColor : getComputedStyle(this.TEXTAREA).backgroundColor;
	  this.autoResize.init(this.TEXTAREA, {
	    minHeight: Math.min(height, maxHeight),
	    maxHeight: maxHeight,
	    minWidth: Math.min(width, maxWidth),
	    maxWidth: maxWidth
	  }, true);
	  this.textareaParentStyle.display = 'block';
	};
	TextEditor.prototype.bindEvents = function() {
	  var editor = this;
	  this.eventManager.addEventListener(this.TEXTAREA, 'cut', function(event) {
	    stopPropagation(event);
	  });
	  this.eventManager.addEventListener(this.TEXTAREA, 'paste', function(event) {
	    stopPropagation(event);
	  });
	  this.instance.addHook('afterScrollVertically', function() {
	    editor.refreshDimensions();
	  });
	  this.instance.addHook('afterColumnResize', function() {
	    editor.refreshDimensions();
	    editor.focus();
	  });
	  this.instance.addHook('afterRowResize', function() {
	    editor.refreshDimensions();
	    editor.focus();
	  });
	  this.instance.addHook('afterDestroy', function() {
	    editor.eventManager.destroy();
	  });
	};
	TextEditor.prototype.destroy = function() {
	  this.eventManager.destroy();
	};
	;
	registerEditor('text', TextEditor);

	//# 
	},{"_baseEditor":29,"autoResize":"autoResize","editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],40:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  EventManager: {get: function() {
	      return EventManager;
	    }},
	  eventManager: {get: function() {
	      return eventManager;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_dom_47_element__,
	    $__helpers_47_browser__;
	var $__0 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),
	    polymerWrap = $__0.polymerWrap,
	    closest = $__0.closest;
	var isWebComponentSupportedNatively = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__}).isWebComponentSupportedNatively;
	var EventManager = function EventManager() {
	  var context = arguments[0] !== (void 0) ? arguments[0] : null;
	  this.context = context || this;
	  if (!this.context.eventListeners) {
	    this.context.eventListeners = [];
	  }
	};
	($traceurRuntime.createClass)(EventManager, {
	  addEventListener: function(element, eventName, callback) {
	    var $__2 = this;
	    var context = this.context;
	    function callbackProxy(event) {
	      if (event.target == void 0 && event.srcElement != void 0) {
	        if (event.definePoperty) {
	          event.definePoperty('target', {value: event.srcElement});
	        } else {
	          event.target = event.srcElement;
	        }
	      }
	      if (event.preventDefault == void 0) {
	        if (event.definePoperty) {
	          event.definePoperty('preventDefault', {value: function() {
	              this.returnValue = false;
	            }});
	        } else {
	          event.preventDefault = function() {
	            this.returnValue = false;
	          };
	        }
	      }
	      event = extendEvent(context, event);
	      callback.call(this, event);
	    }
	    this.context.eventListeners.push({
	      element: element,
	      event: eventName,
	      callback: callback,
	      callbackProxy: callbackProxy
	    });
	    if (window.addEventListener) {
	      element.addEventListener(eventName, callbackProxy, false);
	    } else {
	      element.attachEvent('on' + eventName, callbackProxy);
	    }
	    Handsontable.countEventManagerListeners++;
	    return (function() {
	      $__2.removeEventListener(element, eventName, callback);
	    });
	  },
	  removeEventListener: function(element, eventName, callback) {
	    var len = this.context.eventListeners.length;
	    var tmpEvent;
	    while (len--) {
	      tmpEvent = this.context.eventListeners[len];
	      if (tmpEvent.event == eventName && tmpEvent.element == element) {
	        if (callback && callback != tmpEvent.callback) {
	          continue;
	        }
	        this.context.eventListeners.splice(len, 1);
	        if (tmpEvent.element.removeEventListener) {
	          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, false);
	        } else {
	          tmpEvent.element.detachEvent('on' + tmpEvent.event, tmpEvent.callbackProxy);
	        }
	        Handsontable.countEventManagerListeners--;
	      }
	    }
	  },
	  clearEvents: function() {
	    if (!this.context) {
	      return;
	    }
	    var len = this.context.eventListeners.length;
	    while (len--) {
	      var event = this.context.eventListeners[len];
	      if (event) {
	        this.removeEventListener(event.element, event.event, event.callback);
	      }
	    }
	  },
	  clear: function() {
	    this.clearEvents();
	  },
	  destroy: function() {
	    this.clearEvents();
	    this.context = null;
	  },
	  fireEvent: function(element, eventName) {
	    var options = {
	      bubbles: true,
	      cancelable: (eventName !== 'mousemove'),
	      view: window,
	      detail: 0,
	      screenX: 0,
	      screenY: 0,
	      clientX: 1,
	      clientY: 1,
	      ctrlKey: false,
	      altKey: false,
	      shiftKey: false,
	      metaKey: false,
	      button: 0,
	      relatedTarget: undefined
	    };
	    var event;
	    if (document.createEvent) {
	      event = document.createEvent('MouseEvents');
	      event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || document.body.parentNode);
	    } else {
	      event = document.createEventObject();
	    }
	    if (element.dispatchEvent) {
	      element.dispatchEvent(event);
	    } else {
	      element.fireEvent('on' + eventName, event);
	    }
	  }
	}, {});
	function extendEvent(context, event) {
	  var componentName = 'HOT-TABLE';
	  var isHotTableSpotted;
	  var fromElement;
	  var realTarget;
	  var target;
	  var len;
	  event.isTargetWebComponent = false;
	  event.realTarget = event.target;
	  if (!Handsontable.eventManager.isHotTableEnv) {
	    return event;
	  }
	  event = polymerWrap(event);
	  len = event.path ? event.path.length : 0;
	  while (len--) {
	    if (event.path[len].nodeName === componentName) {
	      isHotTableSpotted = true;
	    } else if (isHotTableSpotted && event.path[len].shadowRoot) {
	      target = event.path[len];
	      break;
	    }
	    if (len === 0 && !target) {
	      target = event.path[len];
	    }
	  }
	  if (!target) {
	    target = event.target;
	  }
	  event.isTargetWebComponent = true;
	  if (isWebComponentSupportedNatively()) {
	    event.realTarget = event.srcElement || event.toElement;
	  } else if (context instanceof Handsontable.Core || context instanceof Walkontable) {
	    if (context instanceof Handsontable.Core) {
	      fromElement = context.view ? context.view.wt.wtTable.TABLE : null;
	    } else if (context instanceof Walkontable) {
	      fromElement = context.wtTable.TABLE.parentNode.parentNode;
	    }
	    realTarget = closest(event.target, [componentName], fromElement);
	    if (realTarget) {
	      event.realTarget = fromElement.querySelector(componentName) || event.target;
	    } else {
	      event.realTarget = event.target;
	    }
	  }
	  Object.defineProperty(event, 'target', {
	    get: function() {
	      return polymerWrap(target);
	    },
	    enumerable: true,
	    configurable: true
	  });
	  return event;
	}
	;
	window.Handsontable = window.Handsontable || {};
	Handsontable.countEventManagerListeners = 0;
	Handsontable.eventManager = eventManager;
	function eventManager(context) {
	  return new EventManager(context);
	}

	//# 
	},{"helpers/browser":42,"helpers/dom/element":44}],41:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  to2dArray: {get: function() {
	      return to2dArray;
	    }},
	  extendArray: {get: function() {
	      return extendArray;
	    }},
	  pivot: {get: function() {
	      return pivot;
	    }},
	  arrayReduce: {get: function() {
	      return arrayReduce;
	    }},
	  arrayFilter: {get: function() {
	      return arrayFilter;
	    }},
	  arrayMap: {get: function() {
	      return arrayMap;
	    }},
	  arrayEach: {get: function() {
	      return arrayEach;
	    }},
	  arraySum: {get: function() {
	      return arraySum;
	    }},
	  arrayAvg: {get: function() {
	      return arrayAvg;
	    }},
	  arrayFlatten: {get: function() {
	      return arrayFlatten;
	    }},
	  arrayUnique: {get: function() {
	      return arrayUnique;
	    }},
	  __esModule: {value: true}
	});
	function to2dArray(arr) {
	  var i = 0,
	      ilen = arr.length;
	  while (i < ilen) {
	    arr[i] = [arr[i]];
	    i++;
	  }
	}
	function extendArray(arr, extension) {
	  var i = 0,
	      ilen = extension.length;
	  while (i < ilen) {
	    arr.push(extension[i]);
	    i++;
	  }
	}
	function pivot(arr) {
	  var pivotedArr = [];
	  if (!arr || arr.length === 0 || !arr[0] || arr[0].length === 0) {
	    return pivotedArr;
	  }
	  var rowCount = arr.length;
	  var colCount = arr[0].length;
	  for (var i = 0; i < rowCount; i++) {
	    for (var j = 0; j < colCount; j++) {
	      if (!pivotedArr[j]) {
	        pivotedArr[j] = [];
	      }
	      pivotedArr[j][i] = arr[i][j];
	    }
	  }
	  return pivotedArr;
	}
	function arrayReduce(array, iteratee, accumulator, initFromArray) {
	  var index = -1,
	      length = array.length;
	  if (initFromArray && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array.length,
	      resIndex = -1,
	      result = [];
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[++resIndex] = value;
	    }
	  }
	  return result;
	}
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array.length,
	      resIndex = -1,
	      result = [];
	  while (++index < length) {
	    var value = array[index];
	    result[++resIndex] = iteratee(value, index, array);
	  }
	  return result;
	}
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array.length;
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	function arraySum(array) {
	  return arrayReduce(array, (function(a, b) {
	    return (a + b);
	  }), 0);
	}
	function arrayAvg(array) {
	  if (!array.length) {
	    return 0;
	  }
	  return arraySum(array) / array.length;
	}
	function arrayFlatten(array) {
	  return arrayReduce(array, (function(initial, value) {
	    return initial.concat(Array.isArray(value) ? arrayFlatten(value) : value);
	  }), []);
	}
	function arrayUnique(array) {
	  var unique = [];
	  arrayEach(array, (function(value) {
	    if (unique.indexOf(value) === -1) {
	      unique.push(value);
	    }
	  }));
	  return unique;
	}

	//# 
	},{}],42:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  isIE8: {get: function() {
	      return isIE8;
	    }},
	  isIE9: {get: function() {
	      return isIE9;
	    }},
	  isSafari: {get: function() {
	      return isSafari;
	    }},
	  isChrome: {get: function() {
	      return isChrome;
	    }},
	  isMobileBrowser: {get: function() {
	      return isMobileBrowser;
	    }},
	  isTouchSupported: {get: function() {
	      return isTouchSupported;
	    }},
	  isWebComponentSupportedNatively: {get: function() {
	      return isWebComponentSupportedNatively;
	    }},
	  hasCaptionProblem: {get: function() {
	      return hasCaptionProblem;
	    }},
	  __esModule: {value: true}
	});
	var _isIE8 = !(document.createTextNode('test').textContent);
	function isIE8() {
	  return _isIE8;
	}
	var _isIE9 = !!(document.documentMode);
	function isIE9() {
	  return _isIE9;
	}
	var _isSafari = (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor));
	function isSafari() {
	  return _isSafari;
	}
	var _isChrome = (/Chrome/.test(navigator.userAgent) && /Google/.test(navigator.vendor));
	function isChrome() {
	  return _isChrome;
	}
	function isMobileBrowser(userAgent) {
	  if (!userAgent) {
	    userAgent = navigator.userAgent;
	  }
	  return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent));
	}
	function isTouchSupported() {
	  return ('ontouchstart' in window);
	}
	function isWebComponentSupportedNatively() {
	  var test = document.createElement('div');
	  return test.createShadowRoot && test.createShadowRoot.toString().match(/\[native code\]/) ? true : false;
	}
	var _hasCaptionProblem;
	function detectCaptionProblem() {
	  var TABLE = document.createElement('TABLE');
	  TABLE.style.borderSpacing = 0;
	  TABLE.style.borderWidth = 0;
	  TABLE.style.padding = 0;
	  var TBODY = document.createElement('TBODY');
	  TABLE.appendChild(TBODY);
	  TBODY.appendChild(document.createElement('TR'));
	  TBODY.firstChild.appendChild(document.createElement('TD'));
	  TBODY.firstChild.firstChild.innerHTML = '<tr><td>t<br>t</td></tr>';
	  var CAPTION = document.createElement('CAPTION');
	  CAPTION.innerHTML = 'c<br>c<br>c<br>c';
	  CAPTION.style.padding = 0;
	  CAPTION.style.margin = 0;
	  TABLE.insertBefore(CAPTION, TBODY);
	  document.body.appendChild(TABLE);
	  _hasCaptionProblem = (TABLE.offsetHeight < 2 * TABLE.lastChild.offsetHeight);
	  document.body.removeChild(TABLE);
	}
	function hasCaptionProblem() {
	  if (_hasCaptionProblem === void 0) {
	    detectCaptionProblem();
	  }
	  return _hasCaptionProblem;
	}

	//# 
	},{}],43:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  spreadsheetColumnLabel: {get: function() {
	      return spreadsheetColumnLabel;
	    }},
	  createSpreadsheetData: {get: function() {
	      return createSpreadsheetData;
	    }},
	  createSpreadsheetObjectData: {get: function() {
	      return createSpreadsheetObjectData;
	    }},
	  translateRowsToColumns: {get: function() {
	      return translateRowsToColumns;
	    }},
	  cellMethodLookupFactory: {get: function() {
	      return cellMethodLookupFactory;
	    }},
	  __esModule: {value: true}
	});
	var $__object__;
	var getPrototypeOf = ($__object__ = require("object"), $__object__ && $__object__.__esModule && $__object__ || {default: $__object__}).getPrototypeOf;
	function spreadsheetColumnLabel(index) {
	  var dividend = index + 1;
	  var columnLabel = '';
	  var modulo;
	  while (dividend > 0) {
	    modulo = (dividend - 1) % 26;
	    columnLabel = String.fromCharCode(65 + modulo) + columnLabel;
	    dividend = parseInt((dividend - modulo) / 26, 10);
	  }
	  return columnLabel;
	}
	function createSpreadsheetData(rowCount, colCount) {
	  rowCount = typeof rowCount === 'number' ? rowCount : 100;
	  colCount = typeof colCount === 'number' ? colCount : 4;
	  var rows = [],
	      i,
	      j;
	  for (i = 0; i < rowCount; i++) {
	    var row = [];
	    for (j = 0; j < colCount; j++) {
	      row.push(spreadsheetColumnLabel(j) + (i + 1));
	    }
	    rows.push(row);
	  }
	  return rows;
	}
	function createSpreadsheetObjectData(rowCount, colCount) {
	  rowCount = typeof rowCount === 'number' ? rowCount : 100;
	  colCount = typeof colCount === 'number' ? colCount : 4;
	  var rows = [],
	      i,
	      j;
	  for (i = 0; i < rowCount; i++) {
	    var row = {};
	    for (j = 0; j < colCount; j++) {
	      row['prop' + j] = spreadsheetColumnLabel(j) + (i + 1);
	    }
	    rows.push(row);
	  }
	  return rows;
	}
	function translateRowsToColumns(input) {
	  var i,
	      ilen,
	      j,
	      jlen,
	      output = [],
	      olen = 0;
	  for (i = 0, ilen = input.length; i < ilen; i++) {
	    for (j = 0, jlen = input[i].length; j < jlen; j++) {
	      if (j == olen) {
	        output.push([]);
	        olen++;
	      }
	      output[j].push(input[i][j]);
	    }
	  }
	  return output;
	}
	function cellMethodLookupFactory(methodName, allowUndefined) {
	  allowUndefined = typeof allowUndefined == 'undefined' ? true : allowUndefined;
	  return function cellMethodLookup(row, col) {
	    return (function getMethodFromProperties(properties) {
	      if (!properties) {
	        return;
	      } else if (properties.hasOwnProperty(methodName) && properties[methodName] !== void 0) {
	        return properties[methodName];
	      } else if (properties.hasOwnProperty('type') && properties.type) {
	        var type;
	        if (typeof properties.type != 'string') {
	          throw new Error('Cell type must be a string ');
	        }
	        type = translateTypeNameToObject(properties.type);
	        if (type.hasOwnProperty(methodName)) {
	          return type[methodName];
	        } else if (allowUndefined) {
	          return;
	        }
	      }
	      return getMethodFromProperties(getPrototypeOf(properties));
	    })(typeof row == 'number' ? this.getCellMeta(row, col) : row);
	  };
	  function translateTypeNameToObject(typeName) {
	    var type = Handsontable.cellTypes[typeName];
	    if (typeof type == 'undefined') {
	      throw new Error('You declared cell type "' + typeName + '" as a string that is not mapped to a known object. ' + 'Cell type must be an object or a string mapped to an object in Handsontable.cellTypes');
	    }
	    return type;
	  }
	}

	//# 
	},{"object":49}],44:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  closest: {get: function() {
	      return closest;
	    }},
	  isChildOf: {get: function() {
	      return isChildOf;
	    }},
	  isChildOfWebComponentTable: {get: function() {
	      return isChildOfWebComponentTable;
	    }},
	  polymerWrap: {get: function() {
	      return polymerWrap;
	    }},
	  polymerUnwrap: {get: function() {
	      return polymerUnwrap;
	    }},
	  index: {get: function() {
	      return index;
	    }},
	  overlayContainsElement: {get: function() {
	      return overlayContainsElement;
	    }},
	  hasClass: {get: function() {
	      return hasClass;
	    }},
	  addClass: {get: function() {
	      return addClass;
	    }},
	  removeClass: {get: function() {
	      return removeClass;
	    }},
	  removeTextNodes: {get: function() {
	      return removeTextNodes;
	    }},
	  empty: {get: function() {
	      return empty;
	    }},
	  HTML_CHARACTERS: {get: function() {
	      return HTML_CHARACTERS;
	    }},
	  fastInnerHTML: {get: function() {
	      return fastInnerHTML;
	    }},
	  fastInnerText: {get: function() {
	      return fastInnerText;
	    }},
	  isVisible: {get: function() {
	      return isVisible;
	    }},
	  offset: {get: function() {
	      return offset;
	    }},
	  getWindowScrollTop: {get: function() {
	      return getWindowScrollTop;
	    }},
	  getWindowScrollLeft: {get: function() {
	      return getWindowScrollLeft;
	    }},
	  getScrollTop: {get: function() {
	      return getScrollTop;
	    }},
	  getScrollLeft: {get: function() {
	      return getScrollLeft;
	    }},
	  getScrollableElement: {get: function() {
	      return getScrollableElement;
	    }},
	  getTrimmingContainer: {get: function() {
	      return getTrimmingContainer;
	    }},
	  getStyle: {get: function() {
	      return getStyle;
	    }},
	  getComputedStyle: {get: function() {
	      return getComputedStyle;
	    }},
	  outerWidth: {get: function() {
	      return outerWidth;
	    }},
	  outerHeight: {get: function() {
	      return outerHeight;
	    }},
	  innerHeight: {get: function() {
	      return innerHeight;
	    }},
	  innerWidth: {get: function() {
	      return innerWidth;
	    }},
	  addEvent: {get: function() {
	      return addEvent;
	    }},
	  removeEvent: {get: function() {
	      return removeEvent;
	    }},
	  getCaretPosition: {get: function() {
	      return getCaretPosition;
	    }},
	  getSelectionEndPosition: {get: function() {
	      return getSelectionEndPosition;
	    }},
	  setCaretPosition: {get: function() {
	      return setCaretPosition;
	    }},
	  getScrollbarWidth: {get: function() {
	      return getScrollbarWidth;
	    }},
	  setOverlayPosition: {get: function() {
	      return setOverlayPosition;
	    }},
	  getCssTransform: {get: function() {
	      return getCssTransform;
	    }},
	  resetCssTransform: {get: function() {
	      return resetCssTransform;
	    }},
	  isInput: {get: function() {
	      return isInput;
	    }},
	  isOutsideInput: {get: function() {
	      return isOutsideInput;
	    }},
	  requestAnimationFrame: {get: function() {
	      return requestAnimationFrame;
	    }},
	  cancelAnimationFrame: {get: function() {
	      return cancelAnimationFrame;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_browser__;
	var $__0 = ($___46__46__47_browser__ = require("../browser"), $___46__46__47_browser__ && $___46__46__47_browser__.__esModule && $___46__46__47_browser__ || {default: $___46__46__47_browser__}),
	    isIE8 = $__0.isIE8,
	    isIE9 = $__0.isIE9,
	    isSafari = $__0.isSafari,
	    hasCaptionProblem = $__0.hasCaptionProblem;
	function closest(element, nodes, until) {
	  while (element != null && element !== until) {
	    if (element.nodeType === Node.ELEMENT_NODE && (nodes.indexOf(element.nodeName) > -1 || nodes.indexOf(element) > -1)) {
	      return element;
	    }
	    if (element.host && element.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
	      element = element.host;
	    } else {
	      element = element.parentNode;
	    }
	  }
	  return null;
	}
	function isChildOf(child, parent) {
	  var node = child.parentNode;
	  var queriedParents = [];
	  if (typeof parent === 'string') {
	    queriedParents = Array.prototype.slice.call(document.querySelectorAll(parent), 0);
	  } else {
	    queriedParents.push(parent);
	  }
	  while (node != null) {
	    if (queriedParents.indexOf(node) > -1) {
	      return true;
	    }
	    node = node.parentNode;
	  }
	  return false;
	}
	function isChildOfWebComponentTable(element) {
	  var hotTableName = 'hot-table',
	      result = false,
	      parentNode;
	  parentNode = polymerWrap(element);
	  function isHotTable(element) {
	    return element.nodeType === Node.ELEMENT_NODE && element.nodeName === hotTableName.toUpperCase();
	  }
	  while (parentNode != null) {
	    if (isHotTable(parentNode)) {
	      result = true;
	      break;
	    } else if (parentNode.host && parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
	      result = isHotTable(parentNode.host);
	      if (result) {
	        break;
	      }
	      parentNode = parentNode.host;
	    }
	    parentNode = parentNode.parentNode;
	  }
	  return result;
	}
	function polymerWrap(element) {
	  return typeof Polymer !== 'undefined' && typeof wrap === 'function' ? wrap(element) : element;
	}
	function polymerUnwrap(element) {
	  return typeof Polymer !== 'undefined' && typeof unwrap === 'function' ? unwrap(element) : element;
	}
	function index(element) {
	  var i = 0;
	  if (element.previousSibling) {
	    while (element = element.previousSibling) {
	      ++i;
	    }
	  }
	  return i;
	}
	function overlayContainsElement(overlayType, element) {
	  var overlayElement = document.querySelector('.ht_clone_' + overlayType);
	  return overlayElement ? overlayElement.contains(element) : null;
	}
	var classListSupport = document.documentElement.classList ? true : false;
	var _hasClass,
	    _addClass,
	    _removeClass;
	function filterEmptyClassNames(classNames) {
	  var len = 0,
	      result = [];
	  if (!classNames || !classNames.length) {
	    return result;
	  }
	  while (classNames[len]) {
	    result.push(classNames[len]);
	    len++;
	  }
	  return result;
	}
	if (classListSupport) {
	  var isSupportMultipleClassesArg = (function() {
	    var element = document.createElement('div');
	    element.classList.add('test', 'test2');
	    return element.classList.contains('test2');
	  }());
	  _hasClass = function _hasClass(element, className) {
	    if (className === '') {
	      return false;
	    }
	    return element.classList.contains(className);
	  };
	  _addClass = function _addClass(element, className) {
	    var len = 0;
	    if (typeof className === 'string') {
	      className = className.split(' ');
	    }
	    className = filterEmptyClassNames(className);
	    if (isSupportMultipleClassesArg) {
	      element.classList.add.apply(element.classList, className);
	    } else {
	      while (className && className[len]) {
	        element.classList.add(className[len]);
	        len++;
	      }
	    }
	  };
	  _removeClass = function _removeClass(element, className) {
	    var len = 0;
	    if (typeof className === 'string') {
	      className = className.split(' ');
	    }
	    className = filterEmptyClassNames(className);
	    if (isSupportMultipleClassesArg) {
	      element.classList.remove.apply(element.classList, className);
	    } else {
	      while (className && className[len]) {
	        element.classList.remove(className[len]);
	        len++;
	      }
	    }
	  };
	} else {
	  var createClassNameRegExp = function createClassNameRegExp(className) {
	    return new RegExp('(\\s|^)' + className + '(\\s|$)');
	  };
	  _hasClass = function _hasClass(element, className) {
	    return element.className.match(createClassNameRegExp(className)) ? true : false;
	  };
	  _addClass = function _addClass(element, className) {
	    var len = 0,
	        _className = element.className;
	    if (typeof className === 'string') {
	      className = className.split(' ');
	    }
	    if (_className === '') {
	      _className = className.join(' ');
	    } else {
	      while (className && className[len]) {
	        if (!createClassNameRegExp(className[len]).test(_className)) {
	          _className += ' ' + className[len];
	        }
	        len++;
	      }
	    }
	    element.className = _className;
	  };
	  _removeClass = function _removeClass(element, className) {
	    var len = 0,
	        _className = element.className;
	    if (typeof className === 'string') {
	      className = className.split(' ');
	    }
	    while (className && className[len]) {
	      _className = _className.replace(createClassNameRegExp(className[len]), ' ').trim();
	      len++;
	    }
	    if (element.className !== _className) {
	      element.className = _className;
	    }
	  };
	}
	function hasClass(element, className) {
	  return _hasClass(element, className);
	}
	function addClass(element, className) {
	  return _addClass(element, className);
	}
	function removeClass(element, className) {
	  return _removeClass(element, className);
	}
	function removeTextNodes(element, parent) {
	  if (element.nodeType === 3) {
	    parent.removeChild(element);
	  } else if (['TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TR'].indexOf(element.nodeName) > -1) {
	    var childs = element.childNodes;
	    for (var i = childs.length - 1; i >= 0; i--) {
	      removeTextNodes(childs[i], element);
	    }
	  }
	}
	function empty(element) {
	  var child;
	  while (child = element.lastChild) {
	    element.removeChild(child);
	  }
	}
	var HTML_CHARACTERS = /(<(.*)>|&(.*);)/;
	function fastInnerHTML(element, content) {
	  if (HTML_CHARACTERS.test(content)) {
	    element.innerHTML = content;
	  } else {
	    fastInnerText(element, content);
	  }
	}
	var textContextSupport = document.createTextNode('test').textContent ? true : false;
	function fastInnerText(element, content) {
	  var child = element.firstChild;
	  if (child && child.nodeType === 3 && child.nextSibling === null) {
	    if (textContextSupport) {
	      child.textContent = content;
	    } else {
	      child.data = content;
	    }
	  } else {
	    empty(element);
	    element.appendChild(document.createTextNode(content));
	  }
	}
	function isVisible(elem) {
	  var next = elem;
	  while (polymerUnwrap(next) !== document.documentElement) {
	    if (next === null) {
	      return false;
	    } else if (next.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
	      if (next.host) {
	        if (next.host.impl) {
	          return isVisible(next.host.impl);
	        } else if (next.host) {
	          return isVisible(next.host);
	        } else {
	          throw new Error('Lost in Web Components world');
	        }
	      } else {
	        return false;
	      }
	    } else if (next.style.display === 'none') {
	      return false;
	    }
	    next = next.parentNode;
	  }
	  return true;
	}
	function offset(elem) {
	  var offsetLeft,
	      offsetTop,
	      lastElem,
	      docElem,
	      box;
	  docElem = document.documentElement;
	  if (hasCaptionProblem() && elem.firstChild && elem.firstChild.nodeName === 'CAPTION') {
	    box = elem.getBoundingClientRect();
	    return {
	      top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
	      left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
	    };
	  }
	  offsetLeft = elem.offsetLeft;
	  offsetTop = elem.offsetTop;
	  lastElem = elem;
	  while (elem = elem.offsetParent) {
	    if (elem === document.body) {
	      break;
	    }
	    offsetLeft += elem.offsetLeft;
	    offsetTop += elem.offsetTop;
	    lastElem = elem;
	  }
	  if (lastElem && lastElem.style.position === 'fixed') {
	    offsetLeft += window.pageXOffset || docElem.scrollLeft;
	    offsetTop += window.pageYOffset || docElem.scrollTop;
	  }
	  return {
	    left: offsetLeft,
	    top: offsetTop
	  };
	}
	function getWindowScrollTop() {
	  var res = window.scrollY;
	  if (res === void 0) {
	    res = document.documentElement.scrollTop;
	  }
	  return res;
	}
	function getWindowScrollLeft() {
	  var res = window.scrollX;
	  if (res === void 0) {
	    res = document.documentElement.scrollLeft;
	  }
	  return res;
	}
	function getScrollTop(element) {
	  if (element === window) {
	    return getWindowScrollTop();
	  } else {
	    return element.scrollTop;
	  }
	}
	function getScrollLeft(element) {
	  if (element === window) {
	    return getWindowScrollLeft();
	  } else {
	    return element.scrollLeft;
	  }
	}
	function getScrollableElement(element) {
	  var el = element.parentNode,
	      props = ['auto', 'scroll'],
	      overflow,
	      overflowX,
	      overflowY,
	      computedStyle = '',
	      computedOverflow = '',
	      computedOverflowY = '',
	      computedOverflowX = '';
	  while (el && el.style && document.body !== el) {
	    overflow = el.style.overflow;
	    overflowX = el.style.overflowX;
	    overflowY = el.style.overflowY;
	    if (overflow == 'scroll' || overflowX == 'scroll' || overflowY == 'scroll') {
	      return el;
	    } else if (window.getComputedStyle) {
	      computedStyle = window.getComputedStyle(el);
	      computedOverflow = computedStyle.getPropertyValue('overflow');
	      computedOverflowY = computedStyle.getPropertyValue('overflow-y');
	      computedOverflowX = computedStyle.getPropertyValue('overflow-x');
	      if (computedOverflow === 'scroll' || computedOverflowX === 'scroll' || computedOverflowY === 'scroll') {
	        return el;
	      }
	    }
	    if (el.clientHeight <= el.scrollHeight && (props.indexOf(overflowY) !== -1 || props.indexOf(overflow) !== -1 || props.indexOf(computedOverflow) !== -1 || props.indexOf(computedOverflowY) !== -1)) {
	      return el;
	    }
	    if (el.clientWidth <= el.scrollWidth && (props.indexOf(overflowX) !== -1 || props.indexOf(overflow) !== -1 || props.indexOf(computedOverflow) !== -1 || props.indexOf(computedOverflowX) !== -1)) {
	      return el;
	    }
	    el = el.parentNode;
	  }
	  return window;
	}
	function getTrimmingContainer(base) {
	  var el = base.parentNode;
	  while (el && el.style && document.body !== el) {
	    if (el.style.overflow !== 'visible' && el.style.overflow !== '') {
	      return el;
	    } else if (window.getComputedStyle) {
	      var computedStyle = window.getComputedStyle(el);
	      if (computedStyle.getPropertyValue('overflow') !== 'visible' && computedStyle.getPropertyValue('overflow') !== '') {
	        return el;
	      }
	    }
	    el = el.parentNode;
	  }
	  return window;
	}
	function getStyle(element, prop) {
	  if (!element) {
	    return;
	  } else if (element === window) {
	    if (prop === 'width') {
	      return window.innerWidth + 'px';
	    } else if (prop === 'height') {
	      return window.innerHeight + 'px';
	    }
	    return;
	  }
	  var styleProp = element.style[prop],
	      computedStyle;
	  if (styleProp !== '' && styleProp !== void 0) {
	    return styleProp;
	  } else {
	    computedStyle = getComputedStyle(element);
	    if (computedStyle[prop] !== '' && computedStyle[prop] !== void 0) {
	      return computedStyle[prop];
	    }
	    return void 0;
	  }
	}
	function getComputedStyle(element) {
	  return element.currentStyle || document.defaultView.getComputedStyle(element);
	}
	function outerWidth(element) {
	  return element.offsetWidth;
	}
	function outerHeight(elem) {
	  if (hasCaptionProblem() && elem.firstChild && elem.firstChild.nodeName === 'CAPTION') {
	    return elem.offsetHeight + elem.firstChild.offsetHeight;
	  } else {
	    return elem.offsetHeight;
	  }
	}
	function innerHeight(element) {
	  return element.clientHeight || element.innerHeight;
	}
	function innerWidth(element) {
	  return element.clientWidth || element.innerWidth;
	}
	function addEvent(element, event, callback) {
	  if (window.addEventListener) {
	    element.addEventListener(event, callback, false);
	  } else {
	    element.attachEvent('on' + event, callback);
	  }
	}
	function removeEvent(element, event, callback) {
	  if (window.removeEventListener) {
	    element.removeEventListener(event, callback, false);
	  } else {
	    element.detachEvent('on' + event, callback);
	  }
	}
	function getCaretPosition(el) {
	  if (el.selectionStart) {
	    return el.selectionStart;
	  } else if (document.selection) {
	    el.focus();
	    var r = document.selection.createRange();
	    if (r == null) {
	      return 0;
	    }
	    var re = el.createTextRange();
	    var rc = re.duplicate();
	    re.moveToBookmark(r.getBookmark());
	    rc.setEndPoint('EndToStart', re);
	    return rc.text.length;
	  }
	  return 0;
	}
	function getSelectionEndPosition(el) {
	  if (el.selectionEnd) {
	    return el.selectionEnd;
	  } else if (document.selection) {
	    var r = document.selection.createRange();
	    if (r == null) {
	      return 0;
	    }
	    var re = el.createTextRange();
	    return re.text.indexOf(r.text) + r.text.length;
	  }
	}
	function setCaretPosition(element, pos, endPos) {
	  if (endPos === void 0) {
	    endPos = pos;
	  }
	  if (element.setSelectionRange) {
	    element.focus();
	    try {
	      element.setSelectionRange(pos, endPos);
	    } catch (err) {
	      var elementParent = element.parentNode;
	      var parentDisplayValue = elementParent.style.display;
	      elementParent.style.display = 'block';
	      element.setSelectionRange(pos, endPos);
	      elementParent.style.display = parentDisplayValue;
	    }
	  } else if (element.createTextRange) {
	    var range = element.createTextRange();
	    range.collapse(true);
	    range.moveEnd('character', endPos);
	    range.moveStart('character', pos);
	    range.select();
	  }
	}
	var cachedScrollbarWidth;
	function walkontableCalculateScrollbarWidth() {
	  var inner = document.createElement('p');
	  inner.style.width = '100%';
	  inner.style.height = '200px';
	  var outer = document.createElement('div');
	  outer.style.position = 'absolute';
	  outer.style.top = '0px';
	  outer.style.left = '0px';
	  outer.style.visibility = 'hidden';
	  outer.style.width = '200px';
	  outer.style.height = '150px';
	  outer.style.overflow = 'hidden';
	  outer.appendChild(inner);
	  (document.body || document.documentElement).appendChild(outer);
	  var w1 = inner.offsetWidth;
	  outer.style.overflow = 'scroll';
	  var w2 = inner.offsetWidth;
	  if (w1 == w2) {
	    w2 = outer.clientWidth;
	  }
	  (document.body || document.documentElement).removeChild(outer);
	  return (w1 - w2);
	}
	function getScrollbarWidth() {
	  if (cachedScrollbarWidth === void 0) {
	    cachedScrollbarWidth = walkontableCalculateScrollbarWidth();
	  }
	  return cachedScrollbarWidth;
	}
	function setOverlayPosition(overlayElem, left, top) {
	  if (isIE8() || isIE9()) {
	    overlayElem.style.top = top;
	    overlayElem.style.left = left;
	  } else if (isSafari()) {
	    overlayElem.style['-webkit-transform'] = 'translate3d(' + left + ',' + top + ',0)';
	  } else {
	    overlayElem.style.transform = 'translate3d(' + left + ',' + top + ',0)';
	  }
	}
	function getCssTransform(element) {
	  var transform;
	  if (element.style.transform && (transform = element.style.transform) !== '') {
	    return ['transform', transform];
	  } else if (element.style['-webkit-transform'] && (transform = element.style['-webkit-transform']) !== '') {
	    return ['-webkit-transform', transform];
	  }
	  return -1;
	}
	function resetCssTransform(element) {
	  if (element.transform && element.transform !== '') {
	    element.transform = '';
	  } else if (element['-webkit-transform'] && element['-webkit-transform'] !== '') {
	    element['-webkit-transform'] = '';
	  }
	}
	function isInput(element) {
	  var inputs = ['INPUT', 'SELECT', 'TEXTAREA'];
	  return inputs.indexOf(element.nodeName) > -1 || element.contentEditable === 'true';
	}
	function isOutsideInput(element) {
	  return isInput(element) && element.className.indexOf('handsontableInput') == -1 && element.className.indexOf('copyPaste') == -1;
	}
	var lastTime = 0;
	var vendors = ['ms', 'moz', 'webkit', 'o'];
	var _requestAnimationFrame = window.requestAnimationFrame;
	var _cancelAnimationFrame = window.cancelAnimationFrame;
	for (var x = 0; x < vendors.length && !_requestAnimationFrame; ++x) {
	  _requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
	  _cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
	}
	if (!_requestAnimationFrame) {
	  _requestAnimationFrame = function(callback) {
	    var currTime = new Date().getTime();
	    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
	    var id = window.setTimeout(function() {
	      callback(currTime + timeToCall);
	    }, timeToCall);
	    lastTime = currTime + timeToCall;
	    return id;
	  };
	}
	if (!_cancelAnimationFrame) {
	  _cancelAnimationFrame = function(id) {
	    clearTimeout(id);
	  };
	}
	function requestAnimationFrame(callback) {
	  return _requestAnimationFrame.call(window, callback);
	}
	function cancelAnimationFrame(id) {
	  _cancelAnimationFrame.call(window, id);
	}

	//# 
	},{"../browser":42}],45:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  stopImmediatePropagation: {get: function() {
	      return stopImmediatePropagation;
	    }},
	  isImmediatePropagationStopped: {get: function() {
	      return isImmediatePropagationStopped;
	    }},
	  stopPropagation: {get: function() {
	      return stopPropagation;
	    }},
	  pageX: {get: function() {
	      return pageX;
	    }},
	  pageY: {get: function() {
	      return pageY;
	    }},
	  __esModule: {value: true}
	});
	function stopImmediatePropagation(event) {
	  event.isImmediatePropagationEnabled = false;
	  event.cancelBubble = true;
	}
	function isImmediatePropagationStopped(event) {
	  return event.isImmediatePropagationEnabled === false;
	}
	function stopPropagation(event) {
	  if (typeof event.stopPropagation === 'function') {
	    event.stopPropagation();
	  } else {
	    event.cancelBubble = true;
	  }
	}
	function pageX(event) {
	  if (event.pageX) {
	    return event.pageX;
	  }
	  var scrollLeft = getWindowScrollLeft();
	  var cursorX = event.clientX + scrollLeft;
	  return cursorX;
	}
	function pageY(event) {
	  if (event.pageY) {
	    return event.pageY;
	  }
	  var scrollTop = getWindowScrollTop();
	  var cursorY = event.clientY + scrollTop;
	  return cursorY;
	}

	//# 
	},{}],46:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  proxy: {get: function() {
	      return proxy;
	    }},
	  throttle: {get: function() {
	      return throttle;
	    }},
	  throttleAfterHits: {get: function() {
	      return throttleAfterHits;
	    }},
	  __esModule: {value: true}
	});
	function proxy(fun, context) {
	  return function() {
	    return fun.apply(context, arguments);
	  };
	}
	function throttle(func) {
	  var wait = arguments[1] !== (void 0) ? arguments[1] : 200;
	  var lastCalled = 0;
	  var result = {lastCallThrottled: true};
	  var lastTimer = null;
	  function _throttle() {
	    var $__0 = this;
	    var args = arguments;
	    var stamp = Date.now();
	    var needCall = false;
	    result.lastCallThrottled = true;
	    if (!lastCalled) {
	      lastCalled = stamp;
	      needCall = true;
	    }
	    var remaining = wait - (stamp - lastCalled);
	    if (needCall) {
	      result.lastCallThrottled = false;
	      func.apply(this, args);
	    } else {
	      if (lastTimer) {
	        clearTimeout(lastTimer);
	      }
	      lastTimer = setTimeout((function() {
	        result.lastCallThrottled = false;
	        func.apply($__0, args);
	        lastCalled = 0;
	        lastTimer = void 0;
	      }), remaining);
	    }
	    return result;
	  }
	  return _throttle;
	}
	function throttleAfterHits(func) {
	  var wait = arguments[1] !== (void 0) ? arguments[1] : 200;
	  var hits = arguments[2] !== (void 0) ? arguments[2] : 10;
	  var funcThrottle = throttle(func, wait);
	  var remainHits = hits;
	  function _clearHits() {
	    remainHits = hits;
	  }
	  function _throttleAfterHits() {
	    if (remainHits) {
	      remainHits--;
	      return func.apply(this, arguments);
	    }
	    return funcThrottle.apply(this, arguments);
	  }
	  _throttleAfterHits.clearHits = _clearHits;
	  return _throttleAfterHits;
	}

	//# 
	},{}],47:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  stringify: {get: function() {
	      return stringify;
	    }},
	  __esModule: {value: true}
	});
	function stringify(value) {
	  switch (typeof value) {
	    case 'string':
	    case 'number':
	      return value + '';
	    case 'object':
	      if (value === null) {
	        return '';
	      } else {
	        return value.toString();
	      }
	      break;
	    case 'undefined':
	      return '';
	    default:
	      return value.toString();
	  }
	}

	//# 
	},{}],48:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  isNumeric: {get: function() {
	      return isNumeric;
	    }},
	  rangeEach: {get: function() {
	      return rangeEach;
	    }},
	  valueAccordingPercent: {get: function() {
	      return valueAccordingPercent;
	    }},
	  __esModule: {value: true}
	});
	function isNumeric(n) {
	  var t = typeof n;
	  return t == 'number' ? !isNaN(n) && isFinite(n) : t == 'string' ? !n.length ? false : n.length == 1 ? /\d/.test(n) : /^\s*[+-]?\s*(?:(?:\d+(?:\.\d+)?(?:e[+-]?\d+)?)|(?:0x[a-f\d]+))\s*$/i.test(n) : t == 'object' ? !!n && typeof n.valueOf() == 'number' && !(n instanceof Date) : false;
	}
	function rangeEach(rangeFrom, rangeTo, iteratee, onlyForward) {
	  var index = -1;
	  var _rangeTo = rangeTo;
	  var _rangeFrom = 0;
	  if (typeof rangeTo === 'function') {
	    iteratee = rangeTo;
	    _rangeTo = rangeFrom;
	  } else {
	    index = rangeFrom - 1;
	  }
	  if (onlyForward || rangeFrom <= _rangeTo) {
	    while (++index <= _rangeTo) {
	      if (iteratee(index) === false) {
	        break;
	      }
	    }
	  } else {
	    index = rangeFrom + 1;
	    while (--index >= rangeTo) {
	      if (iteratee(index) === false) {
	        break;
	      }
	    }
	  }
	}
	function valueAccordingPercent(value, percent) {
	  percent = parseInt(percent.toString().replace('%', ''), 10);
	  percent = parseInt(value * percent / 100);
	  return percent;
	}

	//# 
	},{}],49:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  duckSchema: {get: function() {
	      return duckSchema;
	    }},
	  inherit: {get: function() {
	      return inherit;
	    }},
	  extend: {get: function() {
	      return extend;
	    }},
	  deepExtend: {get: function() {
	      return deepExtend;
	    }},
	  deepClone: {get: function() {
	      return deepClone;
	    }},
	  clone: {get: function() {
	      return clone;
	    }},
	  mixin: {get: function() {
	      return mixin;
	    }},
	  isObjectEquals: {get: function() {
	      return isObjectEquals;
	    }},
	  isObject: {get: function() {
	      return isObject;
	    }},
	  getPrototypeOf: {get: function() {
	      return getPrototypeOf;
	    }},
	  defineGetter: {get: function() {
	      return defineGetter;
	    }},
	  objectEach: {get: function() {
	      return objectEach;
	    }},
	  __esModule: {value: true}
	});
	var $__array__;
	var arrayEach = ($__array__ = require("array"), $__array__ && $__array__.__esModule && $__array__ || {default: $__array__}).arrayEach;
	function duckSchema(object) {
	  var schema;
	  if (Array.isArray(object)) {
	    schema = [];
	  } else {
	    schema = {};
	    objectEach(object, function(value, key) {
	      if (value && typeof value === 'object' && !Array.isArray(value)) {
	        schema[key] = duckSchema(value);
	      } else if (Array.isArray(value)) {
	        if (value.length && typeof value[0] === 'object' && !Array.isArray(value[0])) {
	          schema[key] = [duckSchema(value[0])];
	        } else {
	          schema[key] = [];
	        }
	      } else {
	        schema[key] = null;
	      }
	    });
	  }
	  return schema;
	}
	function inherit(Child, Parent) {
	  Parent.prototype.constructor = Parent;
	  Child.prototype = new Parent();
	  Child.prototype.constructor = Child;
	  return Child;
	}
	function extend(target, extension) {
	  objectEach(extension, function(value, key) {
	    target[key] = value;
	  });
	  return target;
	}
	function deepExtend(target, extension) {
	  objectEach(extension, function(value, key) {
	    if (extension[key] && typeof extension[key] === 'object') {
	      if (!target[key]) {
	        if (Array.isArray(extension[key])) {
	          target[key] = [];
	        } else {
	          target[key] = {};
	        }
	      }
	      deepExtend(target[key], extension[key]);
	    } else {
	      target[key] = extension[key];
	    }
	  });
	}
	function deepClone(obj) {
	  if (typeof obj === 'object') {
	    return JSON.parse(JSON.stringify(obj));
	  }
	  return obj;
	}
	function clone(object) {
	  var result = {};
	  objectEach(object, (function(value, key) {
	    return result[key] = value;
	  }));
	  return result;
	}
	function mixin(Base) {
	  for (var mixins = [],
	      $__1 = 1; $__1 < arguments.length; $__1++)
	    mixins[$__1 - 1] = arguments[$__1];
	  arrayEach(mixins, (function(mixin) {
	    objectEach(mixin, (function(value, key) {
	      if (typeof value === 'function') {
	        Base.prototype[key] = value;
	      } else {
	        var getter = function _getter(propertyName, initialValue) {
	          propertyName = '_' + propertyName;
	          var initValue = (function(value) {
	            if (Array.isArray(value) || isObject(value)) {
	              value = deepClone(value);
	            }
	            return value;
	          });
	          return function() {
	            if (this[propertyName] === void 0) {
	              this[propertyName] = initValue(initialValue);
	            }
	            return this[propertyName];
	          };
	        };
	        var setter = function _setter(propertyName) {
	          propertyName = '_' + propertyName;
	          return function(value) {
	            this[propertyName] = value;
	          };
	        };
	        Object.defineProperty(Base.prototype, key, {
	          get: getter(key, value),
	          set: setter(key),
	          configurable: true
	        });
	      }
	    }));
	  }));
	  return Base;
	}
	function isObjectEquals(object1, object2) {
	  return JSON.stringify(object1) === JSON.stringify(object2);
	}
	function isObject(obj) {
	  return Object.prototype.toString.call(obj) == '[object Object]';
	}
	function getPrototypeOf(obj) {
	  var prototype;
	  if (typeof obj.__proto__ == 'object') {
	    prototype = obj.__proto__;
	  } else {
	    var oldConstructor,
	        constructor = obj.constructor;
	    if (typeof obj.constructor == 'function') {
	      oldConstructor = constructor;
	      if (delete obj.constructor) {
	        constructor = obj.constructor;
	        obj.constructor = oldConstructor;
	      }
	    }
	    prototype = constructor ? constructor.prototype : null;
	  }
	  return prototype;
	}
	function defineGetter(object, property, value, options) {
	  options.value = value;
	  options.writable = options.writable === false ? false : true;
	  options.enumerable = options.enumerable === false ? false : true;
	  options.configurable = options.configurable === false ? false : true;
	  Object.defineProperty(object, property, options);
	}
	function objectEach(object, iteratee) {
	  for (var key in object) {
	    if (!object.hasOwnProperty || (object.hasOwnProperty && object.hasOwnProperty(key))) {
	      if (iteratee(object[key], key, object) === false) {
	        break;
	      }
	    }
	  }
	  return object;
	}

	//# 
	},{"array":41}],50:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  columnFactory: {get: function() {
	      return columnFactory;
	    }},
	  __esModule: {value: true}
	});
	var $__object__;
	var inherit = ($__object__ = require("object"), $__object__ && $__object__.__esModule && $__object__ || {default: $__object__}).inherit;
	function columnFactory(GridSettings, conflictList) {
	  function ColumnSettings() {}
	  ;
	  inherit(ColumnSettings, GridSettings);
	  for (var i = 0,
	      len = conflictList.length; i < len; i++) {
	    ColumnSettings.prototype[conflictList[i]] = void 0;
	  }
	  return ColumnSettings;
	}

	//# 
	},{"object":49}],51:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  toUpperCaseFirst: {get: function() {
	      return toUpperCaseFirst;
	    }},
	  startsWith: {get: function() {
	      return startsWith;
	    }},
	  endsWith: {get: function() {
	      return endsWith;
	    }},
	  equalsIgnoreCase: {get: function() {
	      return equalsIgnoreCase;
	    }},
	  randomString: {get: function() {
	      return randomString;
	    }},
	  isPercentValue: {get: function() {
	      return isPercentValue;
	    }},
	  __esModule: {value: true}
	});
	var $__mixed__,
	    $__number__;
	var stringify = ($__mixed__ = require("mixed"), $__mixed__ && $__mixed__.__esModule && $__mixed__ || {default: $__mixed__}).stringify;
	var rangeEach = ($__number__ = require("number"), $__number__ && $__number__.__esModule && $__number__ || {default: $__number__}).rangeEach;
	function toUpperCaseFirst(string) {
	  return string[0].toUpperCase() + string.substr(1);
	}
	function startsWith(string, needle) {
	  var result = true;
	  rangeEach(needle.length - 1, (function(index) {
	    if (string.charAt(index) !== needle.charAt(index)) {
	      result = false;
	      return false;
	    }
	  }));
	  return result;
	}
	function endsWith(string, needle) {
	  var result = true;
	  var needleLength = needle.length - 1;
	  var stringLength = string.length - 1;
	  rangeEach(needleLength, (function(index) {
	    var stringIndex = stringLength - index;
	    var needleIndex = needleLength - index;
	    if (string.charAt(stringIndex) !== needle.charAt(needleIndex)) {
	      result = false;
	      return false;
	    }
	  }));
	  return result;
	}
	function equalsIgnoreCase() {
	  for (var strings = [],
	      $__2 = 0; $__2 < arguments.length; $__2++)
	    strings[$__2] = arguments[$__2];
	  var unique = [];
	  var length = strings.length;
	  while (length--) {
	    var string = stringify(strings[length]).toLowerCase();
	    if (unique.indexOf(string) === -1) {
	      unique.push(string);
	    }
	  }
	  return unique.length === 1;
	}
	function randomString() {
	  function s4() {
	    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
	  }
	  return s4() + s4() + s4() + s4();
	}
	function isPercentValue(value) {
	  return /^([0-9][0-9]?\%$)|(^100\%$)/.test(value);
	}

	//# 
	},{"mixed":47,"number":48}],52:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  KEY_CODES: {get: function() {
	      return KEY_CODES;
	    }},
	  isPrintableChar: {get: function() {
	      return isPrintableChar;
	    }},
	  isMetaKey: {get: function() {
	      return isMetaKey;
	    }},
	  isCtrlKey: {get: function() {
	      return isCtrlKey;
	    }},
	  isKey: {get: function() {
	      return isKey;
	    }},
	  __esModule: {value: true}
	});
	var $__array__;
	var arrayEach = ($__array__ = require("array"), $__array__ && $__array__.__esModule && $__array__ || {default: $__array__}).arrayEach;
	var KEY_CODES = {
	  MOUSE_LEFT: 1,
	  MOUSE_RIGHT: 3,
	  MOUSE_MIDDLE: 2,
	  BACKSPACE: 8,
	  COMMA: 188,
	  INSERT: 45,
	  DELETE: 46,
	  END: 35,
	  ENTER: 13,
	  ESCAPE: 27,
	  CONTROL_LEFT: 91,
	  COMMAND_LEFT: 17,
	  COMMAND_RIGHT: 93,
	  ALT: 18,
	  HOME: 36,
	  PAGE_DOWN: 34,
	  PAGE_UP: 33,
	  PERIOD: 190,
	  SPACE: 32,
	  SHIFT: 16,
	  CAPS_LOCK: 20,
	  TAB: 9,
	  ARROW_RIGHT: 39,
	  ARROW_LEFT: 37,
	  ARROW_UP: 38,
	  ARROW_DOWN: 40,
	  F1: 112,
	  F2: 113,
	  F3: 114,
	  F4: 115,
	  F5: 116,
	  F6: 117,
	  F7: 118,
	  F8: 119,
	  F9: 120,
	  F10: 121,
	  F11: 122,
	  F12: 123,
	  A: 65,
	  X: 88,
	  C: 67,
	  V: 86
	};
	function isPrintableChar(keyCode) {
	  return ((keyCode == 32) || (keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 111) || (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) || keyCode >= 226 || (keyCode >= 65 && keyCode <= 90));
	}
	function isMetaKey(keyCode) {
	  var metaKeys = [KEY_CODES.ARROW_DOWN, KEY_CODES.ARROW_UP, KEY_CODES.ARROW_LEFT, KEY_CODES.ARROW_RIGHT, KEY_CODES.HOME, KEY_CODES.END, KEY_CODES.DELETE, KEY_CODES.BACKSPACE, KEY_CODES.F1, KEY_CODES.F2, KEY_CODES.F3, KEY_CODES.F4, KEY_CODES.F5, KEY_CODES.F6, KEY_CODES.F7, KEY_CODES.F8, KEY_CODES.F9, KEY_CODES.F10, KEY_CODES.F11, KEY_CODES.F12, KEY_CODES.TAB, KEY_CODES.PAGE_DOWN, KEY_CODES.PAGE_UP, KEY_CODES.ENTER, KEY_CODES.ESCAPE, KEY_CODES.SHIFT, KEY_CODES.CAPS_LOCK, KEY_CODES.ALT];
	  return metaKeys.indexOf(keyCode) !== -1;
	}
	function isCtrlKey(keyCode) {
	  return [KEY_CODES.CONTROL_LEFT, 224, KEY_CODES.COMMAND_LEFT, KEY_CODES.COMMAND_RIGHT].indexOf(keyCode) !== -1;
	}
	function isKey(keyCode, baseCode) {
	  var keys = baseCode.split('|');
	  var result = false;
	  arrayEach(keys, function(key) {
	    if (keyCode === KEY_CODES[key]) {
	      result = true;
	      return false;
	    }
	  });
	  return result;
	}

	//# 
	},{"array":41}],53:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  MultiMap: {get: function() {
	      return MultiMap;
	    }},
	  __esModule: {value: true}
	});
	;
	window.MultiMap = MultiMap;
	function MultiMap() {
	  var map = {
	    arrayMap: [],
	    weakMap: new WeakMap()
	  };
	  return {
	    get: function(key) {
	      if (canBeAnArrayMapKey(key)) {
	        return map.arrayMap[key];
	      } else if (canBeAWeakMapKey(key)) {
	        return map.weakMap.get(key);
	      }
	    },
	    set: function(key, value) {
	      if (canBeAnArrayMapKey(key)) {
	        map.arrayMap[key] = value;
	      } else if (canBeAWeakMapKey(key)) {
	        map.weakMap.set(key, value);
	      } else {
	        throw new Error('Invalid key type');
	      }
	    },
	    delete: function(key) {
	      if (canBeAnArrayMapKey(key)) {
	        delete map.arrayMap[key];
	      } else if (canBeAWeakMapKey(key)) {
	        map.weakMap.delete(key);
	      }
	    }
	  };
	  function canBeAnArrayMapKey(obj) {
	    return obj !== null && !isNaNSymbol(obj) && (typeof obj == 'string' || typeof obj == 'number');
	  }
	  function canBeAWeakMapKey(obj) {
	    return obj !== null && (typeof obj == 'object' || typeof obj == 'function');
	  }
	  function isNaNSymbol(obj) {
	    return obj !== obj;
	  }
	}

	//# 
	},{}],54:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Hooks: {get: function() {
	      return Hooks;
	    }},
	  localHooks: {get: function() {
	      return localHooks;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_array__,
	    $__helpers_47_object__;
	var REGISTERED_HOOKS = ['afterCellMetaReset', 'afterChange', 'afterChangesObserved', 'afterColumnMove', 'afterColumnResize', 'afterContextMenuDefaultOptions', 'afterContextMenuHide', 'afterContextMenuShow', 'afterCopyLimit', 'afterCreateCol', 'afterCreateRow', 'afterDeselect', 'afterDestroy', 'afterDocumentKeyDown', 'afterGetCellMeta', 'afterGetColHeader', 'afterGetRowHeader', 'afterInit', 'afterIsMultipleSelectionCheck', 'afterLoadData', 'afterMomentumScroll', 'afterOnCellCornerMouseDown', 'afterOnCellMouseDown', 'afterOnCellMouseOver', 'afterRemoveCol', 'afterRemoveRow', 'afterRender', 'afterRenderer', 'afterScrollHorizontally', 'afterScrollVertically', 'afterSelection', 'afterSelectionByProp', 'afterSelectionEnd', 'afterSelectionEndByProp', 'afterSetCellMeta', 'afterUpdateSettings', 'afterValidate', 'beforeAutofill', 'beforeCellAlignment', 'beforeChange', 'beforeChangeRender', 'beforeDrawBorders', 'beforeGetCellMeta', 'beforeInit', 'beforeInitWalkontable', 'beforeKeyDown', 'beforeOnCellMouseDown', 'beforeRemoveCol', 'beforeRemoveRow', 'beforeRender', 'beforeSetRangeEnd', 'beforeTouchScroll', 'beforeValidate', 'construct', 'init', 'modifyCol', 'modifyColWidth', 'modifyRow', 'modifyRowHeight', 'persistentStateLoad', 'persistentStateReset', 'persistentStateSave', 'beforeColumnSort', 'afterColumnSort', 'afterAutofillApplyValues', 'modifyCopyableRange', 'beforeColumnMove', 'afterColumnMove', 'beforeRowMove', 'afterRowMove', 'beforeColumnResize', 'afterColumnResize', 'beforeRowResize', 'afterRowResize'];
	var arrayEach = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__}).arrayEach;
	var objectEach = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}).objectEach;
	var Hooks = function Hooks() {
	  this.globalBucket = this.createEmptyBucket();
	};
	($traceurRuntime.createClass)(Hooks, {
	  createEmptyBucket: function() {
	    var bucket = Object.create(null);
	    arrayEach(REGISTERED_HOOKS, (function(hook) {
	      return (bucket[hook] = []);
	    }));
	    return bucket;
	  },
	  getBucket: function() {
	    var context = arguments[0] !== (void 0) ? arguments[0] : null;
	    if (context) {
	      if (!context.pluginHookBucket) {
	        context.pluginHookBucket = this.createEmptyBucket();
	      }
	      return context.pluginHookBucket;
	    }
	    return this.globalBucket;
	  },
	  add: function(key, callback) {
	    var context = arguments[2] !== (void 0) ? arguments[2] : null;
	    var $__2 = this;
	    if (Array.isArray(callback)) {
	      arrayEach(callback, (function(c) {
	        return ($__2.add(key, c, context));
	      }));
	    } else {
	      var bucket = this.getBucket(context);
	      if (typeof bucket[key] === 'undefined') {
	        this.register(key);
	        bucket[key] = [];
	      }
	      callback.skip = false;
	      if (bucket[key].indexOf(callback) === -1) {
	        bucket[key].push(callback);
	      }
	    }
	    return this;
	  },
	  once: function(key, callback) {
	    var context = arguments[2] !== (void 0) ? arguments[2] : null;
	    var $__2 = this;
	    if (Array.isArray(callback)) {
	      arrayEach(callback, (function(c) {
	        return ($__2.once(key, c, context));
	      }));
	    } else {
	      callback.runOnce = true;
	      this.add(key, callback, context);
	    }
	  },
	  remove: function(key, callback) {
	    var context = arguments[2] !== (void 0) ? arguments[2] : null;
	    var bucket = this.getBucket(context);
	    if (typeof bucket[key] !== 'undefined') {
	      if (bucket[key].indexOf(callback) >= 0) {
	        callback.skip = true;
	        return true;
	      }
	    }
	    return false;
	  },
	  run: function(context, key, p1, p2, p3, p4, p5, p6) {
	    {
	      var globalHandlers = this.globalBucket[key];
	      var index = -1;
	      var length = globalHandlers ? globalHandlers.length : 0;
	      if (length) {
	        while (++index < length) {
	          if (!globalHandlers[index] || globalHandlers[index].skip) {
	            continue;
	          }
	          var res = globalHandlers[index].call(context, p1, p2, p3, p4, p5, p6);
	          if (res !== void 0) {
	            p1 = res;
	          }
	          if (globalHandlers[index] && globalHandlers[index].runOnce) {
	            this.remove(key, globalHandlers[index]);
	          }
	        }
	      }
	    }
	    {
	      var localHandlers = this.getBucket(context)[key];
	      var index$__5 = -1;
	      var length$__6 = localHandlers ? localHandlers.length : 0;
	      if (length$__6) {
	        while (++index$__5 < length$__6) {
	          if (!localHandlers[index$__5] || localHandlers[index$__5].skip) {
	            continue;
	          }
	          var res$__7 = localHandlers[index$__5].call(context, p1, p2, p3, p4, p5, p6);
	          if (res$__7 !== void 0) {
	            p1 = res$__7;
	          }
	          if (localHandlers[index$__5] && localHandlers[index$__5].runOnce) {
	            this.remove(key, localHandlers[index$__5], context);
	          }
	        }
	      }
	    }
	    return p1;
	  },
	  destroy: function() {
	    var context = arguments[0] !== (void 0) ? arguments[0] : null;
	    objectEach(this.getBucket(context), (function(value, key, bucket) {
	      return (bucket[key].length = 0);
	    }));
	  },
	  register: function(key) {
	    if (!this.isRegistered(key)) {
	      REGISTERED_HOOKS.push(key);
	    }
	  },
	  deregister: function(key) {
	    if (this.isRegistered(key)) {
	      REGISTERED_HOOKS.splice(REGISTERED_HOOKS.indexOf(key), 1);
	    }
	  },
	  isRegistered: function(key) {
	    return REGISTERED_HOOKS.indexOf(key) >= 0;
	  },
	  getRegistered: function() {
	    return REGISTERED_HOOKS;
	  }
	}, {});
	;
	var localHooks = {
	  _localHooks: Object.create(null),
	  addLocalHook: function(key, callback) {
	    if (!this._localHooks[key]) {
	      this._localHooks[key] = [];
	    }
	    this._localHooks[key].push(callback);
	  },
	  runLocalHooks: function(key) {
	    for (var params = [],
	        $__4 = 1; $__4 < arguments.length; $__4++)
	      params[$__4 - 1] = arguments[$__4];
	    var $__2 = this;
	    if (this._localHooks[key]) {
	      arrayEach(this._localHooks[key], (function(callback) {
	        return callback.apply($__2, params);
	      }));
	    }
	  },
	  clearLocalHooks: function() {
	    this._localHooks = {};
	  }
	};
	;
	Handsontable.utils = Handsontable.utils || {};
	Handsontable.utils.Hooks = Hooks;
	Handsontable.utils.localHooks = localHooks;

	//# 
	},{"helpers/array":41,"helpers/object":49}],55:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  registerPlugin: {get: function() {
	      return registerPlugin;
	    }},
	  getPlugin: {get: function() {
	      return getPlugin;
	    }},
	  getRegistredPluginNames: {get: function() {
	      return getRegistredPluginNames;
	    }},
	  getPluginName: {get: function() {
	      return getPluginName;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_object__,
	    $__helpers_47_string__;
	var objectEach = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}).objectEach;
	var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;
	var registeredPlugins = new WeakMap();
	Handsontable.plugins = Handsontable.plugins || {};
	function registerPlugin(pluginName, PluginClass) {
	  pluginName = toUpperCaseFirst(pluginName);
	  Handsontable.plugins[pluginName] = PluginClass;
	  Handsontable.hooks.add('construct', function() {
	    var holder;
	    if (!registeredPlugins.has(this)) {
	      registeredPlugins.set(this, {});
	    }
	    holder = registeredPlugins.get(this);
	    if (!holder[pluginName]) {
	      holder[pluginName] = new PluginClass(this);
	    }
	  });
	  Handsontable.hooks.add('afterDestroy', function() {
	    if (registeredPlugins.has(this)) {
	      var pluginsHolder = registeredPlugins.get(this);
	      objectEach(pluginsHolder, (function(plugin) {
	        return plugin.destroy();
	      }));
	      registeredPlugins.delete(this);
	    }
	  });
	}
	function getPlugin(instance, pluginName) {
	  if (typeof pluginName != 'string') {
	    throw Error('Only strings can be passed as "plugin" parameter');
	  }
	  var _pluginName = toUpperCaseFirst(pluginName);
	  if (!registeredPlugins.has(instance) || !registeredPlugins.get(instance)[_pluginName]) {
	    return void 0;
	  }
	  return registeredPlugins.get(instance)[_pluginName];
	}
	function getRegistredPluginNames(hotInstance) {
	  return registeredPlugins.has(hotInstance) ? Object.keys(registeredPlugins.get(hotInstance)) : [];
	}
	function getPluginName(hotInstance, plugin) {
	  var pluginName = null;
	  if (registeredPlugins.has(hotInstance)) {
	    objectEach(registeredPlugins.get(hotInstance), (function(pluginInstance, name) {
	      if (pluginInstance === plugin) {
	        pluginName = name;
	      }
	    }));
	  }
	  return pluginName;
	}
	;

	//# 
	},{"helpers/object":49,"helpers/string":51}],56:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  default: {get: function() {
	      return $__default;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_object__,
	    $___46__46__47_helpers_47_array__,
	    $___46__46__47_plugins__;
	var $__0 = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}),
	    defineGetter = $__0.defineGetter,
	    objectEach = $__0.objectEach;
	var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;
	var $__2 = ($___46__46__47_plugins__ = require("plugins"), $___46__46__47_plugins__ && $___46__46__47_plugins__.__esModule && $___46__46__47_plugins__ || {default: $___46__46__47_plugins__}),
	    getRegistredPluginNames = $__2.getRegistredPluginNames,
	    getPluginName = $__2.getPluginName;
	var privatePool = new WeakMap();
	var initializedPlugins = null;
	var BasePlugin = function BasePlugin(hotInstance) {
	  var $__3 = this;
	  defineGetter(this, 'hot', hotInstance, {writable: false});
	  privatePool.set(this, {hooks: {}});
	  initializedPlugins = null;
	  this.pluginsInitializedCallbacks = [];
	  this.isPluginsReady = false;
	  this.pluginName = null;
	  this.enabled = false;
	  this.initialized = false;
	  this.hot.addHook('afterPluginsInitialized', (function() {
	    return $__3.onAfterPluginsInitialized();
	  }));
	  this.hot.addHook('afterUpdateSettings', (function() {
	    return $__3.onUpdateSettings();
	  }));
	  this.hot.addHook('beforeInit', (function() {
	    return $__3.init();
	  }));
	};
	($traceurRuntime.createClass)(BasePlugin, {
	  init: function() {
	    this.pluginName = getPluginName(this.hot, this);
	    if (this.isEnabled && this.isEnabled()) {
	      this.enablePlugin();
	    }
	    if (!initializedPlugins) {
	      initializedPlugins = getRegistredPluginNames(this.hot);
	    }
	    if (initializedPlugins.indexOf(this.pluginName) >= 0) {
	      initializedPlugins.splice(initializedPlugins.indexOf(this.pluginName), 1);
	    }
	    if (!initializedPlugins.length) {
	      this.hot.runHooks('afterPluginsInitialized');
	    }
	    this.initialized = true;
	  },
	  enablePlugin: function() {
	    this.enabled = true;
	  },
	  disablePlugin: function() {
	    if (this.eventManager) {
	      this.eventManager.clear();
	    }
	    this.clearHooks();
	    this.enabled = false;
	  },
	  addHook: function(name, callback) {
	    var hooks = privatePool.get(this).hooks[name] = (privatePool.get(this).hooks[name] || []);
	    this.hot.addHook(name, callback);
	    hooks.push(callback);
	    privatePool.get(this).hooks[name] = hooks;
	  },
	  removeHooks: function(name) {
	    var $__3 = this;
	    arrayEach(privatePool.get(this).hooks[name] || [], (function(callback) {
	      $__3.hot.removeHook(name, callback);
	    }));
	  },
	  clearHooks: function() {
	    var $__3 = this;
	    var hooks = privatePool.get(this).hooks;
	    objectEach(hooks, (function(callbacks, name) {
	      return $__3.removeHooks(name);
	    }));
	    hooks.length = 0;
	  },
	  callOnPluginsReady: function(callback) {
	    if (this.isPluginsReady) {
	      callback();
	    } else {
	      this.pluginsInitializedCallbacks.push(callback);
	    }
	  },
	  onAfterPluginsInitialized: function() {
	    arrayEach(this.pluginsInitializedCallbacks, (function(callback) {
	      return callback();
	    }));
	    this.pluginsInitializedCallbacks.length = 0;
	    this.isPluginsReady = true;
	  },
	  onUpdateSettings: function() {
	    if (this.isEnabled) {
	      if (this.enabled && !this.isEnabled()) {
	        this.disablePlugin();
	      }
	      if (!this.enabled && this.isEnabled()) {
	        this.enablePlugin();
	      }
	      if (this.enabled && this.isEnabled()) {
	        if (this.updatePlugin) {
	          this.updatePlugin();
	        }
	      }
	    }
	  },
	  updatePlugin: function() {},
	  destroy: function() {
	    if (this.eventManager) {
	      this.eventManager.destroy();
	    }
	    this.clearHooks();
	    delete this.hot;
	  }
	}, {});
	var $__default = BasePlugin;

	//# 
	},{"helpers/array":41,"helpers/object":49,"plugins":55}],57:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  AutoColumnSize: {get: function() {
	      return AutoColumnSize;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_utils_47_ghostTable__,
	    $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_helpers_47_number__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_utils_47_samplesGenerator__,
	    $___46__46__47__46__46__47_helpers_47_string__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var $__1 = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}),
	    arrayEach = $__1.arrayEach,
	    arrayFilter = $__1.arrayFilter;
	var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    cancelAnimationFrame = $__2.cancelAnimationFrame,
	    requestAnimationFrame = $__2.requestAnimationFrame,
	    isVisible = $__2.isVisible;
	var GhostTable = ($___46__46__47__46__46__47_utils_47_ghostTable__ = require("utils/ghostTable"), $___46__46__47__46__46__47_utils_47_ghostTable__ && $___46__46__47__46__46__47_utils_47_ghostTable__.__esModule && $___46__46__47__46__46__47_utils_47_ghostTable__ || {default: $___46__46__47__46__46__47_utils_47_ghostTable__}).GhostTable;
	var $__4 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    isObject = $__4.isObject,
	    objectEach = $__4.objectEach;
	var $__5 = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}),
	    valueAccordingPercent = $__5.valueAccordingPercent,
	    rangeEach = $__5.rangeEach;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var SamplesGenerator = ($___46__46__47__46__46__47_utils_47_samplesGenerator__ = require("utils/samplesGenerator"), $___46__46__47__46__46__47_utils_47_samplesGenerator__ && $___46__46__47__46__46__47_utils_47_samplesGenerator__.__esModule && $___46__46__47__46__46__47_utils_47_samplesGenerator__ || {default: $___46__46__47__46__46__47_utils_47_samplesGenerator__}).SamplesGenerator;
	var isPercentValue = ($___46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47_helpers_47_string__}).isPercentValue;
	var WalkontableViewportColumnsCalculator = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ = require("3rdparty/walkontable/src/calculator/viewportColumns"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;
	var AutoColumnSize = function AutoColumnSize(hotInstance) {
	  var $__10 = this;
	  $traceurRuntime.superConstructor($AutoColumnSize).call(this, hotInstance);
	  this.widths = [];
	  this.ghostTable = new GhostTable(this.hot);
	  this.samplesGenerator = new SamplesGenerator((function(row, col) {
	    return $__10.hot.getDataAtCell(row, col);
	  }));
	  this.firstCalculation = true;
	  this.inProgress = false;
	  this.addHook('beforeColumnResize', (function(col, size, isDblClick) {
	    return $__10.onBeforeColumnResize(col, size, isDblClick);
	  }));
	};
	var $AutoColumnSize = AutoColumnSize;
	($traceurRuntime.createClass)(AutoColumnSize, {
	  isEnabled: function() {
	    return this.hot.getSettings().autoColumnSize !== false && !this.hot.getSettings().colWidths;
	  },
	  enablePlugin: function() {
	    var $__10 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.addHook('afterLoadData', (function() {
	      return $__10.onAfterLoadData();
	    }));
	    this.addHook('beforeChange', (function(changes) {
	      return $__10.onBeforeChange(changes);
	    }));
	    this.addHook('beforeRender', (function(force) {
	      return $__10.onBeforeRender(force);
	    }));
	    this.addHook('modifyColWidth', (function(width, col) {
	      return $__10.getColumnWidth(col, width);
	    }));
	    $traceurRuntime.superGet(this, $AutoColumnSize.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $AutoColumnSize.prototype, "disablePlugin").call(this);
	  },
	  calculateColumnsWidth: function() {
	    var colRange = arguments[0] !== (void 0) ? arguments[0] : {
	      from: 0,
	      to: this.hot.countCols() - 1
	    };
	    var rowRange = arguments[1] !== (void 0) ? arguments[1] : {
	      from: 0,
	      to: this.hot.countRows() - 1
	    };
	    var force = arguments[2] !== (void 0) ? arguments[2] : false;
	    var $__10 = this;
	    if (typeof colRange === 'number') {
	      colRange = {
	        from: colRange,
	        to: colRange
	      };
	    }
	    if (typeof rowRange === 'number') {
	      rowRange = {
	        from: rowRange,
	        to: rowRange
	      };
	    }
	    rangeEach(colRange.from, colRange.to, (function(col) {
	      if (force || ($__10.widths[col] === void 0 && !$__10.hot._getColWidthFromSettings(col))) {
	        var samples = $__10.samplesGenerator.generateColumnSamples(col, rowRange);
	        samples.forEach((function(sample, col) {
	          return $__10.ghostTable.addColumn(col, sample);
	        }));
	      }
	    }));
	    if (this.ghostTable.columns.length) {
	      this.ghostTable.getWidths((function(col, width) {
	        return $__10.widths[col] = width;
	      }));
	      this.ghostTable.clean();
	    }
	  },
	  calculateAllColumnsWidth: function() {
	    var rowRange = arguments[0] !== (void 0) ? arguments[0] : {
	      from: 0,
	      to: this.hot.countRows() - 1
	    };
	    var $__10 = this;
	    var current = 0;
	    var length = this.hot.countCols() - 1;
	    var timer = null;
	    this.inProgress = true;
	    var loop = (function() {
	      if (!$__10.hot) {
	        cancelAnimationFrame(timer);
	        $__10.inProgress = false;
	        return;
	      }
	      $__10.calculateColumnsWidth({
	        from: current,
	        to: Math.min(current + $AutoColumnSize.CALCULATION_STEP, length)
	      }, rowRange);
	      current = current + $AutoColumnSize.CALCULATION_STEP + 1;
	      if (current < length) {
	        timer = requestAnimationFrame(loop);
	      } else {
	        cancelAnimationFrame(timer);
	        $__10.inProgress = false;
	        $__10.hot.view.wt.wtOverlays.adjustElementsSize(true);
	        if ($__10.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {
	          $__10.hot.view.wt.wtOverlays.leftOverlay.clone.draw();
	        }
	      }
	    });
	    if (this.firstCalculation && this.getSyncCalculationLimit()) {
	      this.calculateColumnsWidth({
	        from: 0,
	        to: this.getSyncCalculationLimit()
	      }, rowRange);
	      this.firstCalculation = false;
	      current = this.getSyncCalculationLimit() + 1;
	    }
	    if (current < length) {
	      loop();
	    } else {
	      this.inProgress = false;
	    }
	  },
	  recalculateAllColumnsWidth: function() {
	    if (this.hot.view && isVisible(this.hot.view.wt.wtTable.TABLE)) {
	      this.clearCache();
	      this.calculateAllColumnsWidth();
	    }
	  },
	  getSyncCalculationLimit: function() {
	    var limit = $AutoColumnSize.SYNC_CALCULATION_LIMIT;
	    var colsLimit = this.hot.countCols() - 1;
	    if (isObject(this.hot.getSettings().autoColumnSize)) {
	      limit = this.hot.getSettings().autoColumnSize.syncLimit;
	      if (isPercentValue(limit)) {
	        limit = valueAccordingPercent(colsLimit, limit);
	      } else {
	        limit = limit >> 0;
	      }
	    }
	    return Math.min(limit, colsLimit);
	  },
	  getColumnWidth: function(col) {
	    var defaultWidth = arguments[1];
	    var keepMinimum = arguments[2] !== (void 0) ? arguments[2] : true;
	    var width = defaultWidth;
	    if (width === void 0) {
	      width = this.widths[col];
	      if (keepMinimum && typeof width === 'number') {
	        width = Math.max(width, WalkontableViewportColumnsCalculator.DEFAULT_WIDTH);
	      }
	    }
	    return width;
	  },
	  getFirstVisibleColumn: function() {
	    var wot = this.hot.view.wt;
	    if (wot.wtViewport.columnsVisibleCalculator) {
	      return wot.wtTable.getFirstVisibleColumn();
	    }
	    if (wot.wtViewport.columnsRenderCalculator) {
	      return wot.wtTable.getFirstRenderedColumn();
	    }
	    return -1;
	  },
	  getLastVisibleColumn: function() {
	    var wot = this.hot.view.wt;
	    if (wot.wtViewport.columnsVisibleCalculator) {
	      return wot.wtTable.getLastVisibleColumn();
	    }
	    if (wot.wtViewport.columnsRenderCalculator) {
	      return wot.wtTable.getLastRenderedColumn();
	    }
	    return -1;
	  },
	  clearCache: function() {
	    this.widths.length = 0;
	  },
	  isNeedRecalculate: function() {
	    return arrayFilter(this.widths, (function(item) {
	      return (item === void 0);
	    })).length ? true : false;
	  },
	  onBeforeRender: function() {
	    var force = this.hot.renderCall;
	    this.calculateColumnsWidth({
	      from: this.getFirstVisibleColumn(),
	      to: this.getLastVisibleColumn()
	    }, void 0, force);
	    if (this.isNeedRecalculate() && !this.inProgress) {
	      this.calculateAllColumnsWidth();
	    }
	  },
	  onAfterLoadData: function() {
	    var $__10 = this;
	    if (this.hot.view) {
	      this.recalculateAllColumnsWidth();
	    } else {
	      setTimeout((function() {
	        if ($__10.hot) {
	          $__10.recalculateAllColumnsWidth();
	        }
	      }), 0);
	    }
	  },
	  onBeforeChange: function(changes) {
	    var $__10 = this;
	    arrayEach(changes, (function(data) {
	      return $__10.widths[data[1]] = void 0;
	    }));
	  },
	  onBeforeColumnResize: function(col, size, isDblClick) {
	    if (isDblClick) {
	      this.calculateColumnsWidth(col, void 0, true);
	      size = this.getColumnWidth(col, void 0, false);
	    }
	    return size;
	  },
	  destroy: function() {
	    this.ghostTable.clean();
	    $traceurRuntime.superGet(this, $AutoColumnSize.prototype, "destroy").call(this);
	  }
	}, {
	  get CALCULATION_STEP() {
	    return 50;
	  },
	  get SYNC_CALCULATION_LIMIT() {
	    return 50;
	  }
	}, BasePlugin);
	;
	registerPlugin('autoColumnSize', AutoColumnSize);

	//# 
	},{"3rdparty/walkontable/src/calculator/viewportColumns":3,"_base":56,"helpers/array":41,"helpers/dom/element":44,"helpers/number":48,"helpers/object":49,"helpers/string":51,"plugins":55,"utils/ghostTable":96,"utils/samplesGenerator":97}],58:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  AutoRowSize: {get: function() {
	      return AutoRowSize;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_utils_47_ghostTable__,
	    $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_helpers_47_number__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_utils_47_samplesGenerator__,
	    $___46__46__47__46__46__47_helpers_47_string__;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var $__1 = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}),
	    arrayEach = $__1.arrayEach,
	    arrayFilter = $__1.arrayFilter;
	var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    cancelAnimationFrame = $__2.cancelAnimationFrame,
	    requestAnimationFrame = $__2.requestAnimationFrame,
	    isVisible = $__2.isVisible;
	var GhostTable = ($___46__46__47__46__46__47_utils_47_ghostTable__ = require("utils/ghostTable"), $___46__46__47__46__46__47_utils_47_ghostTable__ && $___46__46__47__46__46__47_utils_47_ghostTable__.__esModule && $___46__46__47__46__46__47_utils_47_ghostTable__ || {default: $___46__46__47__46__46__47_utils_47_ghostTable__}).GhostTable;
	var $__4 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    isObject = $__4.isObject,
	    objectEach = $__4.objectEach;
	var $__5 = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}),
	    valueAccordingPercent = $__5.valueAccordingPercent,
	    rangeEach = $__5.rangeEach;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var SamplesGenerator = ($___46__46__47__46__46__47_utils_47_samplesGenerator__ = require("utils/samplesGenerator"), $___46__46__47__46__46__47_utils_47_samplesGenerator__ && $___46__46__47__46__46__47_utils_47_samplesGenerator__.__esModule && $___46__46__47__46__46__47_utils_47_samplesGenerator__ || {default: $___46__46__47__46__46__47_utils_47_samplesGenerator__}).SamplesGenerator;
	var isPercentValue = ($___46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47_helpers_47_string__}).isPercentValue;
	var AutoRowSize = function AutoRowSize(hotInstance) {
	  var $__9 = this;
	  $traceurRuntime.superConstructor($AutoRowSize).call(this, hotInstance);
	  this.heights = [];
	  this.ghostTable = new GhostTable(this.hot);
	  this.samplesGenerator = new SamplesGenerator((function(row, col) {
	    return $__9.hot.getDataAtCell(row, col);
	  }));
	  this.firstCalculation = true;
	  this.inProgress = false;
	  this.addHook('beforeRowResize', (function(row, size, isDblClick) {
	    return $__9.onBeforeRowResize(row, size, isDblClick);
	  }));
	};
	var $AutoRowSize = AutoRowSize;
	($traceurRuntime.createClass)(AutoRowSize, {
	  isEnabled: function() {
	    return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);
	  },
	  enablePlugin: function() {
	    var $__9 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.addHook('afterLoadData', (function() {
	      return $__9.onAfterLoadData();
	    }));
	    this.addHook('beforeChange', (function(changes) {
	      return $__9.onBeforeChange(changes);
	    }));
	    this.addHook('beforeColumnMove', (function() {
	      return $__9.recalculateAllRowsHeight();
	    }));
	    this.addHook('beforeColumnResize', (function() {
	      return $__9.recalculateAllRowsHeight();
	    }));
	    this.addHook('beforeColumnSort', (function() {
	      return $__9.clearCache();
	    }));
	    this.addHook('beforeRender', (function(force) {
	      return $__9.onBeforeRender(force);
	    }));
	    this.addHook('beforeRowMove', (function(rowStart, rowEnd) {
	      return $__9.onBeforeRowMove(rowStart, rowEnd);
	    }));
	    this.addHook('modifyRowHeight', (function(height, row) {
	      return $__9.getRowHeight(row, height);
	    }));
	    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "disablePlugin").call(this);
	  },
	  calculateRowsHeight: function() {
	    var rowRange = arguments[0] !== (void 0) ? arguments[0] : {
	      from: 0,
	      to: this.hot.countRows() - 1
	    };
	    var colRange = arguments[1] !== (void 0) ? arguments[1] : {
	      from: 0,
	      to: this.hot.countCols() - 1
	    };
	    var force = arguments[2] !== (void 0) ? arguments[2] : false;
	    var $__9 = this;
	    if (typeof rowRange === 'number') {
	      rowRange = {
	        from: rowRange,
	        to: rowRange
	      };
	    }
	    if (typeof colRange === 'number') {
	      colRange = {
	        from: colRange,
	        to: colRange
	      };
	    }
	    rangeEach(rowRange.from, rowRange.to, (function(row) {
	      if (force || $__9.heights[row] === void 0) {
	        var samples = $__9.samplesGenerator.generateRowSamples(row, colRange);
	        samples.forEach((function(sample, row) {
	          return $__9.ghostTable.addRow(row, sample);
	        }));
	      }
	    }));
	    if (this.ghostTable.rows.length) {
	      this.ghostTable.getHeights((function(row, height) {
	        return $__9.heights[row] = height;
	      }));
	      this.ghostTable.clean();
	    }
	  },
	  calculateAllRowsHeight: function() {
	    var colRange = arguments[0] !== (void 0) ? arguments[0] : {
	      from: 0,
	      to: this.hot.countCols() - 1
	    };
	    var $__9 = this;
	    var current = 0;
	    var length = this.hot.countRows() - 1;
	    var timer = null;
	    this.inProgress = true;
	    var loop = (function() {
	      if (!$__9.hot) {
	        cancelAnimationFrame(timer);
	        $__9.inProgress = false;
	        return;
	      }
	      $__9.calculateRowsHeight({
	        from: current,
	        to: Math.min(current + $AutoRowSize.CALCULATION_STEP, length)
	      }, colRange);
	      current = current + $AutoRowSize.CALCULATION_STEP + 1;
	      if (current < length) {
	        timer = requestAnimationFrame(loop);
	      } else {
	        cancelAnimationFrame(timer);
	        $__9.inProgress = false;
	        $__9.hot.view.wt.wtOverlays.adjustElementsSize(true);
	        if ($__9.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {
	          $__9.hot.view.wt.wtOverlays.leftOverlay.clone.draw();
	        }
	      }
	    });
	    if (this.firstCalculation && this.getSyncCalculationLimit()) {
	      this.calculateRowsHeight({
	        from: 0,
	        to: this.getSyncCalculationLimit()
	      }, colRange);
	      this.firstCalculation = false;
	      current = this.getSyncCalculationLimit() + 1;
	    }
	    if (current < length) {
	      loop();
	    } else {
	      this.inProgress = false;
	    }
	  },
	  recalculateAllRowsHeight: function() {
	    if (isVisible(this.hot.view.wt.wtTable.TABLE)) {
	      this.clearCache();
	      this.calculateAllRowsHeight();
	    }
	  },
	  getSyncCalculationLimit: function() {
	    var limit = $AutoRowSize.SYNC_CALCULATION_LIMIT;
	    var rowsLimit = this.hot.countRows() - 1;
	    if (isObject(this.hot.getSettings().autoRowSize)) {
	      limit = this.hot.getSettings().autoRowSize.syncLimit;
	      if (isPercentValue(limit)) {
	        limit = valueAccordingPercent(rowsLimit, limit);
	      } else {
	        limit = limit >> 0;
	      }
	    }
	    return Math.min(limit, rowsLimit);
	  },
	  getRowHeight: function(row) {
	    var defaultHeight = arguments[1];
	    var height = defaultHeight;
	    if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {
	      height = this.heights[row];
	    }
	    return height;
	  },
	  getFirstVisibleRow: function() {
	    var wot = this.hot.view.wt;
	    if (wot.wtViewport.rowsVisibleCalculator) {
	      return wot.wtTable.getFirstVisibleRow();
	    }
	    if (wot.wtViewport.rowsRenderCalculator) {
	      return wot.wtTable.getFirstRenderedRow();
	    }
	    return -1;
	  },
	  getLastVisibleRow: function() {
	    var wot = this.hot.view.wt;
	    if (wot.wtViewport.rowsVisibleCalculator) {
	      return wot.wtTable.getLastVisibleRow();
	    }
	    if (wot.wtViewport.rowsRenderCalculator) {
	      return wot.wtTable.getLastRenderedRow();
	    }
	    return -1;
	  },
	  clearCache: function() {
	    this.heights.length = 0;
	  },
	  clearCacheByRange: function(range) {
	    var $__9 = this;
	    if (typeof range === 'number') {
	      range = {
	        from: range,
	        to: range
	      };
	    }
	    rangeEach(Math.min(range.from, range.to), Math.max(range.from, range.to), (function(row) {
	      return $__9.heights[row] = void 0;
	    }));
	  },
	  isNeedRecalculate: function() {
	    return arrayFilter(this.heights, (function(item) {
	      return (item === void 0);
	    })).length ? true : false;
	  },
	  onBeforeRender: function() {
	    var force = this.hot.renderCall;
	    this.calculateRowsHeight({
	      from: this.getFirstVisibleRow(),
	      to: this.getLastVisibleRow()
	    }, void 0, force);
	    if (this.isNeedRecalculate() && !this.inProgress) {
	      this.calculateAllRowsHeight();
	    }
	  },
	  onBeforeRowMove: function(from, to) {
	    this.clearCacheByRange({
	      from: from,
	      to: to
	    });
	    this.calculateAllRowsHeight();
	  },
	  onBeforeRowResize: function(row, size, isDblClick) {
	    if (isDblClick) {
	      this.calculateRowsHeight(row, void 0, true);
	      size = this.getRowHeight(row);
	    }
	    return size;
	  },
	  onAfterLoadData: function() {
	    var $__9 = this;
	    if (this.hot.view) {
	      this.recalculateAllRowsHeight();
	    } else {
	      setTimeout((function() {
	        if ($__9.hot) {
	          $__9.recalculateAllRowsHeight();
	        }
	      }), 0);
	    }
	  },
	  onBeforeChange: function(changes) {
	    var range = null;
	    if (changes.length === 1) {
	      range = changes[0][0];
	    } else if (changes.length > 1) {
	      range = {
	        from: changes[0][0],
	        to: changes[changes.length - 1][0]
	      };
	    }
	    if (range !== null) {
	      this.clearCacheByRange(range);
	    }
	  },
	  destroy: function() {
	    this.ghostTable.clean();
	    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "destroy").call(this);
	  }
	}, {
	  get CALCULATION_STEP() {
	    return 50;
	  },
	  get SYNC_CALCULATION_LIMIT() {
	    return 500;
	  }
	}, BasePlugin);
	;
	registerPlugin('autoRowSize', AutoRowSize);

	//# 
	},{"_base":56,"helpers/array":41,"helpers/dom/element":44,"helpers/number":48,"helpers/object":49,"helpers/string":51,"plugins":55,"utils/ghostTable":96,"utils/samplesGenerator":97}],59:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Autofill: {get: function() {
	      return Autofill;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    offset = $__0.offset,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	;
	function getDeltas(start, end, data, direction) {
	  var rlength = data.length,
	      clength = data ? data[0].length : 0,
	      deltas = [],
	      arr = [],
	      diffRow,
	      diffCol,
	      startValue,
	      endValue,
	      delta;
	  diffRow = end.row - start.row;
	  diffCol = end.col - start.col;
	  if (['down', 'up'].indexOf(direction) !== -1) {
	    for (var col = 0; col <= diffCol; col++) {
	      startValue = parseInt(data[0][col], 10);
	      endValue = parseInt(data[rlength - 1][col], 10);
	      delta = (direction === 'down' ? (endValue - startValue) : (startValue - endValue)) / (rlength - 1) || 0;
	      arr.push(delta);
	    }
	    deltas.push(arr);
	  }
	  if (['right', 'left'].indexOf(direction) !== -1) {
	    for (var row = 0; row <= diffRow; row++) {
	      startValue = parseInt(data[row][0], 10);
	      endValue = parseInt(data[row][clength - 1], 10);
	      delta = (direction === 'right' ? (endValue - startValue) : (startValue - endValue)) / (clength - 1) || 0;
	      arr = [];
	      arr.push(delta);
	      deltas.push(arr);
	    }
	  }
	  return deltas;
	}
	function Autofill(instance) {
	  var _this = this,
	      mouseDownOnCellCorner = false,
	      wtOnCellCornerMouseDown,
	      wtOnCellMouseOver,
	      eventManager;
	  this.instance = instance;
	  this.addingStarted = false;
	  eventManager = eventManagerObject(instance);
	  function mouseUpCallback(event) {
	    if (!instance.autofill) {
	      return true;
	    }
	    if (instance.autofill.handle && instance.autofill.handle.isDragged) {
	      if (instance.autofill.handle.isDragged > 1) {
	        instance.autofill.apply();
	      }
	      instance.autofill.handle.isDragged = 0;
	      mouseDownOnCellCorner = false;
	    }
	  }
	  function mouseMoveCallback(event) {
	    var tableBottom,
	        tableRight;
	    if (!_this.instance.autofill) {
	      return false;
	    }
	    tableBottom = offset(_this.instance.table).top - (window.pageYOffset || document.documentElement.scrollTop) + outerHeight(_this.instance.table);
	    tableRight = offset(_this.instance.table).left - (window.pageXOffset || document.documentElement.scrollLeft) + outerWidth(_this.instance.table);
	    if (_this.addingStarted === false && _this.instance.autofill.handle.isDragged > 0 && event.clientY > tableBottom && event.clientX <= tableRight) {
	      _this.instance.mouseDragOutside = true;
	      _this.addingStarted = true;
	    } else {
	      _this.instance.mouseDragOutside = false;
	    }
	    if (_this.instance.mouseDragOutside) {
	      setTimeout(function() {
	        _this.addingStarted = false;
	        _this.instance.alter('insert_row');
	      }, 200);
	    }
	  }
	  eventManager.addEventListener(document, 'mouseup', mouseUpCallback);
	  eventManager.addEventListener(document, 'mousemove', mouseMoveCallback);
	  wtOnCellCornerMouseDown = this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown;
	  this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown = function(event) {
	    instance.autofill.handle.isDragged = 1;
	    mouseDownOnCellCorner = true;
	    wtOnCellCornerMouseDown(event);
	  };
	  wtOnCellMouseOver = this.instance.view.wt.wtSettings.settings.onCellMouseOver;
	  this.instance.view.wt.wtSettings.settings.onCellMouseOver = function(event, coords, TD, wt) {
	    if (instance.autofill && mouseDownOnCellCorner && !instance.view.isMouseDown() && instance.autofill.handle && instance.autofill.handle.isDragged) {
	      instance.autofill.handle.isDragged++;
	      instance.autofill.showBorder(coords);
	      instance.autofill.checkIfNewRowNeeded();
	    }
	    wtOnCellMouseOver(event, coords, TD, wt);
	  };
	  this.instance.view.wt.wtSettings.settings.onCellCornerDblClick = function() {
	    instance.autofill.selectAdjacent();
	  };
	}
	Autofill.prototype.init = function() {
	  this.handle = {};
	};
	Autofill.prototype.disable = function() {
	  this.handle.disabled = true;
	};
	Autofill.prototype.selectAdjacent = function() {
	  var select,
	      data,
	      r,
	      maxR,
	      c;
	  if (this.instance.selection.isMultiple()) {
	    select = this.instance.view.wt.selections.area.getCorners();
	  } else {
	    select = this.instance.view.wt.selections.current.getCorners();
	  }
	  data = this.instance.getData();
	  rows: for (r = select[2] + 1; r < this.instance.countRows(); r++) {
	    for (c = select[1]; c <= select[3]; c++) {
	      if (data[r][c]) {
	        break rows;
	      }
	    }
	    if (!!data[r][select[1] - 1] || !!data[r][select[3] + 1]) {
	      maxR = r;
	    }
	  }
	  if (maxR) {
	    this.instance.view.wt.selections.fill.clear();
	    this.instance.view.wt.selections.fill.add(new WalkontableCellCoords(select[0], select[1]));
	    this.instance.view.wt.selections.fill.add(new WalkontableCellCoords(maxR, select[3]));
	    this.apply();
	  }
	};
	Autofill.prototype.apply = function() {
	  var drag,
	      select,
	      start,
	      end,
	      _data,
	      direction,
	      deltas,
	      selRange;
	  this.handle.isDragged = 0;
	  if (this.instance.view.wt.selections.fill.isEmpty()) {
	    return;
	  }
	  drag = this.instance.view.wt.selections.fill.getCorners();
	  this.instance.view.wt.selections.fill.clear();
	  if (this.instance.selection.isMultiple()) {
	    select = this.instance.view.wt.selections.area.getCorners();
	  } else {
	    select = this.instance.view.wt.selections.current.getCorners();
	  }
	  Handsontable.hooks.run(this.instance, 'afterAutofillApplyValues', select, drag);
	  if (drag[0] === select[0] && drag[1] < select[1]) {
	    direction = 'left';
	    start = new WalkontableCellCoords(drag[0], drag[1]);
	    end = new WalkontableCellCoords(drag[2], select[1] - 1);
	  } else if (drag[0] === select[0] && drag[3] > select[3]) {
	    direction = 'right';
	    start = new WalkontableCellCoords(drag[0], select[3] + 1);
	    end = new WalkontableCellCoords(drag[2], drag[3]);
	  } else if (drag[0] < select[0] && drag[1] === select[1]) {
	    direction = 'up';
	    start = new WalkontableCellCoords(drag[0], drag[1]);
	    end = new WalkontableCellCoords(select[0] - 1, drag[3]);
	  } else if (drag[2] > select[2] && drag[1] === select[1]) {
	    direction = 'down';
	    start = new WalkontableCellCoords(select[2] + 1, drag[1]);
	    end = new WalkontableCellCoords(drag[2], drag[3]);
	  }
	  if (start && start.row > -1 && start.col > -1) {
	    selRange = {
	      from: this.instance.getSelectedRange().from,
	      to: this.instance.getSelectedRange().to
	    };
	    _data = this.instance.getData(selRange.from.row, selRange.from.col, selRange.to.row, selRange.to.col);
	    deltas = getDeltas(start, end, _data, direction);
	    Handsontable.hooks.run(this.instance, 'beforeAutofill', start, end, _data);
	    this.instance.populateFromArray(start.row, start.col, _data, end.row, end.col, 'autofill', null, direction, deltas);
	    this.instance.selection.setRangeStart(new WalkontableCellCoords(drag[0], drag[1]));
	    this.instance.selection.setRangeEnd(new WalkontableCellCoords(drag[2], drag[3]));
	  } else {
	    this.instance.selection.refreshBorders();
	  }
	};
	Autofill.prototype.showBorder = function(coords) {
	  var topLeft = this.instance.getSelectedRange().getTopLeftCorner(),
	      bottomRight = this.instance.getSelectedRange().getBottomRightCorner();
	  if (this.instance.getSettings().fillHandle !== 'horizontal' && (bottomRight.row < coords.row || topLeft.row > coords.row)) {
	    coords = new WalkontableCellCoords(coords.row, bottomRight.col);
	  } else if (this.instance.getSettings().fillHandle !== 'vertical') {
	    coords = new WalkontableCellCoords(bottomRight.row, coords.col);
	  } else {
	    return;
	  }
	  this.instance.view.wt.selections.fill.clear();
	  this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().from);
	  this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().to);
	  this.instance.view.wt.selections.fill.add(coords);
	  this.instance.view.render();
	};
	Autofill.prototype.checkIfNewRowNeeded = function() {
	  var fillCorners,
	      selection,
	      tableRows = this.instance.countRows(),
	      that = this;
	  if (this.instance.view.wt.selections.fill.cellRange && this.addingStarted === false) {
	    selection = this.instance.getSelected();
	    fillCorners = this.instance.view.wt.selections.fill.getCorners();
	    if (selection[2] < tableRows - 1 && fillCorners[2] === tableRows - 1) {
	      this.addingStarted = true;
	      this.instance._registerTimeout(setTimeout(function() {
	        that.instance.alter('insert_row');
	        that.addingStarted = false;
	      }, 200));
	    }
	  }
	};
	Handsontable.hooks.add('afterInit', function() {
	  var autofill = new Autofill(this);
	  if (typeof this.getSettings().fillHandle !== 'undefined') {
	    if (autofill.handle && this.getSettings().fillHandle === false) {
	      autofill.disable();
	    } else if (!autofill.handle && this.getSettings().fillHandle !== false) {
	      this.autofill = autofill;
	      this.autofill.init();
	    }
	  }
	});
	Handsontable.Autofill = Autofill;

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"eventManager":40,"helpers/dom/element":44,"plugins":55}],60:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  default: {get: function() {
	      return $__default;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_plugins__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    closest = $__0.closest,
	    hasClass = $__0.hasClass,
	    index = $__0.index,
	    removeClass = $__0.removeClass;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	Handsontable.hooks.register('beforeColumnSort');
	Handsontable.hooks.register('afterColumnSort');
	var ColumnSorting = function ColumnSorting(hotInstance) {
	  $traceurRuntime.superConstructor($ColumnSorting).call(this, hotInstance);
	  this.sortIndicators = [];
	};
	var $ColumnSorting = ColumnSorting;
	($traceurRuntime.createClass)(ColumnSorting, {
	  isEnabled: function() {
	    return !!(this.hot.getSettings().columnSorting);
	  },
	  enablePlugin: function() {
	    var $__4 = this;
	    if (this.enabled) {
	      return;
	    }
	    var _this = this;
	    this.hot.sortIndex = [];
	    this.hot.sort = function() {
	      var args = Array.prototype.slice.call(arguments);
	      return _this.sortByColumn.apply(_this, args);
	    };
	    if (typeof this.hot.getSettings().observeChanges === 'undefined') {
	      this.enableObserveChangesPlugin();
	    }
	    this.bindColumnSortingAfterClick();
	    this.addHook('modifyRow', (function(row) {
	      return $__4.translateRow(row);
	    }));
	    this.addHook('afterUpdateSettings', (function() {
	      return $__4.onAfterUpdateSettings();
	    }));
	    this.addHook('afterGetColHeader', (function(col, TH) {
	      return $__4.getColHeader(col, TH);
	    }));
	    this.addHook('afterCreateRow', function() {
	      _this.afterCreateRow.apply(_this, arguments);
	    });
	    this.addHook('afterRemoveRow', function() {
	      _this.afterRemoveRow.apply(_this, arguments);
	    });
	    this.addHook('afterInit', (function() {
	      return $__4.sortBySettings();
	    }));
	    this.addHook('afterLoadData', (function() {
	      $__4.hot.sortIndex = [];
	      if ($__4.hot.view) {
	        $__4.sortBySettings();
	      }
	    }));
	    if (this.hot.view) {
	      this.sortBySettings();
	    }
	    $traceurRuntime.superGet(this, $ColumnSorting.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    this.hot.sort = void 0;
	    $traceurRuntime.superGet(this, $ColumnSorting.prototype, "disablePlugin").call(this);
	  },
	  onAfterUpdateSettings: function() {
	    this.sortBySettings();
	  },
	  sortBySettings: function() {
	    var sortingSettings = this.hot.getSettings().columnSorting;
	    var loadedSortingState = this.loadSortingState();
	    var sortingColumn;
	    var sortingOrder;
	    if (typeof loadedSortingState === 'undefined') {
	      sortingColumn = sortingSettings.column;
	      sortingOrder = sortingSettings.sortOrder;
	    } else {
	      sortingColumn = loadedSortingState.sortColumn;
	      sortingOrder = loadedSortingState.sortOrder;
	    }
	    this.sortByColumn(sortingColumn, sortingOrder);
	  },
	  setSortingColumn: function(col, order) {
	    if (typeof col == 'undefined') {
	      this.hot.sortColumn = void 0;
	      this.hot.sortOrder = void 0;
	      return;
	    } else if (this.hot.sortColumn === col && typeof order == 'undefined') {
	      if (this.hot.sortOrder === false) {
	        this.hot.sortOrder = void 0;
	      } else {
	        this.hot.sortOrder = !this.hot.sortOrder;
	      }
	    } else {
	      this.hot.sortOrder = typeof order === 'undefined' ? true : order;
	    }
	    this.hot.sortColumn = col;
	  },
	  sortByColumn: function(col, order) {
	    this.setSortingColumn(col, order);
	    if (typeof this.hot.sortColumn == 'undefined') {
	      return;
	    }
	    Handsontable.hooks.run(this.hot, 'beforeColumnSort', this.hot.sortColumn, this.hot.sortOrder);
	    this.sort();
	    this.hot.render();
	    this.saveSortingState();
	    Handsontable.hooks.run(this.hot, 'afterColumnSort', this.hot.sortColumn, this.hot.sortOrder);
	  },
	  saveSortingState: function() {
	    var sortingState = {};
	    if (typeof this.hot.sortColumn != 'undefined') {
	      sortingState.sortColumn = this.hot.sortColumn;
	    }
	    if (typeof this.hot.sortOrder != 'undefined') {
	      sortingState.sortOrder = this.hot.sortOrder;
	    }
	    if (sortingState.hasOwnProperty('sortColumn') || sortingState.hasOwnProperty('sortOrder')) {
	      Handsontable.hooks.run(this.hot, 'persistentStateSave', 'columnSorting', sortingState);
	    }
	  },
	  loadSortingState: function() {
	    var storedState = {};
	    Handsontable.hooks.run(this.hot, 'persistentStateLoad', 'columnSorting', storedState);
	    return storedState.value;
	  },
	  bindColumnSortingAfterClick: function() {
	    if (this.bindedSortEvent) {
	      return;
	    }
	    var eventManager = eventManagerObject(this.hot),
	        _this = this;
	    this.bindedSortEvent = true;
	    eventManager.addEventListener(this.hot.rootElement, 'click', function(e) {
	      if (hasClass(e.target, 'columnSorting')) {
	        var col = getColumn(e.target);
	        if (col === this.lastSortedColumn) {
	          switch (_this.hot.sortOrder) {
	            case void 0:
	              _this.sortOrderClass = 'ascending';
	              break;
	            case true:
	              _this.sortOrderClass = 'descending';
	              break;
	            case false:
	              _this.sortOrderClass = void 0;
	          }
	        } else {
	          _this.sortOrderClass = 'ascending';
	        }
	        this.lastSortedColumn = col;
	        _this.sortByColumn(col);
	      }
	    });
	    function countRowHeaders() {
	      var THs = _this.hot.view.TBODY.querySelector('tr').querySelectorAll('th');
	      return THs.length;
	    }
	    function getColumn(target) {
	      var TH = closest(target, 'TH');
	      return _this.hot.view.wt.wtTable.getFirstRenderedColumn() + index(TH) - countRowHeaders();
	    }
	  },
	  enableObserveChangesPlugin: function() {
	    var _this = this;
	    this.hot._registerTimeout(setTimeout(function() {
	      _this.hot.updateSettings({observeChanges: true});
	    }, 0));
	  },
	  defaultSort: function(sortOrder) {
	    return function(a, b) {
	      if (typeof a[1] == 'string') {
	        a[1] = a[1].toLowerCase();
	      }
	      if (typeof b[1] == 'string') {
	        b[1] = b[1].toLowerCase();
	      }
	      if (a[1] === b[1]) {
	        return 0;
	      }
	      if (a[1] === null || a[1] === '') {
	        return 1;
	      }
	      if (b[1] === null || b[1] === '') {
	        return -1;
	      }
	      if (isNaN(a[1]) && !isNaN(b[1])) {
	        return sortOrder ? 1 : -1;
	      } else if (!isNaN(a[1]) && isNaN(b[1])) {
	        return sortOrder ? -1 : 1;
	      }
	      if (a[1] < b[1]) {
	        return sortOrder ? -1 : 1;
	      }
	      if (a[1] > b[1]) {
	        return sortOrder ? 1 : -1;
	      }
	      return 0;
	    };
	  },
	  dateSort: function(sortOrder) {
	    return function(a, b) {
	      if (a[1] === b[1]) {
	        return 0;
	      }
	      if (a[1] === null || a[1] === '') {
	        return 1;
	      }
	      if (b[1] === null || b[1] === '') {
	        return -1;
	      }
	      var aDate = new Date(a[1]);
	      var bDate = new Date(b[1]);
	      if (aDate < bDate) {
	        return sortOrder ? -1 : 1;
	      }
	      if (aDate > bDate) {
	        return sortOrder ? 1 : -1;
	      }
	      return 0;
	    };
	  },
	  sort: function() {
	    if (typeof this.hot.sortOrder == 'undefined') {
	      return;
	    }
	    var colMeta,
	        sortFunction;
	    this.hot.sortingEnabled = false;
	    this.hot.sortIndex.length = 0;
	    var colOffset = this.hot.colOffset();
	    for (var i = 0,
	        ilen = this.hot.countRows() - this.hot.getSettings().minSpareRows; i < ilen; i++) {
	      this.hot.sortIndex.push([i, this.hot.getDataAtCell(i, this.hot.sortColumn + colOffset)]);
	    }
	    colMeta = this.hot.getCellMeta(0, this.hot.sortColumn);
	    this.sortIndicators[this.hot.sortColumn] = colMeta.sortIndicator;
	    switch (colMeta.type) {
	      case 'date':
	        sortFunction = this.dateSort;
	        break;
	      default:
	        sortFunction = this.defaultSort;
	    }
	    this.hot.sortIndex.sort(sortFunction(this.hot.sortOrder));
	    for (var i = this.hot.sortIndex.length; i < this.hot.countRows(); i++) {
	      this.hot.sortIndex.push([i, this.hot.getDataAtCell(i, this.hot.sortColumn + colOffset)]);
	    }
	    this.hot.sortingEnabled = true;
	  },
	  translateRow: function(row) {
	    if (this.hot.sortingEnabled && (typeof this.hot.sortOrder !== 'undefined') && this.hot.sortIndex && this.hot.sortIndex.length && this.hot.sortIndex[row]) {
	      return this.hot.sortIndex[row][0];
	    }
	    return row;
	  },
	  untranslateRow: function(row) {
	    if (this.hot.sortingEnabled && this.hot.sortIndex && this.hot.sortIndex.length) {
	      for (var i = 0; i < this.hot.sortIndex.length; i++) {
	        if (this.hot.sortIndex[i][0] == row) {
	          return i;
	        }
	      }
	    }
	  },
	  getColHeader: function(col, TH) {
	    var headerLink = TH.querySelector('.colHeader');
	    var colspan = TH.getAttribute('colspan');
	    var TRs = TH.parentNode.parentNode.childNodes;
	    var headerLevel = Array.prototype.indexOf.call(TRs, TH.parentNode);
	    headerLevel = headerLevel - TRs.length;
	    if (!headerLink) {
	      return;
	    }
	    if (this.hot.getSettings().columnSorting && col >= 0 && headerLevel === -1) {
	      addClass(headerLink, 'columnSorting');
	    }
	    removeClass(headerLink, 'descending');
	    removeClass(headerLink, 'ascending');
	    if (this.sortIndicators[col]) {
	      if (col === this.hot.sortColumn) {
	        if (this.sortOrderClass === 'ascending') {
	          addClass(headerLink, 'ascending');
	        } else if (this.sortOrderClass === 'descending') {
	          addClass(headerLink, 'descending');
	        }
	      }
	    }
	  },
	  isSorted: function() {
	    return typeof this.hot.sortColumn != 'undefined';
	  },
	  afterCreateRow: function(index, amount) {
	    if (!this.isSorted()) {
	      return;
	    }
	    for (var i = 0; i < this.hot.sortIndex.length; i++) {
	      if (this.hot.sortIndex[i][0] >= index) {
	        this.hot.sortIndex[i][0] += amount;
	      }
	    }
	    for (var i = 0; i < amount; i++) {
	      this.hot.sortIndex.splice(index + i, 0, [index + i, this.hot.getData()[index + i][this.hot.sortColumn + this.hot.colOffset()]]);
	    }
	    this.saveSortingState();
	  },
	  afterRemoveRow: function(index, amount) {
	    if (!this.isSorted()) {
	      return;
	    }
	    var physicalRemovedIndex = this.translateRow(index);
	    this.hot.sortIndex.splice(index, amount);
	    for (var i = 0; i < this.hot.sortIndex.length; i++) {
	      if (this.hot.sortIndex[i][0] > physicalRemovedIndex) {
	        this.hot.sortIndex[i][0] -= amount;
	      }
	    }
	    this.saveSortingState();
	  }
	}, {}, BasePlugin);
	var $__default = ColumnSorting;
	registerPlugin('columnSorting', ColumnSorting);

	//# 
	},{"_base":56,"eventManager":40,"helpers/dom/element":44,"plugins":55}],61:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  CommentEditor: {get: function() {
	      return CommentEditor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__;
	var addClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;
	var CommentEditor = function CommentEditor() {
	  this.editor = this.createEditor();
	  this.editorStyle = this.editor.style;
	  this.editorStyle.position = 'absolute';
	  this.editorStyle.zIndex = 100;
	  this.hide();
	};
	var $CommentEditor = CommentEditor;
	($traceurRuntime.createClass)(CommentEditor, {
	  setPosition: function(x, y) {
	    this.editorStyle.left = x + 'px';
	    this.editorStyle.top = y + 'px';
	  },
	  show: function() {
	    this.editorStyle.display = 'block';
	  },
	  hide: function() {
	    this.editorStyle.display = 'none';
	  },
	  isVisible: function() {
	    return this.editorStyle.display === 'block';
	  },
	  setValue: function() {
	    var value = arguments[0] !== (void 0) ? arguments[0] : '';
	    value = value || '';
	    this.getInputElement().value = value;
	  },
	  getValue: function() {
	    return this.getInputElement().value;
	  },
	  isFocused: function() {
	    return document.activeElement === this.getInputElement();
	  },
	  focus: function() {
	    this.getInputElement().focus();
	  },
	  createEditor: function() {
	    var container = document.querySelector('.' + $CommentEditor.CLASS_EDITOR_CONTAINER);
	    var editor;
	    var textArea;
	    if (!container) {
	      container = document.createElement('div');
	      addClass(container, $CommentEditor.CLASS_EDITOR_CONTAINER);
	      document.body.appendChild(container);
	    }
	    editor = document.createElement('div');
	    addClass(editor, $CommentEditor.CLASS_EDITOR);
	    textArea = document.createElement('textarea');
	    addClass(textArea, $CommentEditor.CLASS_INPUT);
	    editor.appendChild(textArea);
	    container.appendChild(editor);
	    return editor;
	  },
	  getInputElement: function() {
	    return this.editor.querySelector('.' + $CommentEditor.CLASS_INPUT);
	  },
	  destroy: function() {
	    this.editor.parentNode.removeChild(this.editor);
	    this.editor = null;
	    this.editorStyle = null;
	  }
	}, {
	  get CLASS_EDITOR_CONTAINER() {
	    return 'htCommentsContainer';
	  },
	  get CLASS_EDITOR() {
	    return 'htComments';
	  },
	  get CLASS_INPUT() {
	    return 'htCommentTextArea';
	  },
	  get CLASS_CELL() {
	    return 'htCommentCell';
	  }
	});
	;

	//# 
	},{"helpers/dom/element":44}],62:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Comments: {get: function() {
	      return Comments;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__95_base__,
	    $__commentEditor__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    closest = $__0.closest,
	    getWindowScrollLeft = $__0.getWindowScrollLeft,
	    getWindowScrollTop = $__0.getWindowScrollTop,
	    hasClass = $__0.hasClass,
	    offset = $__0.offset;
	var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;
	var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var $__3 = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}),
	    registerPlugin = $__3.registerPlugin,
	    getPlugin = $__3.getPlugin;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var CommentEditor = ($__commentEditor__ = require("commentEditor"), $__commentEditor__ && $__commentEditor__.__esModule && $__commentEditor__ || {default: $__commentEditor__}).CommentEditor;
	var Comments = function Comments(hotInstance) {
	  $traceurRuntime.superConstructor($Comments).call(this, hotInstance);
	  this.editor = null;
	  this.eventManager = null;
	  this.range = {};
	  this.mouseDown = false;
	  this.contextMenuEvent = false;
	  this.timer = null;
	};
	var $Comments = Comments;
	($traceurRuntime.createClass)(Comments, {
	  isEnabled: function() {
	    return this.hot.getSettings().comments;
	  },
	  enablePlugin: function() {
	    var $__6 = this;
	    if (this.enabled) {
	      return;
	    }
	    if (!this.editor) {
	      this.editor = new CommentEditor();
	    }
	    if (!this.eventManager) {
	      this.eventManager = new EventManager(this);
	    }
	    this.addHook('afterContextMenuDefaultOptions', (function(options) {
	      return $__6.addToContextMenu(options);
	    }));
	    this.addHook('afterRenderer', (function(TD, row, col, prop, value, cellProperties) {
	      return $__6.onAfterRenderer(TD, cellProperties);
	    }));
	    this.addHook('afterScrollVertically', (function() {
	      return $__6.refreshEditorPosition();
	    }));
	    this.addHook('afterColumnResize', (function() {
	      return $__6.refreshEditorPosition();
	    }));
	    this.addHook('afterRowResize', (function() {
	      return $__6.refreshEditorPosition();
	    }));
	    this.registerListeners();
	    $traceurRuntime.superGet(this, $Comments.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $Comments.prototype, "disablePlugin").call(this);
	  },
	  registerListeners: function() {
	    var $__6 = this;
	    this.eventManager.addEventListener(document, 'mouseover', (function(event) {
	      return $__6.onMouseOver(event);
	    }));
	    this.eventManager.addEventListener(document, 'mousedown', (function(event) {
	      return $__6.onMouseDown(event);
	    }));
	    this.eventManager.addEventListener(document, 'mousemove', (function(event) {
	      return $__6.onMouseMove(event);
	    }));
	    this.eventManager.addEventListener(document, 'mouseup', (function(event) {
	      return $__6.onMouseUp(event);
	    }));
	    this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', (function(event) {
	      return $__6.onEditorBlur(event);
	    }));
	  },
	  setRange: function(range) {
	    this.range = range;
	  },
	  clearRange: function() {
	    this.range = {};
	  },
	  targetIsCellWithComment: function(event) {
	    return hasClass(event.target, 'htCommentCell') && closest(event.target, [this.hot.rootElement]) ? true : false;
	  },
	  targetIsCommentTextArea: function(event) {
	    return this.editor.getInputElement() === event.target;
	  },
	  saveComment: function() {
	    if (!this.range.from) {
	      throw new Error('Before using this method, first set cell range (hot.getPlugin("comment").setRange())');
	    }
	    var comment = this.editor.getValue();
	    var row = this.range.from.row;
	    var col = this.range.from.col;
	    this.hot.setCellMeta(row, col, 'comment', comment);
	    this.hot.render();
	  },
	  saveCommentAtCell: function(row, col) {
	    this.setRange({from: new WalkontableCellCoords(row, col)});
	    this.saveComment();
	  },
	  removeComment: function() {
	    if (!this.range.from) {
	      throw new Error('Before using this method, first set cell range (hot.getPlugin("comment").setRange())');
	    }
	    this.hot.removeCellMeta(this.range.from.row, this.range.from.col, 'comment');
	    this.hot.render();
	    this.hide();
	  },
	  removeCommentAtCell: function(row, col) {
	    this.setRange({from: new WalkontableCellCoords(row, col)});
	    this.removeComment();
	  },
	  show: function() {
	    if (!this.range.from) {
	      throw new Error('Before using this method, first set cell range (hot.getPlugin("comment").setRange())');
	    }
	    var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);
	    this.refreshEditorPosition(true);
	    this.editor.setValue(meta.comment || '');
	    this.editor.show();
	    return true;
	  },
	  showAtCell: function(row, col) {
	    this.setRange({from: new WalkontableCellCoords(row, col)});
	    return this.show();
	  },
	  hide: function() {
	    this.editor.hide();
	  },
	  refreshEditorPosition: function() {
	    var force = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (!force && (!this.range.from || !this.editor.isVisible())) {
	      return;
	    }
	    var TD = this.hot.view.wt.wtTable.getCell(this.range.from);
	    var cellOffset = offset(TD);
	    var lastColWidth = this.hot.getColWidth(this.range.from.col);
	    var cellTopOffset = cellOffset.top;
	    var cellLeftOffset = cellOffset.left;
	    var verticalCompensation = 0;
	    var horizontalCompensation = 0;
	    if (this.hot.view.wt.wtViewport.hasVerticalScroll()) {
	      cellTopOffset = cellTopOffset - this.hot.view.wt.wtOverlays.topOverlay.getScrollPosition();
	      verticalCompensation = 20;
	    }
	    if (this.hot.view.wt.wtViewport.hasHorizontalScroll()) {
	      cellLeftOffset = cellLeftOffset - this.hot.view.wt.wtOverlays.leftOverlay.getScrollPosition();
	      horizontalCompensation = 20;
	    }
	    var x = cellLeftOffset + lastColWidth;
	    var y = cellTopOffset;
	    var rect = this.hot.view.wt.wtTable.holder.getBoundingClientRect();
	    var holderPos = {
	      left: rect.left + getWindowScrollLeft() + horizontalCompensation,
	      right: rect.right + getWindowScrollLeft() - 15,
	      top: rect.top + getWindowScrollTop() + verticalCompensation,
	      bottom: rect.bottom + getWindowScrollTop()
	    };
	    if (x <= holderPos.left || x > holderPos.right || y <= holderPos.top || y > holderPos.bottom) {
	      this.hide();
	    } else {
	      this.editor.setPosition(x, y);
	    }
	  },
	  onMouseDown: function(event) {
	    this.mouseDown = true;
	    if (!this.hot.view || !this.hot.view.wt) {
	      return;
	    }
	    if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event) && !this.targetIsCellWithComment(event)) {
	      this.hide();
	    }
	    this.contextMenuEvent = false;
	  },
	  onMouseOver: function(event) {
	    if (this.mouseDown || this.editor.isFocused()) {
	      return;
	    }
	    if (this.targetIsCellWithComment(event)) {
	      var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);
	      var range = {from: new WalkontableCellCoords(coordinates.row, coordinates.col)};
	      this.setRange(range);
	      this.show();
	    } else if (!this.targetIsCommentTextArea(event) && !this.editor.isFocused()) {
	      this.hide();
	    }
	  },
	  onMouseMove: function(event) {
	    var $__6 = this;
	    if (this.targetIsCommentTextArea(event)) {
	      this.mouseDown = true;
	      clearTimeout(this.timer);
	      this.timer = setTimeout((function() {
	        $__6.mouseDown = false;
	      }), 200);
	    }
	  },
	  onMouseUp: function(event) {
	    this.mouseDown = false;
	  },
	  onAfterRenderer: function(TD, cellProperties) {
	    if (cellProperties.comment) {
	      addClass(TD, cellProperties.commentedCellClassName);
	    }
	  },
	  onEditorBlur: function(event) {
	    this.saveComment();
	  },
	  checkSelectionCommentsConsistency: function() {
	    var selected = this.hot.getSelectedRange();
	    if (!selected) {
	      return false;
	    }
	    var hasComment = false;
	    var cell = selected.from;
	    if (this.hot.getCellMeta(cell.row, cell.col).comment) {
	      hasComment = true;
	    }
	    return hasComment;
	  },
	  onContextMenuAddComment: function() {
	    var $__6 = this;
	    var coords = this.hot.getSelectedRange();
	    this.contextMenuEvent = true;
	    this.setRange({from: coords.from});
	    this.show();
	    setTimeout((function() {
	      if ($__6.hot) {
	        $__6.hot.deselectCell();
	        $__6.editor.focus();
	      }
	    }), 10);
	  },
	  onContextMenuRemoveComment: function(key, selection) {
	    this.contextMenuEvent = true;
	    this.removeCommentAtCell(selection.start.row, selection.start.col);
	  },
	  addToContextMenu: function(defaultOptions) {
	    var $__6 = this;
	    defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR, {
	      key: 'commentsAddEdit',
	      name: (function() {
	        return $__6.checkSelectionCommentsConsistency() ? 'Edit Comment' : 'Add Comment';
	      }),
	      callback: (function() {
	        return $__6.onContextMenuAddComment();
	      }),
	      disabled: function() {
	        return this.getSelected() ? false : true;
	      }
	    }, {
	      key: 'commentsRemove',
	      name: function() {
	        return 'Delete Comment';
	      },
	      callback: (function(key, selection) {
	        return $__6.onContextMenuRemoveComment(key, selection);
	      }),
	      disabled: (function() {
	        return !$__6.checkSelectionCommentsConsistency();
	      })
	    });
	  },
	  destroy: function() {
	    if (this.editor) {
	      this.editor.destroy();
	    }
	    $traceurRuntime.superGet(this, $Comments.prototype, "destroy").call(this);
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('comments', Comments);

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"_base":56,"commentEditor":61,"eventManager":40,"helpers/dom/element":44,"plugins":55}],63:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  CommandExecutor: {get: function() {
	      return CommandExecutor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_array__;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var CommandExecutor = function CommandExecutor(hotInstance) {
	  this.hot = hotInstance;
	  this.commands = {};
	  this.commonCallback = null;
	};
	($traceurRuntime.createClass)(CommandExecutor, {
	  registerCommand: function(name, commandDescriptor) {
	    this.commands[name] = commandDescriptor;
	  },
	  setCommonCallback: function(callback) {
	    this.commonCallback = callback;
	  },
	  execute: function(commandName) {
	    for (var params = [],
	        $__3 = 1; $__3 < arguments.length; $__3++)
	      params[$__3 - 1] = arguments[$__3];
	    var $__1 = this;
	    var commandSplit = commandName.split(':');
	    commandName = commandSplit[0];
	    var subCommandName = commandSplit.length === 2 ? commandSplit[1] : null;
	    var command = this.commands[commandName];
	    if (!command) {
	      throw new Error(("Menu command '" + commandName + "' not exists."));
	    }
	    if (subCommandName && command.submenu) {
	      command = findSubCommand(subCommandName, command.submenu.items);
	    }
	    if (command.disabled === true) {
	      return;
	    }
	    if (typeof command.disabled == 'function' && command.disabled.call(this.hot) === true) {
	      return;
	    }
	    if (command.hasOwnProperty('submenu')) {
	      return;
	    }
	    var callbacks = [];
	    if (typeof command.callback === 'function') {
	      callbacks.push(command.callback);
	    }
	    if (typeof this.commonCallback === 'function') {
	      callbacks.push(this.commonCallback);
	    }
	    params.unshift(commandSplit.join(':'));
	    arrayEach(callbacks, (function(callback) {
	      return callback.apply($__1.hot, params);
	    }));
	  }
	}, {});
	function findSubCommand(subCommandName, subCommands) {
	  var command;
	  arrayEach(subCommands, (function(cmd) {
	    var cmds = cmd.key ? cmd.key.split(':') : null;
	    if (Array.isArray(cmds) && cmds[1] === subCommandName) {
	      command = cmd;
	      return false;
	    }
	  }));
	  return command;
	}
	;

	//# 
	},{"helpers/array":41}],64:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ContextMenu: {get: function() {
	      return ContextMenu;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $__commandExecutor__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $__itemsFactory__,
	    $__menu__,
	    $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $__predefinedItems__;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var CommandExecutor = ($__commandExecutor__ = require("commandExecutor"), $__commandExecutor__ && $__commandExecutor__.__esModule && $__commandExecutor__ || {default: $__commandExecutor__}).CommandExecutor;
	var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;
	var hasClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).hasClass;
	var ItemsFactory = ($__itemsFactory__ = require("itemsFactory"), $__itemsFactory__ && $__itemsFactory__.__esModule && $__itemsFactory__ || {default: $__itemsFactory__}).ItemsFactory;
	var Menu = ($__menu__ = require("menu"), $__menu__ && $__menu__.__esModule && $__menu__ || {default: $__menu__}).Menu;
	var $__7 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    objectEach = $__7.objectEach,
	    mixin = $__7.mixin;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var stopPropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopPropagation;
	var $__10 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),
	    ROW_ABOVE = $__10.ROW_ABOVE,
	    ROW_BELOW = $__10.ROW_BELOW,
	    COLUMN_LEFT = $__10.COLUMN_LEFT,
	    COLUMN_RIGHT = $__10.COLUMN_RIGHT,
	    REMOVE_ROW = $__10.REMOVE_ROW,
	    REMOVE_COLUMN = $__10.REMOVE_COLUMN,
	    UNDO = $__10.UNDO,
	    REDO = $__10.REDO,
	    READ_ONLY = $__10.READ_ONLY,
	    ALIGNMENT = $__10.ALIGNMENT,
	    SEPARATOR = $__10.SEPARATOR,
	    predefinedItems = $__10.predefinedItems;
	var ContextMenu = function ContextMenu(hotInstance) {
	  $traceurRuntime.superConstructor($ContextMenu).call(this, hotInstance);
	  this.eventManager = new EventManager(this);
	  this.commandExecutor = new CommandExecutor(this.hot);
	  this.itemsFactory = null;
	  this.menu = null;
	};
	var $ContextMenu = ContextMenu;
	($traceurRuntime.createClass)(ContextMenu, {
	  isEnabled: function() {
	    return this.hot.getSettings().contextMenu;
	  },
	  enablePlugin: function() {
	    var $__11 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.itemsFactory = new ItemsFactory(this.hot, $ContextMenu.DEFAULT_ITEMS);
	    var settings = this.hot.getSettings().contextMenu;
	    var predefinedItems = {items: this.itemsFactory.getVisibleItems(settings)};
	    this.registerEvents();
	    if (typeof settings.callback === 'function') {
	      this.commandExecutor.setCommonCallback(settings.callback);
	    }
	    $traceurRuntime.superGet(this, $ContextMenu.prototype, "enablePlugin").call(this);
	    this.callOnPluginsReady((function() {
	      $__11.hot.runHooks('afterContextMenuDefaultOptions', predefinedItems);
	      $__11.itemsFactory.setPredefinedItems(predefinedItems.items);
	      var menuItems = $__11.itemsFactory.getVisibleItems(settings);
	      $__11.menu = new Menu($__11.hot, {className: 'htContextMenu'});
	      $__11.menu.setMenuItems(menuItems);
	      $__11.menu.addLocalHook('afterOpen', (function() {
	        return $__11.hot.runHooks('afterContextMenuShow', $__11);
	      }));
	      $__11.menu.addLocalHook('afterClose', (function() {
	        return $__11.hot.runHooks('afterContextMenuHide', $__11);
	      }));
	      $__11.menu.addLocalHook('executeCommand', (function() {
	        for (var params = [],
	            $__13 = 0; $__13 < arguments.length; $__13++)
	          params[$__13] = arguments[$__13];
	        return $__11.executeCommand.apply($__11, params);
	      }));
	      arrayEach(menuItems, (function(command) {
	        return $__11.commandExecutor.registerCommand(command.key, command);
	      }));
	    }));
	  },
	  disablePlugin: function() {
	    this.close();
	    if (this.menu) {
	      this.menu.destroy();
	      this.menu = null;
	    }
	    $traceurRuntime.superGet(this, $ContextMenu.prototype, "disablePlugin").call(this);
	  },
	  registerEvents: function() {
	    var $__11 = this;
	    this.eventManager.addEventListener(this.hot.rootElement, 'contextmenu', (function(event) {
	      return $__11.onContextMenu(event);
	    }));
	  },
	  open: function(event) {
	    if (!this.menu) {
	      return;
	    }
	    this.menu.open();
	    this.menu.setPosition(event);
	    this.menu.hotMenu.isHotTableEnv = this.hot.isHotTableEnv;
	    Handsontable.eventManager.isHotTableEnv = this.hot.isHotTableEnv;
	  },
	  close: function() {
	    if (!this.menu) {
	      return;
	    }
	    this.menu.close();
	  },
	  executeCommand: function() {
	    for (var params = [],
	        $__13 = 0; $__13 < arguments.length; $__13++)
	      params[$__13] = arguments[$__13];
	    this.commandExecutor.execute.apply(this.commandExecutor, params);
	  },
	  destroy: function() {
	    this.close();
	    if (this.menu) {
	      this.menu.destroy();
	    }
	    $traceurRuntime.superGet(this, $ContextMenu.prototype, "destroy").call(this);
	  },
	  onContextMenu: function(event) {
	    var settings = this.hot.getSettings();
	    var showRowHeaders = settings.rowHeaders;
	    var showColHeaders = settings.colHeaders;
	    function isValidElement(element) {
	      return element.nodeName === 'TD' || element.parentNode.nodeName === 'TD';
	    }
	    var element = event.realTarget;
	    this.close();
	    event.preventDefault();
	    stopPropagation(event);
	    if (!(showRowHeaders || showColHeaders)) {
	      if (!isValidElement(element) && !(hasClass(element, 'current') && hasClass(element, 'wtBorder'))) {
	        return;
	      }
	    } else if (showRowHeaders && showColHeaders) {
	      var containsCornerHeader = element.parentNode.querySelectorAll('.cornerHeader').length > 0;
	      if (containsCornerHeader) {
	        return;
	      }
	    }
	    this.open(event);
	  }
	}, {get DEFAULT_ITEMS() {
	    return [ROW_ABOVE, ROW_BELOW, SEPARATOR, COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_ROW, REMOVE_COLUMN, SEPARATOR, UNDO, REDO, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];
	  }}, BasePlugin);
	ContextMenu.SEPARATOR = {name: SEPARATOR};
	Handsontable.hooks.register('afterContextMenuDefaultOptions');
	Handsontable.hooks.register('afterContextMenuShow');
	Handsontable.hooks.register('afterContextMenuHide');
	Handsontable.hooks.register('afterContextMenuExecute');
	;
	registerPlugin('contextMenu', ContextMenu);

	//# 
	},{"_base":56,"commandExecutor":63,"eventManager":40,"helpers/array":41,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"itemsFactory":66,"menu":67,"plugins":55,"predefinedItems":68}],65:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Cursor: {get: function() {
	      return Cursor;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getWindowScrollLeft = $__0.getWindowScrollLeft,
	    getWindowScrollTop = $__0.getWindowScrollTop;
	var $__1 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    pageX = $__1.pageX,
	    pageY = $__1.pageY;
	var Cursor = function Cursor(object) {
	  var windowScrollTop = getWindowScrollTop();
	  var windowScrollLeft = getWindowScrollLeft();
	  var top,
	      topRelative;
	  var left,
	      leftRelative;
	  var scrollTop,
	      scrollLeft;
	  var cellHeight,
	      cellWidth;
	  this.type = this.getSourceType(object);
	  if (this.type === 'literal') {
	    top = parseInt(object.top, 10);
	    left = parseInt(object.left, 10);
	    cellHeight = object.height;
	    cellWidth = object.width;
	  } else if (this.type === 'event') {
	    top = parseInt(pageY(object), 10);
	    left = parseInt(pageX(object), 10);
	    cellHeight = object.target.clientHeight;
	    cellWidth = object.target.clientWidth;
	  }
	  topRelative = top - windowScrollTop;
	  leftRelative = left - windowScrollLeft;
	  scrollTop = windowScrollTop;
	  scrollLeft = windowScrollLeft;
	  this.top = top;
	  this.topRelative = topRelative;
	  this.left = left;
	  this.leftRelative = leftRelative;
	  this.scrollTop = scrollTop;
	  this.scrollLeft = scrollLeft;
	  this.cellHeight = cellHeight;
	  this.cellWidth = cellWidth;
	};
	($traceurRuntime.createClass)(Cursor, {
	  getSourceType: function(object) {
	    var type = 'literal';
	    if (object instanceof Event) {
	      type = 'event';
	    }
	    return type;
	  },
	  fitsAbove: function(element) {
	    return this.topRelative >= element.offsetHeight;
	  },
	  fitsBelow: function(element) {
	    var viewportHeight = arguments[1] !== (void 0) ? arguments[1] : window.innerHeight;
	    return this.topRelative + element.offsetHeight <= viewportHeight;
	  },
	  fitsOnRight: function(element) {
	    var viewportWidth = arguments[1] !== (void 0) ? arguments[1] : window.innerWidth;
	    return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;
	  },
	  fitsOnLeft: function(element) {
	    return this.leftRelative >= element.offsetWidth;
	  }
	}, {});
	;
	Handsontable.plugins.utils = Handsontable.plugins.utils || {};
	Handsontable.plugins.utils.Cursor = Cursor;

	//# 
	},{"helpers/dom/element":44,"helpers/dom/event":45}],66:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ItemsFactory: {get: function() {
	      return ItemsFactory;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $__predefinedItems__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    objectEach = $__0.objectEach,
	    isObject = $__0.isObject,
	    extend = $__0.extend;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var $__2 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),
	    SEPARATOR = $__2.SEPARATOR,
	    ITEMS = $__2.ITEMS,
	    predefinedItems = $__2.predefinedItems;
	var ItemsFactory = function ItemsFactory(hotInstance) {
	  var orderPattern = arguments[1] !== (void 0) ? arguments[1] : null;
	  this.hot = hotInstance;
	  this.predefinedItems = predefinedItems();
	  this.defaultOrderPattern = orderPattern;
	};
	($traceurRuntime.createClass)(ItemsFactory, {
	  setPredefinedItems: function(predefinedItems) {
	    var $__3 = this;
	    var items = {};
	    this.defaultOrderPattern.length = 0;
	    objectEach(predefinedItems, (function(value, key) {
	      var menuItemKey = '';
	      if (value.name === SEPARATOR) {
	        items[SEPARATOR] = value;
	        menuItemKey = SEPARATOR;
	      } else if (isNaN(parseInt(key, 10))) {
	        value.key = value.key === void 0 ? key : value.key;
	        items[key] = value;
	        menuItemKey = value.key;
	      } else {
	        items[value.key] = value;
	        menuItemKey = value.key;
	      }
	      $__3.defaultOrderPattern.push(menuItemKey);
	    }));
	    this.predefinedItems = items;
	  },
	  getVisibleItems: function() {
	    var pattern = arguments[0] !== (void 0) ? arguments[0] : null;
	    var $__3 = this;
	    var visibleItems = {};
	    objectEach(this.predefinedItems, (function(value, key) {
	      if (!value.hidden || value.hidden && !value.hidden.apply($__3.hot)) {
	        visibleItems[key] = value;
	      }
	    }));
	    return getItems(pattern, this.defaultOrderPattern, visibleItems);
	  },
	  getItems: function() {
	    var pattern = arguments[0] !== (void 0) ? arguments[0] : null;
	    return getItems(pattern, this.defaultOrderPattern, this.predefinedItems);
	  }
	}, {});
	function getItems() {
	  var pattern = arguments[0] !== (void 0) ? arguments[0] : null;
	  var defaultPattern = arguments[1] !== (void 0) ? arguments[1] : [];
	  var items = arguments[2] !== (void 0) ? arguments[2] : {};
	  var result = [];
	  if (pattern && pattern.items) {
	    pattern = pattern.items;
	  } else if (!Array.isArray(pattern)) {
	    pattern = defaultPattern;
	  }
	  if (isObject(pattern)) {
	    objectEach(pattern, (function(value, key) {
	      var item = items[typeof value === 'string' ? value : key];
	      if (!item) {
	        item = value;
	      }
	      if (isObject(value)) {
	        extend(item, value);
	      } else if (typeof item === 'string') {
	        item = {name: item};
	      }
	      if (item.key === void 0) {
	        item.key = key;
	      }
	      result.push(item);
	    }));
	  } else {
	    arrayEach(pattern, (function(name, key) {
	      var item = items[name];
	      if (!item && ITEMS.indexOf(name) >= 0) {
	        return;
	      }
	      if (!item) {
	        item = {
	          name: name,
	          key: key + ''
	        };
	      }
	      if (isObject(name)) {
	        extend(item, name);
	      }
	      if (item.key === void 0) {
	        item.key = key;
	      }
	      result.push(item);
	    }));
	  }
	  if (result[0].name === SEPARATOR) {
	    result.shift();
	  }
	  return result;
	}
	;

	//# 
	},{"helpers/array":41,"helpers/object":49,"predefinedItems":68}],67:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  Menu: {get: function() {
	      return Menu;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $__cursor__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_object__,
	    $__utils__,
	    $___46__46__47__46__46__47_helpers_47_unicode__,
	    $___46__46__47__46__46__47_pluginHooks__,
	    $__predefinedItems__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    empty = $__0.empty,
	    fastInnerHTML = $__0.fastInnerHTML,
	    getComputedStyle = $__0.getComputedStyle,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    getWindowScrollLeft = $__0.getWindowScrollLeft,
	    getWindowScrollTop = $__0.getWindowScrollTop,
	    hasClass = $__0.hasClass,
	    isChildOf = $__0.isChildOf,
	    removeClass = $__0.removeClass;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var Cursor = ($__cursor__ = require("cursor"), $__cursor__ && $__cursor__.__esModule && $__cursor__ || {default: $__cursor__}).Cursor;
	var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;
	var $__4 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    extend = $__4.extend,
	    isObject = $__4.isObject,
	    objectEach = $__4.objectEach,
	    mixin = $__4.mixin;
	var $__5 = ($__utils__ = require("utils"), $__utils__ && $__utils__.__esModule && $__utils__ || {default: $__utils__}),
	    isSeparator = $__5.isSeparator,
	    isDisabled = $__5.isDisabled,
	    isSelectionDisabled = $__5.isSelectionDisabled,
	    hasSubMenu = $__5.hasSubMenu,
	    normalizeSelection = $__5.normalizeSelection;
	var KEY_CODES = ($___46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47_helpers_47_unicode__}).KEY_CODES;
	var localHooks = ($___46__46__47__46__46__47_pluginHooks__ = require("pluginHooks"), $___46__46__47__46__46__47_pluginHooks__ && $___46__46__47__46__46__47_pluginHooks__.__esModule && $___46__46__47__46__46__47_pluginHooks__ || {default: $___46__46__47__46__46__47_pluginHooks__}).localHooks;
	var $__8 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),
	    SEPARATOR = $__8.SEPARATOR,
	    predefinedItems = $__8.predefinedItems;
	var $__9 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    stopPropagation = $__9.stopPropagation,
	    stopImmediatePropagation = $__9.stopImmediatePropagation,
	    pageX = $__9.pageX,
	    pageY = $__9.pageY;
	var Menu = function Menu(hotInstance) {
	  var options = arguments[1] !== (void 0) ? arguments[1] : {
	    parent: null,
	    name: null,
	    className: '',
	    keepInViewport: true
	  };
	  this.hot = hotInstance;
	  this.options = options;
	  this.eventManager = new EventManager(this);
	  this.container = this.createContainer(this.options.name);
	  this.hotMenu = null;
	  this.hotSubMenus = {};
	  this.parentMenu = this.options.parent || null;
	  this.menuItems = null;
	  this.origOutsideClickDeselects = null;
	  this._afterScrollCallback = null;
	  this.registerEvents();
	};
	var $Menu = Menu;
	($traceurRuntime.createClass)(Menu, {
	  registerEvents: function() {
	    var $__10 = this;
	    this.eventManager.addEventListener(document.documentElement, 'mousedown', (function(event) {
	      return $__10.onDocumentMouseDown(event);
	    }));
	  },
	  setMenuItems: function(menuItems) {
	    this.menuItems = menuItems;
	  },
	  isSubMenu: function() {
	    return this.parentMenu !== null;
	  },
	  open: function() {
	    var $__10 = this;
	    this.container.removeAttribute('style');
	    this.container.style.display = 'block';
	    var settings = {
	      data: this.menuItems,
	      colHeaders: false,
	      colWidths: [200],
	      autoRowSize: false,
	      readOnly: true,
	      copyPaste: false,
	      columns: [{
	        data: 'name',
	        renderer: (function(hot, TD, row, col, prop, value) {
	          return $__10.menuItemRenderer(hot, TD, row, col, prop, value);
	        })
	      }],
	      renderAllRows: true,
	      beforeKeyDown: (function(event) {
	        return $__10.onBeforeKeyDown(event);
	      }),
	      afterOnCellMouseOver: (function(event, coords, TD) {
	        return $__10.openSubMenu(coords.row);
	      })
	    };
	    this.origOutsideClickDeselects = this.hot.getSettings().outsideClickDeselects;
	    this.hot.getSettings().outsideClickDeselects = false;
	    this.hotMenu = new Handsontable.Core(this.container, settings);
	    this.hotMenu.addHook('afterInit', (function() {
	      return $__10.onAfterInit();
	    }));
	    this.hotMenu.init();
	    this.hotMenu.listen();
	    this.blockMainTableCallbacks();
	    this.runLocalHooks('afterOpen');
	  },
	  close: function() {
	    var closeParent = arguments[0] !== (void 0) ? arguments[0] : false;
	    if (!this.isOpened()) {
	      return;
	    }
	    if (closeParent && this.parentMenu) {
	      this.parentMenu.close();
	    } else {
	      this.closeAllSubMenus();
	      this.container.style.display = 'none';
	      this.releaseMainTableCallbacks();
	      this.hotMenu.destroy();
	      this.hotMenu = null;
	      this.hot.getSettings().outsideClickDeselects = this.origOutsideClickDeselects;
	      this.hot.listen();
	      this.runLocalHooks('afterClose');
	    }
	  },
	  openSubMenu: function(row) {
	    var cell = this.hotMenu.getCell(row, 0);
	    this.closeAllSubMenus();
	    if (!cell || !hasSubMenu(cell)) {
	      return false;
	    }
	    var dataItem = this.hotMenu.getData()[row];
	    var subMenu = new $Menu(this.hot, {
	      parent: this,
	      name: dataItem.name,
	      className: this.options.className
	    });
	    subMenu.setMenuItems(dataItem.submenu.items);
	    subMenu.open();
	    subMenu.setPosition(cell.getBoundingClientRect());
	    this.hotSubMenus[dataItem.key] = subMenu;
	    return subMenu;
	  },
	  closeSubMenu: function(row) {
	    var dataItem = this.hotMenu.getData()[row];
	    var menus = this.hotSubMenus[dataItem.key];
	    if (menus) {
	      menus.destroy();
	      delete this.hotSubMenus[dataItem.key];
	    }
	  },
	  closeAllSubMenus: function() {
	    var $__10 = this;
	    arrayEach(this.hotMenu.getData(), (function(value, row) {
	      return $__10.closeSubMenu(row);
	    }));
	  },
	  isAllSubMenusClosed: function() {
	    return Object.keys(this.hotSubMenus).length === 0;
	  },
	  destroy: function() {
	    this.clearLocalHooks();
	    this.close();
	    this.parentMenu = null;
	    this.eventManager.destroy();
	  },
	  isOpened: function() {
	    return this.hotMenu !== null;
	  },
	  executeCommand: function() {
	    var event = arguments[0];
	    if (!this.isOpened() || !this.hotMenu.getSelected()) {
	      return;
	    }
	    var selectedItem = this.hotMenu.getData()[this.hotMenu.getSelected()[0]];
	    this.runLocalHooks('select', selectedItem, event);
	    if (selectedItem.isCommand === false) {
	      return;
	    }
	    var selRange = this.hot.getSelectedRange();
	    var normalizedSelection = selRange ? normalizeSelection(selRange) : {};
	    this.runLocalHooks('executeCommand', selectedItem.key, normalizedSelection, event);
	    if (this.isSubMenu()) {
	      this.parentMenu.runLocalHooks('executeCommand', selectedItem.key, normalizedSelection, event);
	    }
	    this.close(true);
	  },
	  setPosition: function(coords) {
	    var cursor = new Cursor(coords);
	    if (this.options.keepInViewport) {
	      if (cursor.fitsBelow(this.container)) {
	        this.setPositionBelowCursor(cursor);
	      } else if (cursor.fitsAbove(this.container)) {
	        this.setPositionAboveCursor(cursor);
	      } else {
	        this.setPositionBelowCursor(cursor);
	      }
	      if (cursor.fitsOnRight(this.container)) {
	        this.setPositionOnRightOfCursor(cursor);
	      } else {
	        this.setPositionOnLeftOfCursor(cursor);
	      }
	    } else {
	      this.setPositionBelowCursor(cursor);
	      this.setPositionOnRightOfCursor(cursor);
	    }
	  },
	  setPositionAboveCursor: function(cursor) {
	    var top = cursor.top - this.container.offsetHeight;
	    if (this.isSubMenu()) {
	      top = window.scrollY + cursor.top + cursor.cellHeight - this.container.offsetHeight + 3;
	    }
	    this.container.style.top = top + 'px';
	  },
	  setPositionBelowCursor: function(cursor) {
	    var top = cursor.top - 1;
	    if (this.isSubMenu()) {
	      top = cursor.top + window.scrollY - 1;
	    }
	    this.container.style.top = top + 'px';
	  },
	  setPositionOnRightOfCursor: function(cursor) {
	    var left;
	    if (this.isSubMenu()) {
	      left = window.scrollX + 1 + cursor.left + cursor.cellWidth;
	    } else {
	      left = 1 + cursor.left;
	    }
	    this.container.style.left = left + 'px';
	  },
	  setPositionOnLeftOfCursor: function(cursor) {
	    this.container.style.left = (cursor.left - this.container.offsetWidth + getScrollbarWidth() + 4) + 'px';
	  },
	  selectFirstCell: function() {
	    var cell = this.hotMenu.getCell(0, 0);
	    if (isSeparator(cell) || isDisabled(cell) || isSelectionDisabled(cell)) {
	      this.selectNextCell(0, 0);
	    } else {
	      this.hotMenu.selectCell(0, 0);
	    }
	  },
	  selectLastCell: function() {
	    var lastRow = this.hotMenu.countRows() - 1;
	    var cell = this.hotMenu.getCell(lastRow, 0);
	    if (isSeparator(cell) || isDisabled(cell) || isSelectionDisabled(cell)) {
	      this.selectPrevCell(lastRow, 0);
	    } else {
	      this.hotMenu.selectCell(lastRow, 0);
	    }
	  },
	  selectNextCell: function(row, col) {
	    var nextRow = row + 1;
	    var cell = nextRow < this.hotMenu.countRows() ? this.hotMenu.getCell(nextRow, col) : null;
	    if (!cell) {
	      return;
	    }
	    if (isSeparator(cell) || isDisabled(cell) || isSelectionDisabled(cell)) {
	      this.selectNextCell(nextRow, col);
	    } else {
	      this.hotMenu.selectCell(nextRow, col);
	    }
	  },
	  selectPrevCell: function(row, col) {
	    var prevRow = row - 1;
	    var cell = prevRow >= 0 ? this.hotMenu.getCell(prevRow, col) : null;
	    if (!cell) {
	      return;
	    }
	    if (isSeparator(cell) || isDisabled(cell) || isSelectionDisabled(cell)) {
	      this.selectPrevCell(prevRow, col);
	    } else {
	      this.hotMenu.selectCell(prevRow, col);
	    }
	  },
	  menuItemRenderer: function(hot, TD, row, col, prop, value) {
	    var $__10 = this;
	    var item = hot.getData()[row];
	    var wrapper = document.createElement('div');
	    var isSubMenu = (function(item) {
	      return item.hasOwnProperty('submenu');
	    });
	    var itemIsSeparator = (function(item) {
	      return new RegExp(SEPARATOR, 'i').test(item.name);
	    });
	    var itemIsDisabled = (function(item) {
	      return item.disabled === true || (typeof item.disabled == 'function' && item.disabled.call($__10.hot) === true);
	    });
	    var itemIsSelectionDisabled = (function(item) {
	      return item.disableSelection;
	    });
	    if (typeof value === 'function') {
	      value = value.call(this.hot);
	    }
	    empty(TD);
	    addClass(wrapper, 'htItemWrapper');
	    TD.appendChild(wrapper);
	    if (itemIsSeparator(item)) {
	      addClass(TD, 'htSeparator');
	    } else if (typeof item.renderer === 'function') {
	      addClass(TD, 'htCustomMenuRenderer');
	      TD.appendChild(item.renderer(hot, wrapper, row, col, prop, value));
	    } else {
	      fastInnerHTML(wrapper, value);
	    }
	    if (itemIsDisabled(item)) {
	      addClass(TD, 'htDisabled');
	      this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	        return hot.deselectCell();
	      }));
	    } else if (itemIsSelectionDisabled(item)) {
	      addClass(TD, 'htSelectionDisabled');
	      this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	        return hot.deselectCell();
	      }));
	    } else if (isSubMenu(item)) {
	      addClass(TD, 'htSubmenu');
	      if (itemIsSelectionDisabled(item)) {
	        this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	          return hot.deselectCell();
	        }));
	      } else {
	        this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	          return hot.selectCell(row, col);
	        }));
	      }
	    } else {
	      removeClass(TD, 'htSubmenu');
	      removeClass(TD, 'htDisabled');
	      if (itemIsSelectionDisabled(item)) {
	        this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	          return hot.deselectCell();
	        }));
	      } else {
	        this.eventManager.addEventListener(wrapper, 'mouseenter', (function() {
	          return hot.selectCell(row, col);
	        }));
	      }
	    }
	  },
	  createContainer: function() {
	    var name = arguments[0] !== (void 0) ? arguments[0] : null;
	    if (name) {
	      name = name.replace(/ /g, '_');
	      name = this.options.className + 'Sub_' + name;
	    }
	    var container;
	    if (name) {
	      container = document.querySelector('.' + this.options.className + '.' + name);
	    } else {
	      container = document.querySelector('.' + this.options.className);
	    }
	    if (!container) {
	      container = document.createElement('div');
	      addClass(container, 'htMenu ' + this.options.className);
	      if (name) {
	        addClass(container, name);
	      }
	      document.getElementsByTagName('body')[0].appendChild(container);
	    }
	    return container;
	  },
	  blockMainTableCallbacks: function() {
	    this._afterScrollCallback = function() {};
	    this.hot.addHook('afterScrollVertically', this._afterScrollCallback);
	    this.hot.addHook('afterScrollHorizontally', this._afterScrollCallback);
	  },
	  releaseMainTableCallbacks: function() {
	    if (this._afterScrollCallback) {
	      this.hot.removeHook('afterScrollVertically', this._afterScrollCallback);
	      this.hot.removeHook('afterScrollHorizontally', this._afterScrollCallback);
	      this._afterScrollCallback = null;
	    }
	  },
	  onBeforeKeyDown: function(event) {
	    var selection = this.hotMenu.getSelected();
	    var stopEvent = false;
	    switch (event.keyCode) {
	      case KEY_CODES.ESCAPE:
	        this.close();
	        stopEvent = true;
	        break;
	      case KEY_CODES.ENTER:
	        if (selection) {
	          if (this.hotMenu.getData()[selection[0]].submenu) {
	            stopEvent = true;
	          } else {
	            this.executeCommand(event);
	            this.close(true);
	          }
	        }
	        break;
	      case KEY_CODES.ARROW_DOWN:
	        if (selection) {
	          this.selectNextCell(selection[0], selection[1]);
	        } else {
	          this.selectFirstCell();
	        }
	        stopEvent = true;
	        break;
	      case KEY_CODES.ARROW_UP:
	        if (selection) {
	          this.selectPrevCell(selection[0], selection[1]);
	        } else {
	          this.selectLastCell();
	        }
	        stopEvent = true;
	        break;
	      case KEY_CODES.ARROW_RIGHT:
	        if (selection) {
	          var menu = this.openSubMenu(selection[0]);
	          if (menu) {
	            menu.selectFirstCell();
	          }
	        }
	        stopEvent = true;
	        break;
	      case KEY_CODES.ARROW_LEFT:
	        if (selection && this.isSubMenu()) {
	          this.close();
	          if (this.parentMenu) {
	            this.parentMenu.hotMenu.listen();
	          }
	          stopEvent = true;
	        }
	        break;
	    }
	    if (stopEvent) {
	      event.preventDefault();
	      stopImmediatePropagation(event);
	    }
	  },
	  onAfterInit: function() {
	    var data = this.hotMenu.getSettings().data;
	    var hiderStyle = this.hotMenu.view.wt.wtTable.hider.style;
	    var holderStyle = this.hotMenu.view.wt.wtTable.holder.style;
	    var currentHiderWidth = parseInt(hiderStyle.width, 10);
	    var realHeight = 0;
	    arrayEach(data, (function(value) {
	      return realHeight += value.name === SEPARATOR ? 1 : 26;
	    }));
	    holderStyle.width = currentHiderWidth + 22 + 'px';
	    holderStyle.height = realHeight + 4 + 'px';
	  },
	  onDocumentMouseDown: function(event) {
	    if (!this.isOpened()) {
	      return;
	    }
	    if (this.container && isChildOf(event.target, this.container)) {
	      this.executeCommand(event);
	    }
	    if ((this.isAllSubMenusClosed() || this.isSubMenu()) && (!isChildOf(event.target, '.htMenu') && isChildOf(event.target, document))) {
	      this.close(true);
	    }
	  }
	}, {});
	mixin(Menu, localHooks);
	;

	//# 
	},{"cursor":65,"eventManager":40,"helpers/array":41,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"pluginHooks":54,"predefinedItems":68,"utils":69}],68:[function(require,module,exports){
	"use strict";
	var $__4;
	Object.defineProperties(exports, {
	  ROW_ABOVE: {get: function() {
	      return ROW_ABOVE;
	    }},
	  ROW_BELOW: {get: function() {
	      return ROW_BELOW;
	    }},
	  COLUMN_LEFT: {get: function() {
	      return COLUMN_LEFT;
	    }},
	  COLUMN_RIGHT: {get: function() {
	      return COLUMN_RIGHT;
	    }},
	  CLEAR_COLUMN: {get: function() {
	      return CLEAR_COLUMN;
	    }},
	  REMOVE_ROW: {get: function() {
	      return REMOVE_ROW;
	    }},
	  REMOVE_COLUMN: {get: function() {
	      return REMOVE_COLUMN;
	    }},
	  UNDO: {get: function() {
	      return UNDO;
	    }},
	  REDO: {get: function() {
	      return REDO;
	    }},
	  READ_ONLY: {get: function() {
	      return READ_ONLY;
	    }},
	  ALIGNMENT: {get: function() {
	      return ALIGNMENT;
	    }},
	  SEPARATOR: {get: function() {
	      return SEPARATOR;
	    }},
	  ITEMS: {get: function() {
	      return ITEMS;
	    }},
	  predefinedItems: {get: function() {
	      return predefinedItems;
	    }},
	  addItem: {get: function() {
	      return addItem;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_helpers_47_number__,
	    $__utils__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    objectEach = $__0.objectEach,
	    clone = $__0.clone;
	var rangeEach = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}).rangeEach;
	var $__2 = ($__utils__ = require("utils"), $__utils__ && $__utils__.__esModule && $__utils__ || {default: $__utils__}),
	    align = $__2.align,
	    getAlignmentClasses = $__2.getAlignmentClasses,
	    getValidSelection = $__2.getValidSelection,
	    checkSelectionConsistency = $__2.checkSelectionConsistency,
	    markLabelAsSelected = $__2.markLabelAsSelected;
	var ROW_ABOVE = 'row_above';
	var ROW_BELOW = 'row_below';
	var COLUMN_LEFT = 'col_left';
	var COLUMN_RIGHT = 'col_right';
	var CLEAR_COLUMN = 'clear_column';
	var REMOVE_ROW = 'remove_row';
	var REMOVE_COLUMN = 'remove_col';
	var UNDO = 'undo';
	var REDO = 'redo';
	var READ_ONLY = 'make_read_only';
	var ALIGNMENT = 'alignment';
	var SEPARATOR = '---------';
	var ITEMS = [ROW_ABOVE, ROW_BELOW, COLUMN_LEFT, COLUMN_RIGHT, CLEAR_COLUMN, REMOVE_ROW, REMOVE_COLUMN, UNDO, REDO, READ_ONLY, ALIGNMENT, SEPARATOR];
	function predefinedItems() {
	  var items = {};
	  objectEach(_predefinedItems, (function(value, key) {
	    return items[key] = clone(value);
	  }));
	  return items;
	}
	function addItem(key, item) {
	  if (ITEMS.indexOf(key) === -1) {
	    _predefinedItems[key] = item;
	  }
	}
	var _predefinedItems = ($__4 = {}, Object.defineProperty($__4, SEPARATOR, {
	  value: {name: SEPARATOR},
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, ROW_ABOVE, {
	  value: {
	    key: ROW_ABOVE,
	    name: 'Insert row above',
	    callback: function(key, selection) {
	      this.alter('insert_row', selection.start.row);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      var rowCount = this.countRows();
	      var entireColumnSelection = [0, selected[1], rowCount - 1, selected[1]];
	      return (entireColumnSelection.join(',') === selected.join(',')) && rowCount > 1;
	    },
	    hidden: function() {
	      return !this.getSettings().allowInsertRow;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, ROW_BELOW, {
	  value: {
	    key: ROW_BELOW,
	    name: 'Insert row below',
	    callback: function(key, selection) {
	      this.alter('insert_row', selection.end.row + 1);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      var rowCount = this.countRows();
	      var entireColumnSelection = [0, selected[1], rowCount - 1, selected[1]];
	      return (entireColumnSelection.join(',') === selected.join(',')) && rowCount > 1;
	    },
	    hidden: function() {
	      return !this.getSettings().allowInsertRow;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, COLUMN_LEFT, {
	  value: {
	    key: COLUMN_LEFT,
	    name: 'Insert column on the left',
	    callback: function(key, selection) {
	      this.alter('insert_col', selection.start.col);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      if (!this.isColumnModificationAllowed()) {
	        return true;
	      }
	      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];
	      var rowSelected = entireRowSelection.join(',') == selected.join(',');
	      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;
	    },
	    hidden: function() {
	      return !this.getSettings().allowInsertColumn;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, COLUMN_RIGHT, {
	  value: {
	    key: COLUMN_RIGHT,
	    name: 'Insert column on the right',
	    callback: function(key, selection) {
	      this.alter('insert_col', selection.end.col + 1);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      if (!this.isColumnModificationAllowed()) {
	        return true;
	      }
	      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];
	      var rowSelected = entireRowSelection.join(',') == selected.join(',');
	      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;
	    },
	    hidden: function() {
	      return !this.getSettings().allowInsertColumn;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, CLEAR_COLUMN, {
	  value: {
	    key: CLEAR_COLUMN,
	    name: 'Clear column',
	    callback: function(key, selection) {
	      var column = selection.start.col;
	      this.populateFromArray(0, column, [[null]], Math.max(selection.start.row, selection.end.row), column);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];
	      var rowSelected = entireRowSelection.join(',') == selected.join(',');
	      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, REMOVE_ROW, {
	  value: {
	    key: REMOVE_ROW,
	    name: 'Remove row',
	    callback: function(key, selection) {
	      var amount = selection.end.row - selection.start.row + 1;
	      this.alter('remove_row', selection.start.row, amount);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      var entireColumnSelection = [0, selected[1], this.countRows() - 1, selected[1]];
	      return entireColumnSelection.join(',') === selected.join(',');
	    },
	    hidden: function() {
	      return !this.getSettings().allowRemoveRow;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, REMOVE_COLUMN, {
	  value: {
	    key: REMOVE_COLUMN,
	    name: 'Remove column',
	    callback: function(key, selection) {
	      var amount = selection.end.col - selection.start.col + 1;
	      this.alter('remove_col', selection.start.col, amount);
	    },
	    disabled: function() {
	      var selected = getValidSelection(this);
	      if (!selected) {
	        return true;
	      }
	      if (!this.isColumnModificationAllowed()) {
	        return true;
	      }
	      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];
	      var rowSelected = entireRowSelection.join(',') == selected.join(',');
	      return (selected[1] < 0 || rowSelected);
	    },
	    hidden: function() {
	      return !this.getSettings().allowRemoveColumn;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, UNDO, {
	  value: {
	    key: UNDO,
	    name: 'Undo',
	    callback: function() {
	      this.undo();
	    },
	    disabled: function() {
	      return this.undoRedo && !this.undoRedo.isUndoAvailable();
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, REDO, {
	  value: {
	    key: REDO,
	    name: 'Redo',
	    callback: function() {
	      this.redo();
	    },
	    disabled: function() {
	      return this.undoRedo && !this.undoRedo.isRedoAvailable();
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, READ_ONLY, {
	  value: {
	    key: READ_ONLY,
	    name: function() {
	      var $__3 = this;
	      var label = 'Read only';
	      var atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	        return $__3.getCellMeta(row, col).readOnly;
	      }));
	      if (atLeastOneReadOnly) {
	        label = markLabelAsSelected(label);
	      }
	      return label;
	    },
	    callback: function() {
	      var $__3 = this;
	      var range = this.getSelectedRange();
	      var atLeastOneReadOnly = checkSelectionConsistency(range, (function(row, col) {
	        return $__3.getCellMeta(row, col).readOnly;
	      }));
	      range.forAll((function(row, col) {
	        $__3.getCellMeta(row, col).readOnly = atLeastOneReadOnly ? false : true;
	      }));
	      this.render();
	    },
	    disabled: function() {
	      return this.getSelectedRange() ? false : true;
	    }
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__4, ALIGNMENT, {
	  value: {
	    key: ALIGNMENT,
	    name: 'Alignment',
	    disabled: function() {
	      return this.getSelectedRange() ? false : true;
	    },
	    submenu: {items: [{
	        key: (ALIGNMENT + ":left"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Left';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htLeft') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'horizontal';
	          var alignment = 'htLeft';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {
	        key: (ALIGNMENT + ":center"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Center';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htCenter') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'horizontal';
	          var alignment = 'htCenter';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {
	        key: (ALIGNMENT + ":right"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Right';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htRight') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'horizontal';
	          var alignment = 'htRight';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {
	        key: (ALIGNMENT + ":justify"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Justify';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htJustify') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'horizontal';
	          var alignment = 'htJustify';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {name: SEPARATOR}, {
	        key: (ALIGNMENT + ":top"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Top';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htTop') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'vertical';
	          var alignment = 'htTop';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {
	        key: (ALIGNMENT + ":middle"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Middle';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htMiddle') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'vertical';
	          var alignment = 'htMiddle';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }, {
	        key: (ALIGNMENT + ":bottom"),
	        name: function() {
	          var $__3 = this;
	          var label = 'Bottom';
	          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {
	            var className = $__3.getCellMeta(row, col).className;
	            if (className && className.indexOf('htBottom') !== -1) {
	              return true;
	            }
	          }));
	          if (hasClass) {
	            label = markLabelAsSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var $__3 = this;
	          var range = this.getSelectedRange();
	          var stateBefore = getAlignmentClasses(range, (function(row, col) {
	            return $__3.getCellMeta(row, col).className;
	          }));
	          var type = 'vertical';
	          var alignment = 'htBottom';
	          this.runHooks('beforeCellAlignment', stateBefore, range, type, alignment);
	          align(range, type, alignment, (function(row, col) {
	            return $__3.getCellMeta(row, col);
	          }));
	          this.render();
	        },
	        disabled: false
	      }]}
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), $__4);

	//# 
	},{"helpers/number":48,"helpers/object":49,"utils":69}],69:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  normalizeSelection: {get: function() {
	      return normalizeSelection;
	    }},
	  isSeparator: {get: function() {
	      return isSeparator;
	    }},
	  hasSubMenu: {get: function() {
	      return hasSubMenu;
	    }},
	  isDisabled: {get: function() {
	      return isDisabled;
	    }},
	  isSelectionDisabled: {get: function() {
	      return isSelectionDisabled;
	    }},
	  getValidSelection: {get: function() {
	      return getValidSelection;
	    }},
	  prepareVerticalAlignClass: {get: function() {
	      return prepareVerticalAlignClass;
	    }},
	  prepareHorizontalAlignClass: {get: function() {
	      return prepareHorizontalAlignClass;
	    }},
	  getAlignmentClasses: {get: function() {
	      return getAlignmentClasses;
	    }},
	  align: {get: function() {
	      return align;
	    }},
	  checkSelectionConsistency: {get: function() {
	      return checkSelectionConsistency;
	    }},
	  markLabelAsSelected: {get: function() {
	      return markLabelAsSelected;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__;
	var hasClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).hasClass;
	function normalizeSelection(selRange) {
	  return {
	    start: selRange.getTopLeftCorner(),
	    end: selRange.getBottomRightCorner()
	  };
	}
	function isSeparator(cell) {
	  return hasClass(cell, 'htSeparator');
	}
	function hasSubMenu(cell) {
	  return hasClass(cell, 'htSubmenu');
	}
	function isDisabled(cell) {
	  return hasClass(cell, 'htDisabled');
	}
	function isSelectionDisabled(cell) {
	  return hasClass(cell, 'htSelectionDisabled');
	}
	function getValidSelection(hot) {
	  var selected = hot.getSelected();
	  if (!selected) {
	    return null;
	  }
	  if (selected[0] < 0) {
	    return null;
	  }
	  if (hot.countRows() >= hot.getSettings().maxRows) {
	    return null;
	  }
	  return selected;
	}
	function prepareVerticalAlignClass(className, alignment) {
	  if (className.indexOf(alignment) != -1) {
	    return className;
	  }
	  className = className.replace('htTop', '').replace('htMiddle', '').replace('htBottom', '').replace('  ', '');
	  className += ' ' + alignment;
	  return className;
	}
	function prepareHorizontalAlignClass(className, alignment) {
	  if (className.indexOf(alignment) != -1) {
	    return className;
	  }
	  className = className.replace('htLeft', '').replace('htCenter', '').replace('htRight', '').replace('htJustify', '').replace('  ', '');
	  className += ' ' + alignment;
	  return className;
	}
	function getAlignmentClasses(range, callback) {
	  var classes = {};
	  for (var row = range.from.row; row <= range.to.row; row++) {
	    for (var col = range.from.col; col <= range.to.col; col++) {
	      if (!classes[row]) {
	        classes[row] = [];
	      }
	      classes[row][col] = callback(row, col);
	    }
	  }
	  return classes;
	}
	function align(range, type, alignment, cellDescriptor) {
	  if (range.from.row == range.to.row && range.from.col == range.to.col) {
	    applyAlignClassName(range.from.row, range.from.col, type, alignment, cellDescriptor);
	  } else {
	    for (var row = range.from.row; row <= range.to.row; row++) {
	      for (var col = range.from.col; col <= range.to.col; col++) {
	        applyAlignClassName(row, col, type, alignment, cellDescriptor);
	      }
	    }
	  }
	}
	function applyAlignClassName(row, col, type, alignment, cellDescriptor) {
	  var cellMeta = cellDescriptor(row, col);
	  var className = alignment;
	  if (cellMeta.className) {
	    if (type === 'vertical') {
	      className = prepareVerticalAlignClass(cellMeta.className, alignment);
	    } else {
	      className = prepareHorizontalAlignClass(cellMeta.className, alignment);
	    }
	  }
	  cellMeta.className = className;
	}
	function checkSelectionConsistency(range, comparator) {
	  var result = false;
	  if (range) {
	    range.forAll(function(row, col) {
	      if (comparator(row, col)) {
	        result = true;
	        return false;
	      }
	    });
	  }
	  return result;
	}
	function markLabelAsSelected(label) {
	  return '<span class="selected">' + String.fromCharCode(10003) + '</span>' + label;
	}

	//# 
	},{"helpers/dom/element":44}],70:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ContextMenuCopyPaste: {get: function() {
	      return ContextMenuCopyPaste;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__95_base__,
	    $__zeroclipboard__;
	var removeClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).removeClass;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var ZeroClipboard = ($__zeroclipboard__ = require("zeroclipboard"), $__zeroclipboard__ && $__zeroclipboard__.__esModule && $__zeroclipboard__ || {default: $__zeroclipboard__}).default;
	var ContextMenuCopyPaste = function ContextMenuCopyPaste(hotInstance) {
	  $traceurRuntime.superConstructor($ContextMenuCopyPaste).call(this, hotInstance);
	  this.eventManager = new EventManager(this);
	  this.swfPath = null;
	  this.outsideClickDeselectsCache = null;
	};
	var $ContextMenuCopyPaste = ContextMenuCopyPaste;
	($traceurRuntime.createClass)(ContextMenuCopyPaste, {
	  isEnabled: function() {
	    return this.hot.getSettings().contextMenuCopyPaste;
	  },
	  enablePlugin: function() {
	    var $__6 = this;
	    if (this.enabled) {
	      return;
	    }
	    if (typeof this.hot.getSettings().contextMenuCopyPaste === 'object') {
	      this.swfPath = this.hot.getSettings().contextMenuCopyPaste.swfPath;
	    }
	    if (typeof ZeroClipboard === 'undefined') {
	      console.error('To be able to use the Copy/Paste feature from the context menu, you need to manually include ZeroClipboard.js file to your website.');
	    }
	    try {
	      new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
	    } catch (exception) {
	      if (typeof navigator.mimeTypes['application/x-shockwave-flash'] == 'undefined') {
	        console.error('To be able to use the Copy/Paste feature from the context menu, your browser needs to have Flash Plugin installed.');
	      }
	    }
	    if (this.swfPath) {
	      ZeroClipboard.config({swfPath: this.swfPath});
	    }
	    this.hot.addHook('afterContextMenuShow', (function() {
	      return $__6.onAfterContextMenuShow();
	    }));
	    this.hot.addHook('afterContextMenuDefaultOptions', (function(options) {
	      return $__6.onAfterContextMenuDefaultOptions(options);
	    }));
	    this.registerEvents();
	    $traceurRuntime.superGet(this, $ContextMenuCopyPaste.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $ContextMenuCopyPaste.prototype, "disablePlugin").call(this);
	  },
	  registerEvents: function() {
	    var $__6 = this;
	    this.eventManager.addEventListener(document, 'mouseenter', (function() {
	      return $__6.removeCurrentClass();
	    }));
	    this.eventManager.addEventListener(document, 'mouseleave', (function() {
	      return $__6.removeZeroClipboardClass();
	    }));
	  },
	  getCopyValue: function() {
	    this.hot.copyPaste.setCopyableText();
	    return this.hot.copyPaste.copyPasteInstance.elTextarea.value;
	  },
	  onAfterContextMenuDefaultOptions: function(defaultOptions) {
	    defaultOptions.items.unshift({
	      key: 'copy',
	      name: 'Copy'
	    }, {
	      key: 'paste',
	      name: 'Paste',
	      callback: function() {
	        this.copyPaste.triggerPaste();
	      }
	    }, Handsontable.plugins.ContextMenu.SEPARATOR);
	  },
	  onAfterContextMenuShow: function() {
	    var $__6 = this;
	    var contextMenu = this.hot.getPlugin('contextMenu');
	    var data = contextMenu.menu.hotMenu.getData();
	    arrayEach(data, (function(item, index) {
	      if (item.key === 'copy') {
	        var zeroClipboardInstance = new ZeroClipboard(contextMenu.menu.hotMenu.getCell(index, 0));
	        zeroClipboardInstance.off();
	        zeroClipboardInstance.on('copy', (function(event) {
	          var clipboard = event.clipboardData;
	          clipboard.setData('text/plain', $__6.getCopyValue());
	          $__6.hot.getSettings().outsideClickDeselects = $__6.outsideClickDeselectsCache;
	        }));
	        return false;
	      }
	    }));
	  },
	  removeCurrentClass: function() {
	    var contextMenu = this.hot.getPlugin('contextMenu');
	    if (contextMenu.menu.isOpened()) {
	      var element = contextMenu.menu.hotMenu.rootElement.querySelector('td.current');
	      if (element) {
	        removeClass(element, 'current');
	      }
	    }
	    this.outsideClickDeselectsCache = this.hot.getSettings().outsideClickDeselects;
	    this.hot.getSettings().outsideClickDeselects = false;
	  },
	  removeZeroClipboardClass: function() {
	    var contextMenu = this.hot.getPlugin('contextMenu');
	    if (contextMenu.menu.isOpened()) {
	      var element = contextMenu.menu.hotMenu.rootElement.querySelector('td.zeroclipboard-is-hover');
	      if (element) {
	        removeClass(element, 'zeroclipboard-is-hover');
	      }
	    }
	    this.hot.getSettings().outsideClickDeselects = this.outsideClickDeselectsCache;
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('contextMenuCopyPaste', ContextMenuCopyPaste);

	//# 
	},{"_base":56,"eventManager":40,"helpers/array":41,"helpers/dom/element":44,"plugins":55,"zeroclipboard":"zeroclipboard"}],71:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  CopyPastePlugin: {get: function() {
	      return CopyPastePlugin;
	    }},
	  __esModule: {value: true}
	});
	var $__copyPaste__,
	    $__SheetClip__,
	    $___46__46__47__46__46__47_helpers_47_unicode__,
	    $___46__46__47__46__46__47_helpers_47_array__,
	    $___46__46__47__46__46__47_helpers_47_number__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_helpers_47_function__,
	    $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__;
	var copyPaste = ($__copyPaste__ = require("copyPaste"), $__copyPaste__ && $__copyPaste__.__esModule && $__copyPaste__ || {default: $__copyPaste__}).default;
	var SheetClip = ($__SheetClip__ = require("SheetClip"), $__SheetClip__ && $__SheetClip__.__esModule && $__SheetClip__ || {default: $__SheetClip__}).default;
	var $__2 = ($___46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47_helpers_47_unicode__}),
	    KEY_CODES = $__2.KEY_CODES,
	    isCtrlKey = $__2.isCtrlKey;
	var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;
	var rangeEach = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}).rangeEach;
	var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;
	var proxy = ($___46__46__47__46__46__47_helpers_47_function__ = require("helpers/function"), $___46__46__47__46__46__47_helpers_47_function__ && $___46__46__47__46__46__47_helpers_47_function__.__esModule && $___46__46__47__46__46__47_helpers_47_function__ || {default: $___46__46__47__46__46__47_helpers_47_function__}).proxy;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;
	function CopyPastePlugin(instance) {
	  var _this = this;
	  this.copyPasteInstance = copyPaste();
	  this.copyPasteInstance.onCut(onCut);
	  this.copyPasteInstance.onPaste(onPaste);
	  this.onPaste = onPaste;
	  instance.addHook('beforeKeyDown', onBeforeKeyDown);
	  function onCut() {
	    if (!instance.isListening()) {
	      return;
	    }
	    instance.selection.empty();
	  }
	  function onPaste(str) {
	    var input,
	        inputArray,
	        selected,
	        coordsFrom,
	        coordsTo,
	        cellRange,
	        topLeftCorner,
	        bottomRightCorner,
	        areaStart,
	        areaEnd;
	    if (!instance.isListening() || !instance.selection.isSelected()) {
	      return;
	    }
	    input = str;
	    inputArray = SheetClip.parse(input);
	    selected = instance.getSelected();
	    coordsFrom = new WalkontableCellCoords(selected[0], selected[1]);
	    coordsTo = new WalkontableCellCoords(selected[2], selected[3]);
	    cellRange = new WalkontableCellRange(coordsFrom, coordsFrom, coordsTo);
	    topLeftCorner = cellRange.getTopLeftCorner();
	    bottomRightCorner = cellRange.getBottomRightCorner();
	    areaStart = topLeftCorner;
	    areaEnd = new WalkontableCellCoords(Math.max(bottomRightCorner.row, inputArray.length - 1 + topLeftCorner.row), Math.max(bottomRightCorner.col, inputArray[0].length - 1 + topLeftCorner.col));
	    var isSelRowAreaCoverInputValue = coordsTo.row - coordsFrom.row >= inputArray.length - 1;
	    var isSelColAreaCoverInputValue = coordsTo.col - coordsFrom.col >= inputArray[0].length - 1;
	    instance.addHookOnce('afterChange', (function(changes, source) {
	      var changesLength = changes ? changes.length : 0;
	      if (changesLength) {
	        var offset = {
	          row: 0,
	          col: 0
	        };
	        var highestColumnIndex = -1;
	        arrayEach(changes, (function(change, index) {
	          var nextChange = changesLength > index + 1 ? changes[index + 1] : null;
	          if (nextChange) {
	            if (!isSelRowAreaCoverInputValue) {
	              offset.row = offset.row + Math.max(nextChange[0] - change[0] - 1, 0);
	            }
	            if (!isSelColAreaCoverInputValue && change[1] > highestColumnIndex) {
	              highestColumnIndex = change[1];
	              offset.col = offset.col + Math.max(nextChange[1] - change[1] - 1, 0);
	            }
	          }
	        }));
	        instance.selectCell(areaStart.row, areaStart.col, areaEnd.row + offset.row, areaEnd.col + offset.col);
	      }
	    }));
	    instance.populateFromArray(areaStart.row, areaStart.col, inputArray, areaEnd.row, areaEnd.col, 'paste', instance.getSettings().pasteMode);
	  }
	  function onBeforeKeyDown(event) {
	    if (!instance.getSelected()) {
	      return;
	    }
	    if (instance.getActiveEditor() && instance.getActiveEditor().isOpened()) {
	      return;
	    }
	    if (isCtrlKey(event.keyCode)) {
	      _this.setCopyableText();
	      stopImmediatePropagation(event);
	      return;
	    }
	    var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;
	    if (event.keyCode == KEY_CODES.A && ctrlDown) {
	      instance._registerTimeout(setTimeout(proxy(_this.setCopyableText, _this), 0));
	    }
	  }
	  this.destroy = function() {
	    if (this.copyPasteInstance) {
	      this.copyPasteInstance.removeCallback(onCut);
	      this.copyPasteInstance.removeCallback(onPaste);
	      this.copyPasteInstance.destroy();
	      this.copyPasteInstance = null;
	    }
	    instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	  };
	  instance.addHook('afterDestroy', proxy(this.destroy, this));
	  this.triggerPaste = proxy(this.copyPasteInstance.triggerPaste, this.copyPasteInstance);
	  this.triggerCut = proxy(this.copyPasteInstance.triggerCut, this.copyPasteInstance);
	  this.setCopyableText = function() {
	    var settings = instance.getSettings();
	    var copyRowsLimit = settings.copyRowsLimit;
	    var copyColsLimit = settings.copyColsLimit;
	    var selRange = instance.getSelectedRange();
	    var topLeft = selRange.getTopLeftCorner();
	    var bottomRight = selRange.getBottomRightCorner();
	    var startRow = topLeft.row;
	    var startCol = topLeft.col;
	    var endRow = bottomRight.row;
	    var endCol = bottomRight.col;
	    var finalEndRow = Math.min(endRow, startRow + copyRowsLimit - 1);
	    var finalEndCol = Math.min(endCol, startCol + copyColsLimit - 1);
	    var copyableRanges = [];
	    copyableRanges.push({
	      startRow: startRow,
	      startCol: startCol,
	      endRow: finalEndRow,
	      endCol: finalEndCol
	    });
	    copyableRanges = Handsontable.hooks.run(instance, 'modifyCopyableRange', copyableRanges);
	    var copyableData = this.getRangedCopyableData(copyableRanges);
	    instance.copyPaste.copyPasteInstance.copyable(copyableData);
	    if (endRow !== finalEndRow || endCol !== finalEndCol) {
	      Handsontable.hooks.run(instance, 'afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, copyRowsLimit, copyColsLimit);
	    }
	  };
	  this.getRangedCopyableData = function(ranges) {
	    var dataSet = [];
	    var copyableRows = [];
	    var copyableColumns = [];
	    arrayEach(ranges, (function(range) {
	      rangeEach(range.startRow, range.endRow, (function(row) {
	        if (copyableRows.indexOf(row) === -1) {
	          copyableRows.push(row);
	        }
	      }));
	      rangeEach(range.startCol, range.endCol, (function(column) {
	        if (copyableColumns.indexOf(column) === -1) {
	          copyableColumns.push(column);
	        }
	      }));
	    }));
	    arrayEach(copyableRows, (function(row) {
	      var rowSet = [];
	      arrayEach(copyableColumns, (function(column) {
	        rowSet.push(instance.getCopyableData(row, column));
	      }));
	      dataSet.push(rowSet);
	    }));
	    return SheetClip.stringify(dataSet);
	  };
	}
	function init() {
	  var instance = this,
	      pluginEnabled = instance.getSettings().copyPaste !== false;
	  if (pluginEnabled && !instance.copyPaste) {
	    instance.copyPaste = new CopyPastePlugin(instance);
	  } else if (!pluginEnabled && instance.copyPaste) {
	    instance.copyPaste.destroy();
	    instance.copyPaste = null;
	  }
	}
	Handsontable.hooks.add('afterInit', init);
	Handsontable.hooks.add('afterUpdateSettings', init);
	Handsontable.hooks.register('afterCopyLimit');
	Handsontable.hooks.register('modifyCopyableRange');
	;

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"SheetClip":"SheetClip","copyPaste":"copyPaste","helpers/array":41,"helpers/dom/event":45,"helpers/function":46,"helpers/number":48,"helpers/unicode":52,"plugins":55}],72:[function(require,module,exports){
	"use strict";
	var $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;
	var WalkontableSelection = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;
	function CustomBorders() {}
	var instance;
	var checkEnable = function(customBorders) {
	  if (typeof customBorders === 'boolean') {
	    if (customBorders === true) {
	      return true;
	    }
	  }
	  if (typeof customBorders === 'object') {
	    if (customBorders.length > 0) {
	      return true;
	    }
	  }
	  return false;
	};
	var init = function() {
	  if (checkEnable(this.getSettings().customBorders)) {
	    if (!this.customBorders) {
	      instance = this;
	      this.customBorders = new CustomBorders();
	    }
	  }
	};
	var getSettingIndex = function(className) {
	  for (var i = 0; i < instance.view.wt.selections.length; i++) {
	    if (instance.view.wt.selections[i].settings.className == className) {
	      return i;
	    }
	  }
	  return -1;
	};
	var insertBorderIntoSettings = function(border) {
	  var coordinates = {
	    row: border.row,
	    col: border.col
	  };
	  var selection = new WalkontableSelection(border, new WalkontableCellRange(coordinates, coordinates, coordinates));
	  var index = getSettingIndex(border.className);
	  if (index >= 0) {
	    instance.view.wt.selections[index] = selection;
	  } else {
	    instance.view.wt.selections.push(selection);
	  }
	};
	var prepareBorderFromCustomAdded = function(row, col, borderObj) {
	  var border = createEmptyBorders(row, col);
	  border = extendDefaultBorder(border, borderObj);
	  this.setCellMeta(row, col, 'borders', border);
	  insertBorderIntoSettings(border);
	};
	var prepareBorderFromCustomAddedRange = function(rowObj) {
	  var range = rowObj.range;
	  for (var row = range.from.row; row <= range.to.row; row++) {
	    for (var col = range.from.col; col <= range.to.col; col++) {
	      var border = createEmptyBorders(row, col);
	      var add = 0;
	      if (row == range.from.row) {
	        add++;
	        if (rowObj.hasOwnProperty('top')) {
	          border.top = rowObj.top;
	        }
	      }
	      if (row == range.to.row) {
	        add++;
	        if (rowObj.hasOwnProperty('bottom')) {
	          border.bottom = rowObj.bottom;
	        }
	      }
	      if (col == range.from.col) {
	        add++;
	        if (rowObj.hasOwnProperty('left')) {
	          border.left = rowObj.left;
	        }
	      }
	      if (col == range.to.col) {
	        add++;
	        if (rowObj.hasOwnProperty('right')) {
	          border.right = rowObj.right;
	        }
	      }
	      if (add > 0) {
	        this.setCellMeta(row, col, 'borders', border);
	        insertBorderIntoSettings(border);
	      }
	    }
	  }
	};
	var createClassName = function(row, col) {
	  return 'border_row' + row + 'col' + col;
	};
	var createDefaultCustomBorder = function() {
	  return {
	    width: 1,
	    color: '#000'
	  };
	};
	var createSingleEmptyBorder = function() {
	  return {hide: true};
	};
	var createDefaultHtBorder = function() {
	  return {
	    width: 1,
	    color: '#000',
	    cornerVisible: false
	  };
	};
	var createEmptyBorders = function(row, col) {
	  return {
	    className: createClassName(row, col),
	    border: createDefaultHtBorder(),
	    row: row,
	    col: col,
	    top: createSingleEmptyBorder(),
	    right: createSingleEmptyBorder(),
	    bottom: createSingleEmptyBorder(),
	    left: createSingleEmptyBorder()
	  };
	};
	var extendDefaultBorder = function(defaultBorder, customBorder) {
	  if (customBorder.hasOwnProperty('border')) {
	    defaultBorder.border = customBorder.border;
	  }
	  if (customBorder.hasOwnProperty('top')) {
	    defaultBorder.top = customBorder.top;
	  }
	  if (customBorder.hasOwnProperty('right')) {
	    defaultBorder.right = customBorder.right;
	  }
	  if (customBorder.hasOwnProperty('bottom')) {
	    defaultBorder.bottom = customBorder.bottom;
	  }
	  if (customBorder.hasOwnProperty('left')) {
	    defaultBorder.left = customBorder.left;
	  }
	  return defaultBorder;
	};
	var removeBordersFromDom = function(borderClassName) {
	  var borders = document.querySelectorAll('.' + borderClassName);
	  for (var i = 0; i < borders.length; i++) {
	    if (borders[i]) {
	      if (borders[i].nodeName != 'TD') {
	        var parent = borders[i].parentNode;
	        if (parent.parentNode) {
	          parent.parentNode.removeChild(parent);
	        }
	      }
	    }
	  }
	};
	var removeAllBorders = function(row, col) {
	  var borderClassName = createClassName(row, col);
	  removeBordersFromDom(borderClassName);
	  this.removeCellMeta(row, col, 'borders');
	};
	var setBorder = function(row, col, place, remove) {
	  var bordersMeta = this.getCellMeta(row, col).borders;
	  if (!bordersMeta || bordersMeta.border == undefined) {
	    bordersMeta = createEmptyBorders(row, col);
	  }
	  if (remove) {
	    bordersMeta[place] = createSingleEmptyBorder();
	  } else {
	    bordersMeta[place] = createDefaultCustomBorder();
	  }
	  this.setCellMeta(row, col, 'borders', bordersMeta);
	  var borderClassName = createClassName(row, col);
	  removeBordersFromDom(borderClassName);
	  insertBorderIntoSettings(bordersMeta);
	  this.render();
	};
	var prepareBorder = function(range, place, remove) {
	  if (range.from.row == range.to.row && range.from.col == range.to.col) {
	    if (place == 'noBorders') {
	      removeAllBorders.call(this, range.from.row, range.from.col);
	    } else {
	      setBorder.call(this, range.from.row, range.from.col, place, remove);
	    }
	  } else {
	    switch (place) {
	      case 'noBorders':
	        for (var column = range.from.col; column <= range.to.col; column++) {
	          for (var row = range.from.row; row <= range.to.row; row++) {
	            removeAllBorders.call(this, row, column);
	          }
	        }
	        break;
	      case 'top':
	        for (var topCol = range.from.col; topCol <= range.to.col; topCol++) {
	          setBorder.call(this, range.from.row, topCol, place, remove);
	        }
	        break;
	      case 'right':
	        for (var rowRight = range.from.row; rowRight <= range.to.row; rowRight++) {
	          setBorder.call(this, rowRight, range.to.col, place);
	        }
	        break;
	      case 'bottom':
	        for (var bottomCol = range.from.col; bottomCol <= range.to.col; bottomCol++) {
	          setBorder.call(this, range.to.row, bottomCol, place);
	        }
	        break;
	      case 'left':
	        for (var rowLeft = range.from.row; rowLeft <= range.to.row; rowLeft++) {
	          setBorder.call(this, rowLeft, range.from.col, place);
	        }
	        break;
	    }
	  }
	};
	var checkSelectionBorders = function(hot, direction) {
	  var atLeastOneHasBorder = false;
	  hot.getSelectedRange().forAll(function(r, c) {
	    var metaBorders = hot.getCellMeta(r, c).borders;
	    if (metaBorders) {
	      if (direction) {
	        if (!metaBorders[direction].hasOwnProperty('hide')) {
	          atLeastOneHasBorder = true;
	          return false;
	        }
	      } else {
	        atLeastOneHasBorder = true;
	        return false;
	      }
	    }
	  });
	  return atLeastOneHasBorder;
	};
	var markSelected = function(label) {
	  return '<span class="selected">' + String.fromCharCode(10003) + '</span>' + label;
	};
	var addBordersOptionsToContextMenu = function(defaultOptions) {
	  if (!this.getSettings().customBorders) {
	    return;
	  }
	  defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR);
	  defaultOptions.items.push({
	    key: 'borders',
	    name: 'Borders',
	    submenu: {items: [{
	        key: 'borders:top',
	        name: function() {
	          var label = 'Top';
	          var hasBorder = checkSelectionBorders(this, 'top');
	          if (hasBorder) {
	            label = markSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var hasBorder = checkSelectionBorders(this, 'top');
	          prepareBorder.call(this, this.getSelectedRange(), 'top', hasBorder);
	        },
	        disabled: false
	      }, {
	        key: 'borders:right',
	        name: function() {
	          var label = 'Right';
	          var hasBorder = checkSelectionBorders(this, 'right');
	          if (hasBorder) {
	            label = markSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var hasBorder = checkSelectionBorders(this, 'right');
	          prepareBorder.call(this, this.getSelectedRange(), 'right', hasBorder);
	        },
	        disabled: false
	      }, {
	        key: 'borders:bottom',
	        name: function() {
	          var label = 'Bottom';
	          var hasBorder = checkSelectionBorders(this, 'bottom');
	          if (hasBorder) {
	            label = markSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var hasBorder = checkSelectionBorders(this, 'bottom');
	          prepareBorder.call(this, this.getSelectedRange(), 'bottom', hasBorder);
	        },
	        disabled: false
	      }, {
	        key: 'borders:left',
	        name: function() {
	          var label = 'Left';
	          var hasBorder = checkSelectionBorders(this, 'left');
	          if (hasBorder) {
	            label = markSelected(label);
	          }
	          return label;
	        },
	        callback: function() {
	          var hasBorder = checkSelectionBorders(this, 'left');
	          prepareBorder.call(this, this.getSelectedRange(), 'left', hasBorder);
	        },
	        disabled: false
	      }, {
	        key: 'borders:no_borders',
	        name: 'Remove border(s)',
	        callback: function() {
	          prepareBorder.call(this, this.getSelectedRange(), 'noBorders');
	        },
	        disabled: function() {
	          return !checkSelectionBorders(this);
	        }
	      }]}
	  });
	};
	Handsontable.hooks.add('beforeInit', init);
	Handsontable.hooks.add('afterContextMenuDefaultOptions', addBordersOptionsToContextMenu);
	Handsontable.hooks.add('afterInit', function() {
	  var customBorders = this.getSettings().customBorders;
	  if (customBorders) {
	    for (var i = 0; i < customBorders.length; i++) {
	      if (customBorders[i].range) {
	        prepareBorderFromCustomAddedRange.call(this, customBorders[i]);
	      } else {
	        prepareBorderFromCustomAdded.call(this, customBorders[i].row, customBorders[i].col, customBorders[i]);
	      }
	    }
	    this.render();
	    this.view.wt.draw(true);
	  }
	});
	Handsontable.CustomBorders = CustomBorders;

	//# 
	},{"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/selection":18,"plugins":55}],73:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  DragToScroll: {get: function() {
	      return DragToScroll;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_plugins__;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	;
	Handsontable.plugins.DragToScroll = DragToScroll;
	function DragToScroll() {
	  this.boundaries = null;
	  this.callback = null;
	}
	DragToScroll.prototype.setBoundaries = function(boundaries) {
	  this.boundaries = boundaries;
	};
	DragToScroll.prototype.setCallback = function(callback) {
	  this.callback = callback;
	};
	DragToScroll.prototype.check = function(x, y) {
	  var diffX = 0;
	  var diffY = 0;
	  if (y < this.boundaries.top) {
	    diffY = y - this.boundaries.top;
	  } else if (y > this.boundaries.bottom) {
	    diffY = y - this.boundaries.bottom;
	  }
	  if (x < this.boundaries.left) {
	    diffX = x - this.boundaries.left;
	  } else if (x > this.boundaries.right) {
	    diffX = x - this.boundaries.right;
	  }
	  this.callback(diffX, diffY);
	};
	var dragToScroll;
	var instance;
	var setupListening = function(instance) {
	  instance.dragToScrollListening = false;
	  var scrollHandler = instance.view.wt.wtTable.holder;
	  dragToScroll = new DragToScroll();
	  if (scrollHandler === window) {
	    return;
	  } else {
	    dragToScroll.setBoundaries(scrollHandler.getBoundingClientRect());
	  }
	  dragToScroll.setCallback(function(scrollX, scrollY) {
	    if (scrollX < 0) {
	      scrollHandler.scrollLeft -= 50;
	    } else if (scrollX > 0) {
	      scrollHandler.scrollLeft += 50;
	    }
	    if (scrollY < 0) {
	      scrollHandler.scrollTop -= 20;
	    } else if (scrollY > 0) {
	      scrollHandler.scrollTop += 20;
	    }
	  });
	  instance.dragToScrollListening = true;
	};
	Handsontable.hooks.add('afterInit', function() {
	  var instance = this;
	  var eventManager = eventManagerObject(this);
	  eventManager.addEventListener(document, 'mouseup', function() {
	    instance.dragToScrollListening = false;
	  });
	  eventManager.addEventListener(document, 'mousemove', function(event) {
	    if (instance.dragToScrollListening) {
	      dragToScroll.check(event.clientX, event.clientY);
	    }
	  });
	});
	Handsontable.hooks.add('afterDestroy', function() {
	  eventManagerObject(this).clear();
	});
	Handsontable.hooks.add('afterOnCellMouseDown', function() {
	  setupListening(this);
	});
	Handsontable.hooks.add('afterOnCellCornerMouseDown', function() {
	  setupListening(this);
	});
	Handsontable.plugins.DragToScroll = DragToScroll;

	//# 
	},{"eventManager":40,"plugins":55}],74:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ManualColumnFreeze: {get: function() {
	      return ManualColumnFreeze;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_plugins__;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var ManualColumnFreeze = function ManualColumnFreeze(hotInstance) {
	  $traceurRuntime.superConstructor($ManualColumnFreeze).call(this, hotInstance);
	};
	var $ManualColumnFreeze = ManualColumnFreeze;
	($traceurRuntime.createClass)(ManualColumnFreeze, {
	  isEnabled: function() {
	    return !!this.hot.getSettings().manualColumnFreeze;
	  },
	  enablePlugin: function() {
	    var $__2 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.addHook('modifyCol', (function(col) {
	      return $__2.onModifyCol(col);
	    }));
	    this.addHook('afterContextMenuDefaultOptions', (function(defaultOptions) {
	      return $__2.addContextMenuEntry(defaultOptions);
	    }));
	    $traceurRuntime.superGet(this, $ManualColumnFreeze.prototype, "enablePlugin").call(this);
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $ManualColumnFreeze.prototype, "disablePlugin").call(this);
	  },
	  init: function() {
	    $traceurRuntime.superGet(this, $ManualColumnFreeze.prototype, "init").call(this);
	    if (typeof this.hot.manualColumnPositionsPluginUsages === 'undefined') {
	      this.hot.manualColumnPositionsPluginUsages = ['manualColumnFreeze'];
	    } else {
	      this.hot.manualColumnPositionsPluginUsages.push('manualColumnFreeze');
	    }
	    this.fixedColumnsCount = this.hot.getSettings().fixedColumnsLeft;
	  },
	  onModifyCol: function(column) {
	    if (this.hot.manualColumnPositionsPluginUsages.length > 1) {
	      return column;
	    }
	    return this.getModifiedColumnIndex(column);
	  },
	  getModifiedColumnIndex: function(column) {
	    return this.hot.manualColumnPositions[column];
	  },
	  addContextMenuEntry: function(defaultOptions) {
	    var _this = this;
	    defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR, {
	      key: 'freeze_column',
	      name: function() {
	        var selectedColumn = _this.hot.getSelected()[1];
	        if (selectedColumn > _this.fixedColumnsCount - 1) {
	          return 'Freeze this column';
	        } else {
	          return 'Unfreeze this column';
	        }
	      },
	      disabled: function() {
	        var selection = _this.hot.getSelected();
	        return selection[1] !== selection[3];
	      },
	      callback: function() {
	        var selectedColumn = _this.hot.getSelected()[1];
	        if (selectedColumn > _this.fixedColumnsCount - 1) {
	          _this.freezeColumn(selectedColumn);
	        } else {
	          _this.unfreezeColumn(selectedColumn);
	        }
	      }
	    });
	  },
	  freezeColumn: function(column) {
	    if (column <= this.fixedColumnsCount - 1) {
	      return;
	    }
	    var modifiedColumn = this.getModifiedColumnIndex(column) || column;
	    this.checkPositionData(modifiedColumn);
	    this.modifyColumnOrder(modifiedColumn, column, null, 'freeze');
	    this.addFixedColumn();
	    this.hot.view.wt.wtOverlays.leftOverlay.refresh();
	    this.hot.view.wt.wtOverlays.adjustElementsSize();
	  },
	  unfreezeColumn: function(column) {
	    if (column > this.fixedColumnsCount - 1) {
	      return;
	    }
	    var returnCol = this.getBestColumnReturnPosition(column);
	    var modifiedColumn = this.getModifiedColumnIndex(column) || column;
	    this.checkPositionData(modifiedColumn);
	    this.modifyColumnOrder(modifiedColumn, column, returnCol, 'unfreeze');
	    this.removeFixedColumn();
	    this.hot.view.wt.wtOverlays.leftOverlay.refresh();
	    this.hot.view.wt.wtOverlays.adjustElementsSize();
	  },
	  addFixedColumn: function() {
	    this.hot.updateSettings({fixedColumnsLeft: this.fixedColumnsCount + 1});
	    this.fixedColumnsCount++;
	  },
	  removeFixedColumn: function() {
	    this.hot.updateSettings({fixedColumnsLeft: this.fixedColumnsCount - 1});
	    this.fixedColumnsCount--;
	  },
	  checkPositionData: function(column) {
	    if (!this.hot.manualColumnPositions || this.hot.manualColumnPositions.length === 0) {
	      if (!this.hot.manualColumnPositions) {
	        this.hot.manualColumnPositions = [];
	      }
	    }
	    if (column) {
	      if (!this.hot.manualColumnPositions[column]) {
	        this.createPositionData(column + 1);
	      }
	    } else {
	      this.createPositionData(this.hot.countCols());
	    }
	  },
	  createPositionData: function(length) {
	    if (this.hot.manualColumnPositions.length < length) {
	      for (var i = this.hot.manualColumnPositions.length; i < length; i++) {
	        this.hot.manualColumnPositions[i] = i;
	      }
	    }
	  },
	  modifyColumnOrder: function(column, actualColumn, returnColumn, action) {
	    if (returnColumn == null) {
	      returnColumn = column;
	    }
	    if (action === 'freeze') {
	      this.hot.manualColumnPositions.splice(this.fixedColumnsCount, 0, this.hot.manualColumnPositions.splice(actualColumn, 1)[0]);
	    } else if (action === 'unfreeze') {
	      this.hot.manualColumnPositions.splice(returnColumn, 0, this.hot.manualColumnPositions.splice(actualColumn, 1)[0]);
	    }
	  },
	  getBestColumnReturnPosition: function(column) {
	    var i = this.fixedColumnsCount;
	    var j = this.getModifiedColumnIndex(i);
	    var initialCol = this.getModifiedColumnIndex(column);
	    while (j < initialCol) {
	      i++;
	      j = this.getModifiedColumnIndex(i);
	    }
	    return i - 1;
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('manualColumnFreeze', ManualColumnFreeze);

	//# 
	},{"_base":56,"plugins":55}],75:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ManualColumnMove: {get: function() {
	      return ManualColumnMove;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_plugins__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    hasClass = $__0.hasClass,
	    removeClass = $__0.removeClass;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    pageX = $__2.pageX,
	    pageY = $__2.pageY;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	;
	function ManualColumnMove() {
	  var startCol,
	      endCol,
	      startX,
	      startOffset,
	      currentCol,
	      instance,
	      currentTH,
	      handle = document.createElement('DIV'),
	      guide = document.createElement('DIV'),
	      eventManager = eventManagerObject(this);
	  handle.className = 'manualColumnMover';
	  guide.className = 'manualColumnMoverGuide';
	  var saveManualColumnPositions = function() {
	    var instance = this;
	    Handsontable.hooks.run(instance, 'persistentStateSave', 'manualColumnPositions', instance.manualColumnPositions);
	  };
	  var loadManualColumnPositions = function() {
	    var instance = this;
	    var storedState = {};
	    Handsontable.hooks.run(instance, 'persistentStateLoad', 'manualColumnPositions', storedState);
	    return storedState.value;
	  };
	  function setupHandlePosition(TH) {
	    instance = this;
	    currentTH = TH;
	    var col = this.view.wt.wtTable.getCoords(TH).col;
	    if (col >= 0) {
	      currentCol = col;
	      var box = currentTH.getBoundingClientRect();
	      startOffset = box.left;
	      handle.style.top = box.top + 'px';
	      handle.style.left = startOffset + 'px';
	      instance.rootElement.appendChild(handle);
	    }
	  }
	  function refreshHandlePosition(TH, delta) {
	    var box = TH.getBoundingClientRect();
	    var handleWidth = 6;
	    if (delta > 0) {
	      handle.style.left = (box.left + box.width - handleWidth) + 'px';
	    } else {
	      handle.style.left = box.left + 'px';
	    }
	  }
	  function setupGuidePosition() {
	    var instance = this;
	    addClass(handle, 'active');
	    addClass(guide, 'active');
	    var box = currentTH.getBoundingClientRect();
	    guide.style.width = box.width + 'px';
	    guide.style.height = instance.view.maximumVisibleElementHeight(0) + 'px';
	    guide.style.top = handle.style.top;
	    guide.style.left = startOffset + 'px';
	    instance.rootElement.appendChild(guide);
	  }
	  function refreshGuidePosition(diff) {
	    guide.style.left = startOffset + diff + 'px';
	  }
	  function hideHandleAndGuide() {
	    removeClass(handle, 'active');
	    removeClass(guide, 'active');
	  }
	  var checkColumnHeader = function(element) {
	    if (element.tagName != 'BODY') {
	      if (element.parentNode.tagName == 'THEAD') {
	        return true;
	      } else {
	        element = element.parentNode;
	        return checkColumnHeader(element);
	      }
	    }
	    return false;
	  };
	  var getTHFromTargetElement = function(element) {
	    if (element.tagName != 'TABLE') {
	      if (element.tagName == 'TH') {
	        return element;
	      } else {
	        return getTHFromTargetElement(element.parentNode);
	      }
	    }
	    return null;
	  };
	  var bindEvents = function() {
	    var instance = this;
	    var pressed;
	    eventManager.addEventListener(instance.rootElement, 'mouseover', function(e) {
	      if (checkColumnHeader(e.target)) {
	        var th = getTHFromTargetElement(e.target);
	        if (th) {
	          if (pressed) {
	            var col = instance.view.wt.wtTable.getCoords(th).col;
	            if (col >= 0) {
	              endCol = col;
	              refreshHandlePosition(e.target, endCol - startCol);
	            }
	          } else {
	            setupHandlePosition.call(instance, th);
	          }
	        }
	      }
	    });
	    eventManager.addEventListener(instance.rootElement, 'mousedown', function(e) {
	      if (hasClass(e.target, 'manualColumnMover')) {
	        startX = pageX(e);
	        setupGuidePosition.call(instance);
	        pressed = instance;
	        startCol = currentCol;
	        endCol = currentCol;
	      }
	    });
	    eventManager.addEventListener(window, 'mousemove', function(e) {
	      if (pressed) {
	        refreshGuidePosition(pageX(e) - startX);
	      }
	    });
	    eventManager.addEventListener(window, 'mouseup', function(e) {
	      if (pressed) {
	        hideHandleAndGuide();
	        pressed = false;
	        createPositionData(instance.manualColumnPositions, instance.countCols());
	        instance.manualColumnPositions.splice(endCol, 0, instance.manualColumnPositions.splice(startCol, 1)[0]);
	        Handsontable.hooks.run(instance, 'beforeColumnMove', startCol, endCol);
	        instance.forceFullRender = true;
	        instance.view.render();
	        saveManualColumnPositions.call(instance);
	        Handsontable.hooks.run(instance, 'afterColumnMove', startCol, endCol);
	        setupHandlePosition.call(instance, currentTH);
	      }
	    });
	    instance.addHook('afterDestroy', unbindEvents);
	  };
	  var unbindEvents = function() {
	    eventManager.clear();
	  };
	  var createPositionData = function(positionArr, len) {
	    if (positionArr.length < len) {
	      for (var i = positionArr.length; i < len; i++) {
	        positionArr[i] = i;
	      }
	    }
	  };
	  this.beforeInit = function() {
	    this.manualColumnPositions = [];
	  };
	  this.init = function(source) {
	    var instance = this;
	    var manualColMoveEnabled = !!(this.getSettings().manualColumnMove);
	    if (manualColMoveEnabled) {
	      var initialManualColumnPositions = this.getSettings().manualColumnMove;
	      var loadedManualColumnPositions = loadManualColumnPositions.call(instance);
	      if (typeof loadedManualColumnPositions != 'undefined') {
	        this.manualColumnPositions = loadedManualColumnPositions;
	      } else if (Array.isArray(initialManualColumnPositions)) {
	        this.manualColumnPositions = initialManualColumnPositions;
	      } else {
	        this.manualColumnPositions = [];
	      }
	      if (source === 'afterInit' || source === 'afterUpdateSettings' && eventManager.context.eventListeners.length === 0) {
	        if (typeof instance.manualColumnPositionsPluginUsages === 'undefined') {
	          instance.manualColumnPositionsPluginUsages = ['manualColumnMove'];
	        } else {
	          instance.manualColumnPositionsPluginUsages.push('manualColumnMove');
	        }
	        bindEvents.call(this);
	        if (this.manualColumnPositions.length > 0) {
	          this.forceFullRender = true;
	          this.render();
	        }
	      }
	    } else {
	      var pluginUsagesIndex = instance.manualColumnPositionsPluginUsages ? instance.manualColumnPositionsPluginUsages.indexOf('manualColumnMove') : -1;
	      if (pluginUsagesIndex > -1) {
	        unbindEvents.call(this);
	        this.manualColumnPositions = [];
	        instance.manualColumnPositionsPluginUsages[pluginUsagesIndex] = void 0;
	      }
	    }
	  };
	  this.modifyCol = function(col) {
	    if (this.getSettings().manualColumnMove) {
	      if (typeof this.manualColumnPositions[col] === 'undefined') {
	        createPositionData(this.manualColumnPositions, col + 1);
	      }
	      return this.manualColumnPositions[col];
	    }
	    return col;
	  };
	  this.afterRemoveCol = function(index, amount) {
	    if (!this.getSettings().manualColumnMove) {
	      return;
	    }
	    var rmindx,
	        colpos = this.manualColumnPositions;
	    rmindx = colpos.splice(index, amount);
	    colpos = colpos.map(function(colpos) {
	      var i,
	          newpos = colpos;
	      for (i = 0; i < rmindx.length; i++) {
	        if (colpos > rmindx[i]) {
	          newpos--;
	        }
	      }
	      return newpos;
	    });
	    this.manualColumnPositions = colpos;
	  };
	  this.afterCreateCol = function(index, amount) {
	    if (!this.getSettings().manualColumnMove) {
	      return;
	    }
	    var colpos = this.manualColumnPositions;
	    if (!colpos.length) {
	      return;
	    }
	    var addindx = [];
	    for (var i = 0; i < amount; i++) {
	      addindx.push(index + i);
	    }
	    if (index >= colpos.length) {
	      colpos.concat(addindx);
	    } else {
	      colpos = colpos.map(function(colpos) {
	        return (colpos >= index) ? (colpos + amount) : colpos;
	      });
	      colpos.splice.apply(colpos, [index, 0].concat(addindx));
	    }
	    this.manualColumnPositions = colpos;
	  };
	}
	var htManualColumnMove = new ManualColumnMove();
	Handsontable.hooks.add('beforeInit', htManualColumnMove.beforeInit);
	Handsontable.hooks.add('afterInit', function() {
	  htManualColumnMove.init.call(this, 'afterInit');
	});
	Handsontable.hooks.add('afterUpdateSettings', function() {
	  htManualColumnMove.init.call(this, 'afterUpdateSettings');
	});
	Handsontable.hooks.add('modifyCol', htManualColumnMove.modifyCol);
	Handsontable.hooks.add('afterRemoveCol', htManualColumnMove.afterRemoveCol);
	Handsontable.hooks.add('afterCreateCol', htManualColumnMove.afterCreateCol);
	Handsontable.hooks.register('beforeColumnMove');
	Handsontable.hooks.register('afterColumnMove');

	//# 
	},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],76:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ManualColumnResize: {get: function() {
	      return ManualColumnResize;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base_46_js__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_plugins__;
	var BasePlugin = ($___46__46__47__95_base_46_js__ = require("_base.js"), $___46__46__47__95_base_46_js__ && $___46__46__47__95_base_46_js__.__esModule && $___46__46__47__95_base_46_js__ || {default: $___46__46__47__95_base_46_js__}).default;
	var $__1 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__1.addClass,
	    hasClass = $__1.hasClass,
	    removeClass = $__1.removeClass;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var $__3 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    pageX = $__3.pageX,
	    pageY = $__3.pageY;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var ManualColumnResize = function ManualColumnResize(hotInstance) {
	  $traceurRuntime.superConstructor($ManualColumnResize).call(this, hotInstance);
	  this.currentTH = null;
	  this.currentCol = null;
	  this.currentWidth = null;
	  this.newSize = null;
	  this.startY = null;
	  this.startWidth = null;
	  this.startOffset = null;
	  this.handle = document.createElement('DIV');
	  this.guide = document.createElement('DIV');
	  this.eventManager = eventManagerObject(this);
	  this.pressed = null;
	  this.dblclick = 0;
	  this.autoresizeTimeout = null;
	  this.manualColumnWidths = [];
	  addClass(this.handle, 'manualColumnResizer');
	  addClass(this.guide, 'manualColumnResizerGuide');
	};
	var $ManualColumnResize = ManualColumnResize;
	($traceurRuntime.createClass)(ManualColumnResize, {
	  isEnabled: function() {
	    return this.hot.getSettings().manualColumnResize;
	  },
	  enablePlugin: function() {
	    var $__5 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.manualColumnWidths = [];
	    var initialColumnWidth = this.hot.getSettings().manualColumnResize;
	    var loadedManualColumnWidths = this.loadManualColumnWidths();
	    this.addHook('modifyColWidth', (function(width, col) {
	      return $__5.onModifyColWidth(width, col);
	    }));
	    if (typeof loadedManualColumnWidths != 'undefined') {
	      this.manualColumnWidths = loadedManualColumnWidths;
	    } else if (Array.isArray(initialColumnWidth)) {
	      this.manualColumnWidths = initialColumnWidth;
	    } else {
	      this.manualColumnWidths = [];
	    }
	    Handsontable.hooks.register('beforeColumnResize');
	    Handsontable.hooks.register('afterColumnResize');
	    this.bindEvents();
	    $traceurRuntime.superGet(this, $ManualColumnResize.prototype, "enablePlugin").call(this);
	  },
	  updatePlugin: function() {
	    var initialColumnWidth = this.hot.getSettings().manualColumnResize;
	    if (Array.isArray(initialColumnWidth)) {
	      this.manualColumnWidths = initialColumnWidth;
	    } else {
	      this.manualColumnWidths = [];
	    }
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $ManualColumnResize.prototype, "disablePlugin").call(this);
	  },
	  saveManualColumnWidths: function() {
	    this.hot.runHooks('persistentStateSave', 'manualColumnWidths', this.manualColumnWidths);
	  },
	  loadManualColumnWidths: function() {
	    var storedState = {};
	    this.hot.runHooks('persistentStateLoad', 'manualColumnWidths', storedState);
	    return storedState.value;
	  },
	  setupHandlePosition: function(TH) {
	    this.currentTH = TH;
	    var col = this.hot.view.wt.wtTable.getCoords(TH).col;
	    if (col >= 0) {
	      var box = this.currentTH.getBoundingClientRect();
	      this.currentCol = col;
	      this.startOffset = box.left - 6;
	      this.startWidth = parseInt(box.width, 10);
	      this.handle.style.top = box.top + 'px';
	      this.handle.style.left = this.startOffset + this.startWidth + 'px';
	      this.hot.rootElement.appendChild(this.handle);
	    }
	  },
	  refreshHandlePosition: function() {
	    this.handle.style.left = this.startOffset + this.currentWidth + 'px';
	  },
	  setupGuidePosition: function() {
	    addClass(this.handle, 'active');
	    addClass(this.guide, 'active');
	    this.guide.style.top = this.handle.style.top;
	    this.guide.style.left = this.handle.style.left;
	    this.guide.style.height = this.hot.view.maximumVisibleElementHeight(0) + 'px';
	    this.hot.rootElement.appendChild(this.guide);
	  },
	  refreshGuidePosition: function() {
	    this.guide.style.left = this.handle.style.left;
	  },
	  hideHandleAndGuide: function() {
	    removeClass(this.handle, 'active');
	    removeClass(this.guide, 'active');
	  },
	  checkIfColumnHeader: function(element) {
	    if (element.tagName != 'BODY') {
	      if (element.parentNode.tagName == 'THEAD') {
	        return true;
	      } else {
	        element = element.parentNode;
	        return this.checkIfColumnHeader(element);
	      }
	    }
	    return false;
	  },
	  getTHFromTargetElement: function(element) {
	    if (element.tagName != 'TABLE') {
	      if (element.tagName == 'TH') {
	        return element;
	      } else {
	        return this.getTHFromTargetElement(element.parentNode);
	      }
	    }
	    return null;
	  },
	  onMouseOver: function(event) {
	    if (this.checkIfColumnHeader(event.target)) {
	      var th = this.getTHFromTargetElement(event.target);
	      if (!th) {
	        return;
	      }
	      var colspan = th.getAttribute('colspan');
	      if (th && (colspan === null || colspan === 1)) {
	        if (!this.pressed) {
	          this.setupHandlePosition(th);
	        }
	      }
	    }
	  },
	  afterMouseDownTimeout: function() {
	    if (this.dblclick >= 2) {
	      var hookNewSize = this.hot.runHooks('beforeColumnResize', this.currentCol, this.newSize, true);
	      if (hookNewSize !== void 0) {
	        this.newSize = hookNewSize;
	      }
	      this.setManualSize(this.currentCol, this.newSize);
	      this.hot.forceFullRender = true;
	      this.hot.view.render();
	      this.hot.view.wt.wtOverlays.adjustElementsSize(true);
	      this.hot.runHooks('afterColumnResize', this.currentCol, this.newSize, true);
	    }
	    this.dblclick = 0;
	    this.autoresizeTimeout = null;
	  },
	  onMouseDown: function(event) {
	    var $__5 = this;
	    if (hasClass(event.target, 'manualColumnResizer')) {
	      this.setupGuidePosition();
	      this.pressed = this.hot;
	      if (this.autoresizeTimeout === null) {
	        this.autoresizeTimeout = setTimeout((function() {
	          return $__5.afterMouseDownTimeout();
	        }), 500);
	        this.hot._registerTimeout(this.autoresizeTimeout);
	      }
	      this.dblclick++;
	      this.startX = pageX(event);
	      this.newSize = this.startWidth;
	    }
	  },
	  onMouseMove: function(event) {
	    if (this.pressed) {
	      this.currentWidth = this.startWidth + (pageX(event) - this.startX);
	      this.newSize = this.setManualSize(this.currentCol, this.currentWidth);
	      this.refreshHandlePosition();
	      this.refreshGuidePosition();
	    }
	  },
	  onMouseUp: function(event) {
	    if (this.pressed) {
	      this.hideHandleAndGuide();
	      this.pressed = false;
	      if (this.newSize != this.startWidth) {
	        this.hot.runHooks('beforeColumnResize', this.currentCol, this.newSize);
	        this.hot.forceFullRender = true;
	        this.hot.view.render();
	        this.hot.view.wt.wtOverlays.adjustElementsSize(true);
	        this.saveManualColumnWidths();
	        this.hot.runHooks('afterColumnResize', this.currentCol, this.newSize);
	      }
	      this.setupHandlePosition(this.currentTH);
	    }
	  },
	  bindEvents: function() {
	    var $__5 = this;
	    this.eventManager.addEventListener(this.hot.rootElement, 'mouseover', (function(e) {
	      return $__5.onMouseOver(e);
	    }));
	    this.eventManager.addEventListener(this.hot.rootElement, 'mousedown', (function(e) {
	      return $__5.onMouseDown(e);
	    }));
	    this.eventManager.addEventListener(window, 'mousemove', (function(e) {
	      return $__5.onMouseMove(e);
	    }));
	    this.eventManager.addEventListener(window, 'mouseup', (function(e) {
	      return $__5.onMouseUp(e);
	    }));
	  },
	  setManualSize: function(column, width) {
	    width = Math.max(width, 20);
	    column = this.hot.runHooks('modifyCol', column);
	    this.manualColumnWidths[column] = width;
	    return width;
	  },
	  onModifyColWidth: function(width, column) {
	    if (this.enabled) {
	      column = this.hot.runHooks('modifyCol', column);
	      if (this.hot.getSettings().manualColumnResize && this.manualColumnWidths[column]) {
	        return this.manualColumnWidths[column];
	      }
	    }
	    return width;
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('manualColumnResize', ManualColumnResize);

	//# 
	},{"_base.js":56,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],77:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ManualRowMove: {get: function() {
	      return ManualRowMove;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_plugins__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    hasClass = $__0.hasClass,
	    removeClass = $__0.removeClass;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    pageX = $__2.pageX,
	    pageY = $__2.pageY;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	;
	function ManualRowMove() {
	  var startRow,
	      endRow,
	      startY,
	      startOffset,
	      currentRow,
	      currentTH,
	      handle = document.createElement('DIV'),
	      guide = document.createElement('DIV'),
	      eventManager = eventManagerObject(this);
	  handle.className = 'manualRowMover';
	  guide.className = 'manualRowMoverGuide';
	  var saveManualRowPositions = function() {
	    var instance = this;
	    Handsontable.hooks.run(instance, 'persistentStateSave', 'manualRowPositions', instance.manualRowPositions);
	  };
	  var loadManualRowPositions = function() {
	    var instance = this,
	        storedState = {};
	    Handsontable.hooks.run(instance, 'persistentStateLoad', 'manualRowPositions', storedState);
	    return storedState.value;
	  };
	  function setupHandlePosition(TH) {
	    var instance = this;
	    currentTH = TH;
	    var row = this.view.wt.wtTable.getCoords(TH).row;
	    if (row >= 0) {
	      currentRow = row;
	      var box = currentTH.getBoundingClientRect();
	      startOffset = box.top;
	      handle.style.top = startOffset + 'px';
	      handle.style.left = box.left + 'px';
	      instance.rootElement.appendChild(handle);
	    }
	  }
	  function refreshHandlePosition(TH, delta) {
	    var box = TH.getBoundingClientRect();
	    var handleHeight = 6;
	    if (delta > 0) {
	      handle.style.top = (box.top + box.height - handleHeight) + 'px';
	    } else {
	      handle.style.top = box.top + 'px';
	    }
	  }
	  function setupGuidePosition() {
	    var instance = this;
	    addClass(handle, 'active');
	    addClass(guide, 'active');
	    var box = currentTH.getBoundingClientRect();
	    guide.style.width = instance.view.maximumVisibleElementWidth(0) + 'px';
	    guide.style.height = box.height + 'px';
	    guide.style.top = startOffset + 'px';
	    guide.style.left = handle.style.left;
	    instance.rootElement.appendChild(guide);
	  }
	  function refreshGuidePosition(diff) {
	    guide.style.top = startOffset + diff + 'px';
	  }
	  function hideHandleAndGuide() {
	    removeClass(handle, 'active');
	    removeClass(guide, 'active');
	  }
	  var checkRowHeader = function(element) {
	    if (element.tagName != 'BODY') {
	      if (element.parentNode.tagName == 'TBODY') {
	        return true;
	      } else {
	        element = element.parentNode;
	        return checkRowHeader(element);
	      }
	    }
	    return false;
	  };
	  var getTHFromTargetElement = function(element) {
	    if (element.tagName != 'TABLE') {
	      if (element.tagName == 'TH') {
	        return element;
	      } else {
	        return getTHFromTargetElement(element.parentNode);
	      }
	    }
	    return null;
	  };
	  var bindEvents = function() {
	    var instance = this;
	    var pressed;
	    eventManager.addEventListener(instance.rootElement, 'mouseover', function(e) {
	      if (checkRowHeader(e.target)) {
	        var th = getTHFromTargetElement(e.target);
	        if (th) {
	          if (pressed) {
	            endRow = instance.view.wt.wtTable.getCoords(th).row;
	            refreshHandlePosition(th, endRow - startRow);
	          } else {
	            setupHandlePosition.call(instance, th);
	          }
	        }
	      }
	    });
	    eventManager.addEventListener(instance.rootElement, 'mousedown', function(e) {
	      if (hasClass(e.target, 'manualRowMover')) {
	        startY = pageY(e);
	        setupGuidePosition.call(instance);
	        pressed = instance;
	        startRow = currentRow;
	        endRow = currentRow;
	      }
	    });
	    eventManager.addEventListener(window, 'mousemove', function(e) {
	      if (pressed) {
	        refreshGuidePosition(pageY(e) - startY);
	      }
	    });
	    eventManager.addEventListener(window, 'mouseup', function(e) {
	      if (pressed) {
	        hideHandleAndGuide();
	        pressed = false;
	        createPositionData(instance.manualRowPositions, instance.countRows());
	        instance.manualRowPositions.splice(endRow, 0, instance.manualRowPositions.splice(startRow, 1)[0]);
	        Handsontable.hooks.run(instance, 'beforeRowMove', startRow, endRow);
	        instance.forceFullRender = true;
	        instance.view.render();
	        saveManualRowPositions.call(instance);
	        Handsontable.hooks.run(instance, 'afterRowMove', startRow, endRow);
	        setupHandlePosition.call(instance, currentTH);
	      }
	    });
	    instance.addHook('afterDestroy', unbindEvents);
	  };
	  var unbindEvents = function() {
	    eventManager.clear();
	  };
	  var createPositionData = function(positionArr, len) {
	    if (positionArr.length < len) {
	      for (var i = positionArr.length; i < len; i++) {
	        positionArr[i] = i;
	      }
	    }
	  };
	  this.beforeInit = function() {
	    this.manualRowPositions = [];
	  };
	  this.init = function(source) {
	    var instance = this;
	    var manualRowMoveEnabled = !!(instance.getSettings().manualRowMove);
	    if (manualRowMoveEnabled) {
	      var initialManualRowPositions = instance.getSettings().manualRowMove;
	      var loadedManualRowPostions = loadManualRowPositions.call(instance);
	      if (typeof instance.manualRowPositionsPluginUsages === 'undefined') {
	        instance.manualRowPositionsPluginUsages = ['manualColumnMove'];
	      } else {
	        instance.manualRowPositionsPluginUsages.push('manualColumnMove');
	      }
	      if (typeof loadedManualRowPostions != 'undefined') {
	        this.manualRowPositions = loadedManualRowPostions;
	      } else if (Array.isArray(initialManualRowPositions)) {
	        this.manualRowPositions = initialManualRowPositions;
	      } else {
	        this.manualRowPositions = [];
	      }
	      if (source === 'afterInit' || source === 'afterUpdateSettings' && eventManager.context.eventListeners.length === 0) {
	        bindEvents.call(this);
	        if (this.manualRowPositions.length > 0) {
	          instance.forceFullRender = true;
	          instance.render();
	        }
	      }
	    } else {
	      var pluginUsagesIndex = instance.manualRowPositionsPluginUsages ? instance.manualRowPositionsPluginUsages.indexOf('manualColumnMove') : -1;
	      if (pluginUsagesIndex > -1) {
	        unbindEvents.call(this);
	        instance.manualRowPositions = [];
	        instance.manualRowPositionsPluginUsages[pluginUsagesIndex] = void 0;
	      }
	    }
	  };
	  this.modifyRow = function(row) {
	    var instance = this;
	    if (instance.getSettings().manualRowMove) {
	      if (typeof instance.manualRowPositions[row] === 'undefined') {
	        createPositionData(this.manualRowPositions, row + 1);
	      }
	      return instance.manualRowPositions[row];
	    }
	    return row;
	  };
	}
	var htManualRowMove = new ManualRowMove();
	Handsontable.hooks.add('beforeInit', htManualRowMove.beforeInit);
	Handsontable.hooks.add('afterInit', function() {
	  htManualRowMove.init.call(this, 'afterInit');
	});
	Handsontable.hooks.add('afterUpdateSettings', function() {
	  htManualRowMove.init.call(this, 'afterUpdateSettings');
	});
	Handsontable.hooks.add('modifyRow', htManualRowMove.modifyRow);
	Handsontable.hooks.register('beforeRowMove');
	Handsontable.hooks.register('afterRowMove');

	//# 
	},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],78:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ManualRowResize: {get: function() {
	      return ManualRowResize;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__95_base_46_js__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_plugins__;
	var BasePlugin = ($___46__46__47__95_base_46_js__ = require("_base.js"), $___46__46__47__95_base_46_js__ && $___46__46__47__95_base_46_js__.__esModule && $___46__46__47__95_base_46_js__ || {default: $___46__46__47__95_base_46_js__}).default;
	var $__1 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__1.addClass,
	    hasClass = $__1.hasClass,
	    removeClass = $__1.removeClass;
	var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;
	var $__3 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),
	    pageX = $__3.pageX,
	    pageY = $__3.pageY;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var ManualRowResize = function ManualRowResize(hotInstance) {
	  $traceurRuntime.superConstructor($ManualRowResize).call(this, hotInstance);
	  this.currentTH = null;
	  this.currentRow = null;
	  this.currentHeight = null;
	  this.newSize = null;
	  this.startY = null;
	  this.startHeight = null;
	  this.startOffset = null;
	  this.handle = document.createElement('DIV');
	  this.guide = document.createElement('DIV');
	  this.eventManager = eventManagerObject(this);
	  this.pressed = null;
	  this.dblclick = 0;
	  this.autoresizeTimeout = null;
	  this.manualRowHeights = [];
	  addClass(this.handle, 'manualRowResizer');
	  addClass(this.guide, 'manualRowResizerGuide');
	};
	var $ManualRowResize = ManualRowResize;
	($traceurRuntime.createClass)(ManualRowResize, {
	  isEnabled: function() {
	    return this.hot.getSettings().manualRowResize;
	  },
	  enablePlugin: function() {
	    var $__5 = this;
	    if (this.enabled) {
	      return;
	    }
	    this.manualRowHeights = [];
	    var initialRowHeights = this.hot.getSettings().manualRowResize;
	    var loadedManualRowHeights = this.loadManualRowHeights();
	    if (typeof loadedManualRowHeights != 'undefined') {
	      this.manualRowHeights = loadedManualRowHeights;
	    } else if (Array.isArray(initialRowHeights)) {
	      this.manualRowHeights = initialRowHeights;
	    } else {
	      this.manualRowHeights = [];
	    }
	    this.addHook('modifyRowHeight', (function(height, row) {
	      return $__5.onModifyRowHeight(height, row);
	    }));
	    Handsontable.hooks.register('beforeRowResize');
	    Handsontable.hooks.register('afterRowResize');
	    this.bindEvents();
	    $traceurRuntime.superGet(this, $ManualRowResize.prototype, "enablePlugin").call(this);
	  },
	  updatePlugin: function() {
	    var initialRowHeights = this.hot.getSettings().manualRowResize;
	    if (Array.isArray(initialRowHeights)) {
	      this.manualRowHeights = initialRowHeights;
	    } else {
	      this.manualRowHeights = [];
	    }
	  },
	  disablePlugin: function() {
	    $traceurRuntime.superGet(this, $ManualRowResize.prototype, "disablePlugin").call(this);
	  },
	  saveManualRowHeights: function() {
	    this.hot.runHooks('persistentStateSave', 'manualRowHeights', this.manualRowHeights);
	  },
	  loadManualRowHeights: function() {
	    var storedState = {};
	    this.hot.runHooks('persistentStateLoad', 'manualRowHeights', storedState);
	    return storedState.value;
	  },
	  setupHandlePosition: function(TH) {
	    this.currentTH = TH;
	    var row = this.hot.view.wt.wtTable.getCoords(TH).row;
	    if (row >= 0) {
	      var box = this.currentTH.getBoundingClientRect();
	      this.currentRow = row;
	      this.startOffset = box.top - 6;
	      this.startHeight = parseInt(box.height, 10);
	      this.handle.style.left = box.left + 'px';
	      this.handle.style.top = this.startOffset + this.startHeight + 'px';
	      this.hot.rootElement.appendChild(this.handle);
	    }
	  },
	  refreshHandlePosition: function() {
	    this.handle.style.top = this.startOffset + this.currentHeight + 'px';
	  },
	  setupGuidePosition: function() {
	    addClass(this.handle, 'active');
	    addClass(this.guide, 'active');
	    this.guide.style.top = this.handle.style.top;
	    this.guide.style.left = this.handle.style.left;
	    this.guide.style.width = this.hot.view.maximumVisibleElementWidth(0) + 'px';
	    this.hot.rootElement.appendChild(this.guide);
	  },
	  refreshGuidePosition: function() {
	    this.guide.style.top = this.handle.style.top;
	  },
	  hideHandleAndGuide: function() {
	    removeClass(this.handle, 'active');
	    removeClass(this.guide, 'active');
	  },
	  checkIfRowHeader: function(element) {
	    if (element.tagName != 'BODY') {
	      if (element.parentNode.tagName == 'TBODY') {
	        return true;
	      } else {
	        element = element.parentNode;
	        return this.checkIfRowHeader(element);
	      }
	    }
	    return false;
	  },
	  getTHFromTargetElement: function(element) {
	    if (element.tagName != 'TABLE') {
	      if (element.tagName == 'TH') {
	        return element;
	      } else {
	        return this.getTHFromTargetElement(element.parentNode);
	      }
	    }
	    return null;
	  },
	  onMouseOver: function(event) {
	    if (this.checkIfRowHeader(event.target)) {
	      var th = this.getTHFromTargetElement(event.target);
	      if (th) {
	        if (!this.pressed) {
	          this.setupHandlePosition(th);
	        }
	      }
	    }
	  },
	  afterMouseDownTimeout: function() {
	    if (this.dblclick >= 2) {
	      var hookNewSize = this.hot.runHooks('beforeRowResize', this.currentRow, this.newSize, true);
	      if (hookNewSize !== void 0) {
	        this.newSize = hookNewSize;
	      }
	      this.setManualSize(this.currentRow, this.newSize);
	      this.hot.forceFullRender = true;
	      this.hot.view.render();
	      this.hot.view.wt.wtOverlays.adjustElementsSize(true);
	      this.hot.runHooks('afterRowResize', this.currentRow, this.newSize, true);
	    }
	    this.dblclick = 0;
	    this.autoresizeTimeout = null;
	  },
	  onMouseDown: function(event) {
	    var $__5 = this;
	    if (hasClass(event.target, 'manualRowResizer')) {
	      this.setupGuidePosition();
	      this.pressed = this.hot;
	      if (this.autoresizeTimeout == null) {
	        this.autoresizeTimeout = setTimeout((function() {
	          return $__5.afterMouseDownTimeout();
	        }), 500);
	        this.hot._registerTimeout(this.autoresizeTimeout);
	      }
	      this.dblclick++;
	      this.startY = pageY(event);
	      this.newSize = this.startHeight;
	    }
	  },
	  onMouseMove: function(event) {
	    if (this.pressed) {
	      this.currentHeight = this.startHeight + (pageY(event) - this.startY);
	      this.newSize = this.setManualSize(this.currentRow, this.currentHeight);
	      this.refreshHandlePosition();
	      this.refreshGuidePosition();
	    }
	  },
	  onMouseUp: function(event) {
	    if (this.pressed) {
	      this.hideHandleAndGuide();
	      this.pressed = false;
	      if (this.newSize != this.startHeight) {
	        this.hot.runHooks('beforeRowResize', this.currentRow, this.newSize);
	        this.hot.forceFullRender = true;
	        this.hot.view.render();
	        this.hot.view.wt.wtOverlays.adjustElementsSize(true);
	        this.saveManualRowHeights();
	        this.hot.runHooks('afterRowResize', this.currentRow, this.newSize);
	      }
	      this.setupHandlePosition(this.currentTH);
	    }
	  },
	  bindEvents: function() {
	    var $__5 = this;
	    this.eventManager.addEventListener(this.hot.rootElement, 'mouseover', (function(e) {
	      return $__5.onMouseOver(e);
	    }));
	    this.eventManager.addEventListener(this.hot.rootElement, 'mousedown', (function(e) {
	      return $__5.onMouseDown(e);
	    }));
	    this.eventManager.addEventListener(window, 'mousemove', (function(e) {
	      return $__5.onMouseMove(e);
	    }));
	    this.eventManager.addEventListener(window, 'mouseup', (function(e) {
	      return $__5.onMouseUp(e);
	    }));
	  },
	  setManualSize: function(row, height) {
	    row = this.hot.runHooks('modifyRow', row);
	    this.manualRowHeights[row] = height;
	    return height;
	  },
	  onModifyRowHeight: function(height, row) {
	    if (this.enabled) {
	      var autoRowSizePlugin = this.hot.getPlugin('autoRowSize');
	      var autoRowHeightResult = autoRowSizePlugin ? autoRowSizePlugin.heights[row] : null;
	      row = this.hot.runHooks('modifyRow', row);
	      var manualRowHeight = this.manualRowHeights[row];
	      if (manualRowHeight !== void 0 && (manualRowHeight === autoRowHeightResult || manualRowHeight > (height || 0))) {
	        return manualRowHeight;
	      }
	    }
	    return height;
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('manualRowResize', ManualRowResize);

	//# 
	},{"_base.js":56,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],79:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  MergeCells: {get: function() {
	      return MergeCells;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_plugins__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__,
	    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;
	var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;
	var WalkontableTable = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ = require("3rdparty/walkontable/src/table"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__}).WalkontableTable;
	;
	function CellInfoCollection() {
	  var collection = [];
	  collection.getInfo = function(row, col) {
	    for (var i = 0,
	        ilen = this.length; i < ilen; i++) {
	      if (this[i].row <= row && this[i].row + this[i].rowspan - 1 >= row && this[i].col <= col && this[i].col + this[i].colspan - 1 >= col) {
	        return this[i];
	      }
	    }
	  };
	  collection.setInfo = function(info) {
	    for (var i = 0,
	        ilen = this.length; i < ilen; i++) {
	      if (this[i].row === info.row && this[i].col === info.col) {
	        this[i] = info;
	        return;
	      }
	    }
	    this.push(info);
	  };
	  collection.removeInfo = function(row, col) {
	    for (var i = 0,
	        ilen = this.length; i < ilen; i++) {
	      if (this[i].row === row && this[i].col === col) {
	        this.splice(i, 1);
	        break;
	      }
	    }
	  };
	  return collection;
	}
	function MergeCells(mergeCellsSetting) {
	  this.mergedCellInfoCollection = new CellInfoCollection();
	  if (Array.isArray(mergeCellsSetting)) {
	    for (var i = 0,
	        ilen = mergeCellsSetting.length; i < ilen; i++) {
	      this.mergedCellInfoCollection.setInfo(mergeCellsSetting[i]);
	    }
	  }
	}
	MergeCells.prototype.canMergeRange = function(cellRange) {
	  return !cellRange.isSingle();
	};
	MergeCells.prototype.mergeRange = function(cellRange) {
	  if (!this.canMergeRange(cellRange)) {
	    return;
	  }
	  var topLeft = cellRange.getTopLeftCorner();
	  var bottomRight = cellRange.getBottomRightCorner();
	  var mergeParent = {};
	  mergeParent.row = topLeft.row;
	  mergeParent.col = topLeft.col;
	  mergeParent.rowspan = bottomRight.row - topLeft.row + 1;
	  mergeParent.colspan = bottomRight.col - topLeft.col + 1;
	  this.mergedCellInfoCollection.setInfo(mergeParent);
	};
	MergeCells.prototype.mergeOrUnmergeSelection = function(cellRange) {
	  var info = this.mergedCellInfoCollection.getInfo(cellRange.from.row, cellRange.from.col);
	  if (info) {
	    this.unmergeSelection(cellRange.from);
	  } else {
	    this.mergeSelection(cellRange);
	  }
	};
	MergeCells.prototype.mergeSelection = function(cellRange) {
	  this.mergeRange(cellRange);
	};
	MergeCells.prototype.unmergeSelection = function(cellRange) {
	  var info = this.mergedCellInfoCollection.getInfo(cellRange.row, cellRange.col);
	  this.mergedCellInfoCollection.removeInfo(info.row, info.col);
	};
	MergeCells.prototype.applySpanProperties = function(TD, row, col) {
	  var info = this.mergedCellInfoCollection.getInfo(row, col);
	  if (info) {
	    if (info.row === row && info.col === col) {
	      TD.setAttribute('rowspan', info.rowspan);
	      TD.setAttribute('colspan', info.colspan);
	    } else {
	      TD.removeAttribute('rowspan');
	      TD.removeAttribute('colspan');
	      TD.style.display = 'none';
	    }
	  } else {
	    TD.removeAttribute('rowspan');
	    TD.removeAttribute('colspan');
	  }
	};
	MergeCells.prototype.modifyTransform = function(hook, currentSelectedRange, delta) {
	  var sameRowspan = function(merged, coords) {
	    if (coords.row >= merged.row && coords.row <= (merged.row + merged.rowspan - 1)) {
	      return true;
	    }
	    return false;
	  },
	      sameColspan = function(merged, coords) {
	        if (coords.col >= merged.col && coords.col <= (merged.col + merged.colspan - 1)) {
	          return true;
	        }
	        return false;
	      },
	      getNextPosition = function(newDelta) {
	        return new WalkontableCellCoords(currentSelectedRange.to.row + newDelta.row, currentSelectedRange.to.col + newDelta.col);
	      };
	  var newDelta = {
	    row: delta.row,
	    col: delta.col
	  };
	  if (hook == 'modifyTransformStart') {
	    if (!this.lastDesiredCoords) {
	      this.lastDesiredCoords = new WalkontableCellCoords(null, null);
	    }
	    var currentPosition = new WalkontableCellCoords(currentSelectedRange.highlight.row, currentSelectedRange.highlight.col),
	        mergedParent = this.mergedCellInfoCollection.getInfo(currentPosition.row, currentPosition.col),
	        currentRangeContainsMerge;
	    for (var i = 0,
	        mergesLength = this.mergedCellInfoCollection.length; i < mergesLength; i++) {
	      var range = this.mergedCellInfoCollection[i];
	      range = new WalkontableCellCoords(range.row + range.rowspan - 1, range.col + range.colspan - 1);
	      if (currentSelectedRange.includes(range)) {
	        currentRangeContainsMerge = true;
	        break;
	      }
	    }
	    if (mergedParent) {
	      var mergeTopLeft = new WalkontableCellCoords(mergedParent.row, mergedParent.col),
	          mergeBottomRight = new WalkontableCellCoords(mergedParent.row + mergedParent.rowspan - 1, mergedParent.col + mergedParent.colspan - 1),
	          mergeRange = new WalkontableCellRange(mergeTopLeft, mergeTopLeft, mergeBottomRight);
	      if (!mergeRange.includes(this.lastDesiredCoords)) {
	        this.lastDesiredCoords = new WalkontableCellCoords(null, null);
	      }
	      newDelta.row = this.lastDesiredCoords.row ? this.lastDesiredCoords.row - currentPosition.row : newDelta.row;
	      newDelta.col = this.lastDesiredCoords.col ? this.lastDesiredCoords.col - currentPosition.col : newDelta.col;
	      if (delta.row > 0) {
	        newDelta.row = mergedParent.row + mergedParent.rowspan - 1 - currentPosition.row + delta.row;
	      } else if (delta.row < 0) {
	        newDelta.row = currentPosition.row - mergedParent.row + delta.row;
	      }
	      if (delta.col > 0) {
	        newDelta.col = mergedParent.col + mergedParent.colspan - 1 - currentPosition.col + delta.col;
	      } else if (delta.col < 0) {
	        newDelta.col = currentPosition.col - mergedParent.col + delta.col;
	      }
	    }
	    var nextPosition = new WalkontableCellCoords(currentSelectedRange.highlight.row + newDelta.row, currentSelectedRange.highlight.col + newDelta.col),
	        nextParentIsMerged = this.mergedCellInfoCollection.getInfo(nextPosition.row, nextPosition.col);
	    if (nextParentIsMerged) {
	      this.lastDesiredCoords = nextPosition;
	      newDelta = {
	        row: nextParentIsMerged.row - currentPosition.row,
	        col: nextParentIsMerged.col - currentPosition.col
	      };
	    }
	  } else if (hook == 'modifyTransformEnd') {
	    for (var i = 0,
	        mergesLength = this.mergedCellInfoCollection.length; i < mergesLength; i++) {
	      var currentMerge = this.mergedCellInfoCollection[i],
	          mergeTopLeft = new WalkontableCellCoords(currentMerge.row, currentMerge.col),
	          mergeBottomRight = new WalkontableCellCoords(currentMerge.row + currentMerge.rowspan - 1, currentMerge.col + currentMerge.colspan - 1),
	          mergedRange = new WalkontableCellRange(mergeTopLeft, mergeTopLeft, mergeBottomRight),
	          sharedBorders = currentSelectedRange.getBordersSharedWith(mergedRange);
	      if (mergedRange.isEqual(currentSelectedRange)) {
	        currentSelectedRange.setDirection('NW-SE');
	      } else if (sharedBorders.length > 0) {
	        var mergeHighlighted = (currentSelectedRange.highlight.isEqual(mergedRange.from));
	        if (sharedBorders.indexOf('top') > -1) {
	          if (currentSelectedRange.to.isSouthEastOf(mergedRange.from) && mergeHighlighted) {
	            currentSelectedRange.setDirection('NW-SE');
	          } else if (currentSelectedRange.to.isSouthWestOf(mergedRange.from) && mergeHighlighted) {
	            currentSelectedRange.setDirection('NE-SW');
	          }
	        } else if (sharedBorders.indexOf('bottom') > -1) {
	          if (currentSelectedRange.to.isNorthEastOf(mergedRange.from) && mergeHighlighted) {
	            currentSelectedRange.setDirection('SW-NE');
	          } else if (currentSelectedRange.to.isNorthWestOf(mergedRange.from) && mergeHighlighted) {
	            currentSelectedRange.setDirection('SE-NW');
	          }
	        }
	      }
	      var nextPosition = getNextPosition(newDelta),
	          withinRowspan = sameRowspan(currentMerge, nextPosition),
	          withinColspan = sameColspan(currentMerge, nextPosition);
	      if (currentSelectedRange.includesRange(mergedRange) && (mergedRange.includes(nextPosition) || withinRowspan || withinColspan)) {
	        if (withinRowspan) {
	          if (newDelta.row < 0) {
	            newDelta.row -= currentMerge.rowspan - 1;
	          } else if (newDelta.row > 0) {
	            newDelta.row += currentMerge.rowspan - 1;
	          }
	        }
	        if (withinColspan) {
	          if (newDelta.col < 0) {
	            newDelta.col -= currentMerge.colspan - 1;
	          } else if (newDelta.col > 0) {
	            newDelta.col += currentMerge.colspan - 1;
	          }
	        }
	      }
	    }
	  }
	  if (newDelta.row !== 0) {
	    delta.row = newDelta.row;
	  }
	  if (newDelta.col !== 0) {
	    delta.col = newDelta.col;
	  }
	};
	MergeCells.prototype.shiftCollection = function(direction, index, count) {
	  var shiftVector = [0, 0];
	  switch (direction) {
	    case 'right':
	      shiftVector[0] += 1;
	      break;
	    case 'left':
	      shiftVector[0] -= 1;
	      break;
	    case 'down':
	      shiftVector[1] += 1;
	      break;
	    case 'up':
	      shiftVector[1] -= 1;
	      break;
	  }
	  for (var i = 0; i < this.mergedCellInfoCollection.length; i++) {
	    var currentMerge = this.mergedCellInfoCollection[i];
	    if (direction === 'right' || direction === 'left') {
	      if (index <= currentMerge.col) {
	        currentMerge.col += shiftVector[0];
	      }
	    } else {
	      if (index <= currentMerge.row) {
	        currentMerge.row += shiftVector[1];
	      }
	    }
	  }
	};
	var beforeInit = function() {
	  var instance = this;
	  var mergeCellsSetting = instance.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    if (!instance.mergeCells) {
	      instance.mergeCells = new MergeCells(mergeCellsSetting);
	    }
	  }
	};
	var afterInit = function() {
	  var instance = this;
	  if (instance.mergeCells) {
	    instance.view.wt.wtTable.getCell = function(coords) {
	      if (instance.getSettings().mergeCells) {
	        var mergeParent = instance.mergeCells.mergedCellInfoCollection.getInfo(coords.row, coords.col);
	        if (mergeParent) {
	          coords = mergeParent;
	        }
	      }
	      return WalkontableTable.prototype.getCell.call(this, coords);
	    };
	  }
	};
	var afterUpdateSettings = function() {
	  var instance = this;
	  var mergeCellsSetting = instance.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    if (instance.mergeCells) {
	      instance.mergeCells.mergedCellInfoCollection = new CellInfoCollection();
	      if (Array.isArray(mergeCellsSetting)) {
	        for (var i = 0,
	            ilen = mergeCellsSetting.length; i < ilen; i++) {
	          instance.mergeCells.mergedCellInfoCollection.setInfo(mergeCellsSetting[i]);
	        }
	      }
	    } else {
	      instance.mergeCells = new MergeCells(mergeCellsSetting);
	    }
	  } else {
	    if (instance.mergeCells) {
	      instance.mergeCells.mergedCellInfoCollection = new CellInfoCollection();
	    }
	  }
	};
	var onBeforeKeyDown = function(event) {
	  if (!this.mergeCells) {
	    return;
	  }
	  var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;
	  if (ctrlDown) {
	    if (event.keyCode === 77) {
	      this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange());
	      this.render();
	      stopImmediatePropagation(event);
	    }
	  }
	};
	var addMergeActionsToContextMenu = function(defaultOptions) {
	  if (!this.getSettings().mergeCells) {
	    return;
	  }
	  defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR);
	  defaultOptions.items.push({
	    key: 'mergeCells',
	    name: function() {
	      var sel = this.getSelected();
	      var info = this.mergeCells.mergedCellInfoCollection.getInfo(sel[0], sel[1]);
	      if (info) {
	        return 'Unmerge cells';
	      } else {
	        return 'Merge cells';
	      }
	    },
	    callback: function() {
	      this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange());
	      this.render();
	    },
	    disabled: function() {
	      return false;
	    }
	  });
	};
	var afterRenderer = function(TD, row, col, prop, value, cellProperties) {
	  if (this.mergeCells) {
	    this.mergeCells.applySpanProperties(TD, row, col);
	  }
	};
	var modifyTransformFactory = function(hook) {
	  return function(delta) {
	    var mergeCellsSetting = this.getSettings().mergeCells;
	    if (mergeCellsSetting) {
	      var currentSelectedRange = this.getSelectedRange();
	      this.mergeCells.modifyTransform(hook, currentSelectedRange, delta);
	      if (hook === 'modifyTransformEnd') {
	        var totalRows = this.countRows();
	        var totalCols = this.countCols();
	        if (currentSelectedRange.from.row < 0) {
	          currentSelectedRange.from.row = 0;
	        } else if (currentSelectedRange.from.row > 0 && currentSelectedRange.from.row >= totalRows) {
	          currentSelectedRange.from.row = currentSelectedRange.from - 1;
	        }
	        if (currentSelectedRange.from.col < 0) {
	          currentSelectedRange.from.col = 0;
	        } else if (currentSelectedRange.from.col > 0 && currentSelectedRange.from.col >= totalCols) {
	          currentSelectedRange.from.col = totalCols - 1;
	        }
	      }
	    }
	  };
	};
	var beforeSetRangeEnd = function(coords) {
	  this.lastDesiredCoords = null;
	  var mergeCellsSetting = this.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    var selRange = this.getSelectedRange();
	    selRange.highlight = new WalkontableCellCoords(selRange.highlight.row, selRange.highlight.col);
	    selRange.to = coords;
	    var rangeExpanded = false;
	    do {
	      rangeExpanded = false;
	      for (var i = 0,
	          ilen = this.mergeCells.mergedCellInfoCollection.length; i < ilen; i++) {
	        var cellInfo = this.mergeCells.mergedCellInfoCollection[i];
	        var mergedCellTopLeft = new WalkontableCellCoords(cellInfo.row, cellInfo.col);
	        var mergedCellBottomRight = new WalkontableCellCoords(cellInfo.row + cellInfo.rowspan - 1, cellInfo.col + cellInfo.colspan - 1);
	        var mergedCellRange = new WalkontableCellRange(mergedCellTopLeft, mergedCellTopLeft, mergedCellBottomRight);
	        if (selRange.expandByRange(mergedCellRange)) {
	          coords.row = selRange.to.row;
	          coords.col = selRange.to.col;
	          rangeExpanded = true;
	        }
	      }
	    } while (rangeExpanded);
	  }
	};
	var beforeDrawAreaBorders = function(corners, className) {
	  if (className && className == 'area') {
	    var mergeCellsSetting = this.getSettings().mergeCells;
	    if (mergeCellsSetting) {
	      var selRange = this.getSelectedRange();
	      var startRange = new WalkontableCellRange(selRange.from, selRange.from, selRange.from);
	      var stopRange = new WalkontableCellRange(selRange.to, selRange.to, selRange.to);
	      for (var i = 0,
	          ilen = this.mergeCells.mergedCellInfoCollection.length; i < ilen; i++) {
	        var cellInfo = this.mergeCells.mergedCellInfoCollection[i];
	        var mergedCellTopLeft = new WalkontableCellCoords(cellInfo.row, cellInfo.col);
	        var mergedCellBottomRight = new WalkontableCellCoords(cellInfo.row + cellInfo.rowspan - 1, cellInfo.col + cellInfo.colspan - 1);
	        var mergedCellRange = new WalkontableCellRange(mergedCellTopLeft, mergedCellTopLeft, mergedCellBottomRight);
	        if (startRange.expandByRange(mergedCellRange)) {
	          corners[0] = startRange.from.row;
	          corners[1] = startRange.from.col;
	        }
	        if (stopRange.expandByRange(mergedCellRange)) {
	          corners[2] = stopRange.from.row;
	          corners[3] = stopRange.from.col;
	        }
	      }
	    }
	  }
	};
	var afterGetCellMeta = function(row, col, cellProperties) {
	  var mergeCellsSetting = this.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    var mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(row, col);
	    if (mergeParent && (mergeParent.row != row || mergeParent.col != col)) {
	      cellProperties.copyable = false;
	    }
	  }
	};
	var afterViewportRowCalculatorOverride = function(calc) {
	  var mergeCellsSetting = this.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    var colCount = this.countCols();
	    var mergeParent;
	    for (var c = 0; c < colCount; c++) {
	      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(calc.startRow, c);
	      if (mergeParent) {
	        if (mergeParent.row < calc.startRow) {
	          calc.startRow = mergeParent.row;
	          return afterViewportRowCalculatorOverride.call(this, calc);
	        }
	      }
	      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(calc.endRow, c);
	      if (mergeParent) {
	        var mergeEnd = mergeParent.row + mergeParent.rowspan - 1;
	        if (mergeEnd > calc.endRow) {
	          calc.endRow = mergeEnd;
	          return afterViewportRowCalculatorOverride.call(this, calc);
	        }
	      }
	    }
	  }
	};
	var afterViewportColumnCalculatorOverride = function(calc) {
	  var mergeCellsSetting = this.getSettings().mergeCells;
	  if (mergeCellsSetting) {
	    var rowCount = this.countRows();
	    var mergeParent;
	    for (var r = 0; r < rowCount; r++) {
	      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(r, calc.startColumn);
	      if (mergeParent) {
	        if (mergeParent.col < calc.startColumn) {
	          calc.startColumn = mergeParent.col;
	          return afterViewportColumnCalculatorOverride.call(this, calc);
	        }
	      }
	      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(r, calc.endColumn);
	      if (mergeParent) {
	        var mergeEnd = mergeParent.col + mergeParent.colspan - 1;
	        if (mergeEnd > calc.endColumn) {
	          calc.endColumn = mergeEnd;
	          return afterViewportColumnCalculatorOverride.call(this, calc);
	        }
	      }
	    }
	  }
	};
	var isMultipleSelection = function(isMultiple) {
	  if (isMultiple && this.mergeCells) {
	    var mergedCells = this.mergeCells.mergedCellInfoCollection,
	        selectionRange = this.getSelectedRange();
	    for (var group in mergedCells) {
	      if (selectionRange.highlight.row == mergedCells[group].row && selectionRange.highlight.col == mergedCells[group].col && selectionRange.to.row == mergedCells[group].row + mergedCells[group].rowspan - 1 && selectionRange.to.col == mergedCells[group].col + mergedCells[group].colspan - 1) {
	        return false;
	      }
	    }
	  }
	  return isMultiple;
	};
	function afterAutofillApplyValues(select, drag) {
	  var mergeCellsSetting = this.getSettings().mergeCells;
	  if (!mergeCellsSetting || this.selection.isMultiple()) {
	    return;
	  }
	  var info = this.mergeCells.mergedCellInfoCollection.getInfo(select[0], select[1]);
	  if (info) {
	    select[0] = info.row;
	    select[1] = info.col;
	    select[2] = info.row + info.rowspan - 1;
	    select[3] = info.col + info.colspan - 1;
	  }
	}
	function onAfterCreateCol(col, count) {
	  if (this.mergeCells) {
	    this.mergeCells.shiftCollection('right', col, count);
	  }
	}
	function onAfterRemoveCol(col, count) {
	  if (this.mergeCells) {
	    this.mergeCells.shiftCollection('left', col, count);
	  }
	}
	function onAfterCreateRow(row, count) {
	  if (this.mergeCells) {
	    this.mergeCells.shiftCollection('down', row, count);
	  }
	}
	function onAfterRemoveRow(row, count) {
	  if (this.mergeCells) {
	    this.mergeCells.shiftCollection('up', row, count);
	  }
	}
	Handsontable.hooks.add('beforeInit', beforeInit);
	Handsontable.hooks.add('afterInit', afterInit);
	Handsontable.hooks.add('afterUpdateSettings', afterUpdateSettings);
	Handsontable.hooks.add('beforeKeyDown', onBeforeKeyDown);
	Handsontable.hooks.add('modifyTransformStart', modifyTransformFactory('modifyTransformStart'));
	Handsontable.hooks.add('modifyTransformEnd', modifyTransformFactory('modifyTransformEnd'));
	Handsontable.hooks.add('beforeSetRangeEnd', beforeSetRangeEnd);
	Handsontable.hooks.add('beforeDrawBorders', beforeDrawAreaBorders);
	Handsontable.hooks.add('afterIsMultipleSelection', isMultipleSelection);
	Handsontable.hooks.add('afterRenderer', afterRenderer);
	Handsontable.hooks.add('afterContextMenuDefaultOptions', addMergeActionsToContextMenu);
	Handsontable.hooks.add('afterGetCellMeta', afterGetCellMeta);
	Handsontable.hooks.add('afterViewportRowCalculatorOverride', afterViewportRowCalculatorOverride);
	Handsontable.hooks.add('afterViewportColumnCalculatorOverride', afterViewportColumnCalculatorOverride);
	Handsontable.hooks.add('afterAutofillApplyValues', afterAutofillApplyValues);
	Handsontable.hooks.add('afterCreateCol', onAfterCreateCol);
	Handsontable.hooks.add('afterRemoveCol', onAfterRemoveCol);
	Handsontable.hooks.add('afterCreateRow', onAfterCreateRow);
	Handsontable.hooks.add('afterRemoveRow', onAfterRemoveRow);
	Handsontable.MergeCells = MergeCells;

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/table":20,"helpers/dom/event":45,"plugins":55}],80:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  MultipleSelectionHandles: {get: function() {
	      return MultipleSelectionHandles;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_eventManager__,
	    $___46__46__47__46__46__47_plugins__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    getWindowScrollTop = $__0.getWindowScrollTop,
	    hasClass = $__0.hasClass,
	    getWindowScrollLeft = $__0.getWindowScrollLeft;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var MultipleSelectionHandles = function MultipleSelectionHandles(hotInstance) {
	  $traceurRuntime.superConstructor($MultipleSelectionHandles).call(this, hotInstance);
	  this.dragged = [];
	  this.eventManager = null;
	  this.lastSetCell = null;
	};
	var $MultipleSelectionHandles = MultipleSelectionHandles;
	($traceurRuntime.createClass)(MultipleSelectionHandles, {
	  isEnabled: function() {
	    return Handsontable.mobileBrowser;
	  },
	  enablePlugin: function() {
	    if (this.enabled) {
	      return;
	    }
	    if (!this.eventManager) {
	      this.eventManager = new EventManager(this);
	    }
	    this.registerListeners();
	    $traceurRuntime.superGet(this, $MultipleSelectionHandles.prototype, "enablePlugin").call(this);
	  },
	  registerListeners: function() {
	    var _this = this;
	    function removeFromDragged(query) {
	      if (_this.dragged.length === 1) {
	        _this.dragged.splice(0, _this.dragged.length);
	        return true;
	      }
	      var entryPosition = _this.dragged.indexOf(query);
	      if (entryPosition == -1) {
	        return false;
	      } else if (entryPosition === 0) {
	        _this.dragged = _this.dragged.slice(0, 1);
	      } else if (entryPosition == 1) {
	        _this.dragged = _this.dragged.slice(-1);
	      }
	    }
	    this.eventManager.addEventListener(this.hot.rootElement, 'touchstart', function(event) {
	      var selectedRange;
	      if (hasClass(event.target, 'topLeftSelectionHandle-HitArea')) {
	        selectedRange = _this.hot.getSelectedRange();
	        _this.dragged.push('topLeft');
	        _this.touchStartRange = {
	          width: selectedRange.getWidth(),
	          height: selectedRange.getHeight(),
	          direction: selectedRange.getDirection()
	        };
	        event.preventDefault();
	        return false;
	      } else if (hasClass(event.target, 'bottomRightSelectionHandle-HitArea')) {
	        selectedRange = _this.hot.getSelectedRange();
	        _this.dragged.push('bottomRight');
	        _this.touchStartRange = {
	          width: selectedRange.getWidth(),
	          height: selectedRange.getHeight(),
	          direction: selectedRange.getDirection()
	        };
	        event.preventDefault();
	        return false;
	      }
	    });
	    this.eventManager.addEventListener(this.hot.rootElement, 'touchend', function(event) {
	      if (hasClass(event.target, 'topLeftSelectionHandle-HitArea')) {
	        removeFromDragged.call(_this, 'topLeft');
	        _this.touchStartRange = void 0;
	        event.preventDefault();
	        return false;
	      } else if (hasClass(event.target, 'bottomRightSelectionHandle-HitArea')) {
	        removeFromDragged.call(_this, 'bottomRight');
	        _this.touchStartRange = void 0;
	        event.preventDefault();
	        return false;
	      }
	    });
	    this.eventManager.addEventListener(this.hot.rootElement, 'touchmove', function(event) {
	      var scrollTop = getWindowScrollTop(),
	          scrollLeft = getWindowScrollLeft(),
	          endTarget,
	          targetCoords,
	          selectedRange,
	          rangeWidth,
	          rangeHeight,
	          rangeDirection,
	          newRangeCoords;
	      if (_this.dragged.length === 0) {
	        return;
	      }
	      endTarget = document.elementFromPoint(event.touches[0].screenX - scrollLeft, event.touches[0].screenY - scrollTop);
	      if (!endTarget || endTarget === _this.lastSetCell) {
	        return;
	      }
	      if (endTarget.nodeName == 'TD' || endTarget.nodeName == 'TH') {
	        targetCoords = _this.hot.getCoords(endTarget);
	        if (targetCoords.col == -1) {
	          targetCoords.col = 0;
	        }
	        selectedRange = _this.hot.getSelectedRange();
	        rangeWidth = selectedRange.getWidth();
	        rangeHeight = selectedRange.getHeight();
	        rangeDirection = selectedRange.getDirection();
	        if (rangeWidth == 1 && rangeHeight == 1) {
	          _this.hot.selection.setRangeEnd(targetCoords);
	        }
	        newRangeCoords = _this.getCurrentRangeCoords(selectedRange, targetCoords, _this.touchStartRange.direction, rangeDirection, _this.dragged[0]);
	        if (newRangeCoords.start !== null) {
	          _this.hot.selection.setRangeStart(newRangeCoords.start);
	        }
	        _this.hot.selection.setRangeEnd(newRangeCoords.end);
	        _this.lastSetCell = endTarget;
	      }
	      event.preventDefault();
	    });
	  },
	  getCurrentRangeCoords: function(selectedRange, currentTouch, touchStartDirection, currentDirection, draggedHandle) {
	    var topLeftCorner = selectedRange.getTopLeftCorner(),
	        bottomRightCorner = selectedRange.getBottomRightCorner(),
	        bottomLeftCorner = selectedRange.getBottomLeftCorner(),
	        topRightCorner = selectedRange.getTopRightCorner();
	    var newCoords = {
	      start: null,
	      end: null
	    };
	    switch (touchStartDirection) {
	      case 'NE-SW':
	        switch (currentDirection) {
	          case 'NE-SW':
	          case 'NW-SE':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: new WalkontableCellCoords(currentTouch.row, selectedRange.highlight.col),
	                end: new WalkontableCellCoords(bottomLeftCorner.row, currentTouch.col)
	              };
	            } else {
	              newCoords = {
	                start: new WalkontableCellCoords(selectedRange.highlight.row, currentTouch.col),
	                end: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col)
	              };
	            }
	            break;
	          case 'SE-NW':
	            if (draggedHandle == 'bottomRight') {
	              newCoords = {
	                start: new WalkontableCellCoords(bottomRightCorner.row, currentTouch.col),
	                end: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col)
	              };
	            }
	            break;
	        }
	        break;
	      case 'NW-SE':
	        switch (currentDirection) {
	          case 'NE-SW':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: currentTouch,
	                end: bottomLeftCorner
	              };
	            } else {
	              newCoords.end = currentTouch;
	            }
	            break;
	          case 'NW-SE':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: currentTouch,
	                end: bottomRightCorner
	              };
	            } else {
	              newCoords.end = currentTouch;
	            }
	            break;
	          case 'SE-NW':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: currentTouch,
	                end: topLeftCorner
	              };
	            } else {
	              newCoords.end = currentTouch;
	            }
	            break;
	          case 'SW-NE':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: currentTouch,
	                end: topRightCorner
	              };
	            } else {
	              newCoords.end = currentTouch;
	            }
	            break;
	        }
	        break;
	      case 'SW-NE':
	        switch (currentDirection) {
	          case 'NW-SE':
	            if (draggedHandle == 'bottomRight') {
	              newCoords = {
	                start: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col),
	                end: new WalkontableCellCoords(bottomLeftCorner.row, currentTouch.col)
	              };
	            } else {
	              newCoords = {
	                start: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col),
	                end: new WalkontableCellCoords(currentTouch.row, bottomRightCorner.col)
	              };
	            }
	            break;
	          case 'SW-NE':
	            if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: new WalkontableCellCoords(selectedRange.highlight.row, currentTouch.col),
	                end: new WalkontableCellCoords(currentTouch.row, bottomRightCorner.col)
	              };
	            } else {
	              newCoords = {
	                start: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col),
	                end: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col)
	              };
	            }
	            break;
	          case 'SE-NW':
	            if (draggedHandle == 'bottomRight') {
	              newCoords = {
	                start: new WalkontableCellCoords(currentTouch.row, topRightCorner.col),
	                end: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col)
	              };
	            } else if (draggedHandle == 'topLeft') {
	              newCoords = {
	                start: bottomLeftCorner,
	                end: currentTouch
	              };
	            }
	            break;
	        }
	        break;
	      case 'SE-NW':
	        switch (currentDirection) {
	          case 'NW-SE':
	          case 'NE-SW':
	          case 'SW-NE':
	            if (draggedHandle == 'topLeft') {
	              newCoords.end = currentTouch;
	            }
	            break;
	          case 'SE-NW':
	            if (draggedHandle == 'topLeft') {
	              newCoords.end = currentTouch;
	            } else {
	              newCoords = {
	                start: currentTouch,
	                end: topLeftCorner
	              };
	            }
	            break;
	        }
	        break;
	    }
	    return newCoords;
	  },
	  isDragged: function() {
	    return this.dragged.length > 0;
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('multipleSelectionHandles', MultipleSelectionHandles);

	//# 
	},{"_base":56,"eventManager":40,"helpers/dom/element":44,"plugins":55}],81:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  ObserveChanges: {get: function() {
	      return ObserveChanges;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_plugins__,
	    $__jsonpatch__;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var jsonpatch = ($__jsonpatch__ = require("jsonpatch"), $__jsonpatch__ && $__jsonpatch__.__esModule && $__jsonpatch__ || {default: $__jsonpatch__}).default;
	;
	function ObserveChanges() {}
	Handsontable.hooks.add('afterLoadData', init);
	Handsontable.hooks.add('afterUpdateSettings', init);
	Handsontable.hooks.register('afterChangesObserved');
	function init() {
	  var instance = this;
	  var pluginEnabled = instance.getSettings().observeChanges;
	  if (pluginEnabled) {
	    if (instance.observer) {
	      destroy.call(instance);
	    }
	    createObserver.call(instance);
	    bindEvents.call(instance);
	  } else if (!pluginEnabled) {
	    destroy.call(instance);
	  }
	}
	function createObserver() {
	  var instance = this;
	  instance.observeChangesActive = true;
	  instance.pauseObservingChanges = function() {
	    instance.observeChangesActive = false;
	  };
	  instance.resumeObservingChanges = function() {
	    instance.observeChangesActive = true;
	  };
	  instance.observedData = instance.getData();
	  instance.observer = jsonpatch.observe(instance.observedData, function(patches) {
	    if (instance.observeChangesActive) {
	      runHookForOperation.call(instance, patches);
	      instance.render();
	    }
	    instance.runHooks('afterChangesObserved');
	  });
	}
	function runHookForOperation(rawPatches) {
	  var instance = this;
	  var patches = cleanPatches(rawPatches);
	  for (var i = 0,
	      len = patches.length; i < len; i++) {
	    var patch = patches[i];
	    var parsedPath = parsePath(patch.path);
	    switch (patch.op) {
	      case 'add':
	        if (isNaN(parsedPath.col)) {
	          instance.runHooks('afterCreateRow', parsedPath.row);
	        } else {
	          instance.runHooks('afterCreateCol', parsedPath.col);
	        }
	        break;
	      case 'remove':
	        if (isNaN(parsedPath.col)) {
	          instance.runHooks('afterRemoveRow', parsedPath.row, 1);
	        } else {
	          instance.runHooks('afterRemoveCol', parsedPath.col, 1);
	        }
	        break;
	      case 'replace':
	        instance.runHooks('afterChange', [parsedPath.row, parsedPath.col, null, patch.value], 'external');
	        break;
	    }
	  }
	  function cleanPatches(rawPatches) {
	    var patches;
	    patches = removeLengthRelatedPatches(rawPatches);
	    patches = removeMultipleAddOrRemoveColPatches(patches);
	    return patches;
	  }
	  function removeMultipleAddOrRemoveColPatches(rawPatches) {
	    var newOrRemovedColumns = [];
	    return rawPatches.filter(function(patch) {
	      var parsedPath = parsePath(patch.path);
	      if (['add', 'remove'].indexOf(patch.op) != -1 && !isNaN(parsedPath.col)) {
	        if (newOrRemovedColumns.indexOf(parsedPath.col) != -1) {
	          return false;
	        } else {
	          newOrRemovedColumns.push(parsedPath.col);
	        }
	      }
	      return true;
	    });
	  }
	  function removeLengthRelatedPatches(rawPatches) {
	    return rawPatches.filter(function(patch) {
	      return !/[/]length/ig.test(patch.path);
	    });
	  }
	  function parsePath(path) {
	    var match = path.match(/^\/(\d+)\/?(.*)?$/);
	    return {
	      row: parseInt(match[1], 10),
	      col: /^\d*$/.test(match[2]) ? parseInt(match[2], 10) : match[2]
	    };
	  }
	}
	function destroy() {
	  var instance = this;
	  if (instance.observer) {
	    destroyObserver.call(instance);
	    unbindEvents.call(instance);
	  }
	}
	function destroyObserver() {
	  var instance = this;
	  jsonpatch.unobserve(instance.observedData, instance.observer);
	  delete instance.observedData;
	  delete instance.observeChangesActive;
	  delete instance.pauseObservingChanges;
	  delete instance.resumeObservingChanges;
	}
	function bindEvents() {
	  var instance = this;
	  instance.addHook('afterDestroy', destroy);
	  instance.addHook('afterCreateRow', afterTableAlter);
	  instance.addHook('afterRemoveRow', afterTableAlter);
	  instance.addHook('afterCreateCol', afterTableAlter);
	  instance.addHook('afterRemoveCol', afterTableAlter);
	  instance.addHook('afterChange', function(changes, source) {
	    if (source != 'loadData') {
	      afterTableAlter.call(this);
	    }
	  });
	}
	function unbindEvents() {
	  var instance = this;
	  instance.removeHook('afterDestroy', destroy);
	  instance.removeHook('afterCreateRow', afterTableAlter);
	  instance.removeHook('afterRemoveRow', afterTableAlter);
	  instance.removeHook('afterCreateCol', afterTableAlter);
	  instance.removeHook('afterRemoveCol', afterTableAlter);
	  instance.removeHook('afterChange', afterTableAlter);
	}
	function afterTableAlter() {
	  var instance = this;
	  instance.pauseObservingChanges();
	  instance.addHookOnce('afterChangesObserved', function() {
	    instance.resumeObservingChanges();
	  });
	}

	//# 
	},{"jsonpatch":"jsonpatch","plugins":55}],82:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  HandsontablePersistentState: {get: function() {
	      return HandsontablePersistentState;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_plugins__;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	;
	function Storage(prefix) {
	  var savedKeys;
	  var saveSavedKeys = function() {
	    window.localStorage[prefix + '__' + 'persistentStateKeys'] = JSON.stringify(savedKeys);
	  };
	  var loadSavedKeys = function() {
	    var keysJSON = window.localStorage[prefix + '__' + 'persistentStateKeys'];
	    var keys = typeof keysJSON == 'string' ? JSON.parse(keysJSON) : void 0;
	    savedKeys = keys ? keys : [];
	  };
	  var clearSavedKeys = function() {
	    savedKeys = [];
	    saveSavedKeys();
	  };
	  loadSavedKeys();
	  this.saveValue = function(key, value) {
	    window.localStorage[prefix + '_' + key] = JSON.stringify(value);
	    if (savedKeys.indexOf(key) == -1) {
	      savedKeys.push(key);
	      saveSavedKeys();
	    }
	  };
	  this.loadValue = function(key, defaultValue) {
	    key = typeof key === 'undefined' ? defaultValue : key;
	    var value = window.localStorage[prefix + '_' + key];
	    return typeof value == 'undefined' ? void 0 : JSON.parse(value);
	  };
	  this.reset = function(key) {
	    window.localStorage.removeItem(prefix + '_' + key);
	  };
	  this.resetAll = function() {
	    for (var index = 0; index < savedKeys.length; index++) {
	      window.localStorage.removeItem(prefix + '_' + savedKeys[index]);
	    }
	    clearSavedKeys();
	  };
	}
	function HandsontablePersistentState() {
	  var plugin = this;
	  this.init = function() {
	    var instance = this,
	        pluginSettings = instance.getSettings().persistentState;
	    plugin.enabled = !!(pluginSettings);
	    if (!plugin.enabled) {
	      removeHooks.call(instance);
	      return;
	    }
	    if (!instance.storage) {
	      instance.storage = new Storage(instance.rootElement.id);
	    }
	    instance.resetState = plugin.resetValue;
	    addHooks.call(instance);
	  };
	  this.saveValue = function(key, value) {
	    var instance = this;
	    instance.storage.saveValue(key, value);
	  };
	  this.loadValue = function(key, saveTo) {
	    var instance = this;
	    saveTo.value = instance.storage.loadValue(key);
	  };
	  this.resetValue = function(key) {
	    var instance = this;
	    if (typeof key === 'undefined') {
	      instance.storage.resetAll();
	    } else {
	      instance.storage.reset(key);
	    }
	  };
	  var hooks = {
	    persistentStateSave: plugin.saveValue,
	    persistentStateLoad: plugin.loadValue,
	    persistentStateReset: plugin.resetValue
	  };
	  for (var hookName in hooks) {
	    if (hooks.hasOwnProperty(hookName)) {
	      Handsontable.hooks.register(hookName);
	    }
	  }
	  function addHooks() {
	    var instance = this;
	    for (var hookName in hooks) {
	      if (hooks.hasOwnProperty(hookName)) {
	        instance.addHook(hookName, hooks[hookName]);
	      }
	    }
	  }
	  function removeHooks() {
	    var instance = this;
	    for (var hookName in hooks) {
	      if (hooks.hasOwnProperty(hookName)) {
	        instance.removeHook(hookName, hooks[hookName]);
	      }
	    }
	  }
	}
	var htPersistentState = new HandsontablePersistentState();
	Handsontable.hooks.add('beforeInit', htPersistentState.init);
	Handsontable.hooks.add('afterUpdateSettings', htPersistentState.init);

	//# 
	},{"plugins":55}],83:[function(require,module,exports){
	"use strict";
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__46__46__47_renderers__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    removeClass = $__0.removeClass;
	var $__1 = ($___46__46__47__46__46__47_renderers__ = require("renderers"), $___46__46__47__46__46__47_renderers__ && $___46__46__47__46__46__47_renderers__.__esModule && $___46__46__47__46__46__47_renderers__ || {default: $___46__46__47__46__46__47_renderers__}),
	    registerRenderer = $__1.registerRenderer,
	    getRenderer = $__1.getRenderer;
	Handsontable.Search = function Search(instance) {
	  this.query = function(queryStr, callback, queryMethod) {
	    var rowCount = instance.countRows();
	    var colCount = instance.countCols();
	    var queryResult = [];
	    if (!callback) {
	      callback = Handsontable.Search.global.getDefaultCallback();
	    }
	    if (!queryMethod) {
	      queryMethod = Handsontable.Search.global.getDefaultQueryMethod();
	    }
	    for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {
	      for (var colIndex = 0; colIndex < colCount; colIndex++) {
	        var cellData = instance.getDataAtCell(rowIndex, colIndex);
	        var cellProperties = instance.getCellMeta(rowIndex, colIndex);
	        var cellCallback = cellProperties.search.callback || callback;
	        var cellQueryMethod = cellProperties.search.queryMethod || queryMethod;
	        var testResult = cellQueryMethod(queryStr, cellData);
	        if (testResult) {
	          var singleResult = {
	            row: rowIndex,
	            col: colIndex,
	            data: cellData
	          };
	          queryResult.push(singleResult);
	        }
	        if (cellCallback) {
	          cellCallback(instance, rowIndex, colIndex, cellData, testResult);
	        }
	      }
	    }
	    return queryResult;
	  };
	};
	Handsontable.Search.DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {
	  instance.getCellMeta(row, col).isSearchResult = testResult;
	};
	Handsontable.Search.DEFAULT_QUERY_METHOD = function(query, value) {
	  if (typeof query == 'undefined' || query == null || !query.toLowerCase || query.length === 0) {
	    return false;
	  }
	  if (typeof value == 'undefined' || value == null) {
	    return false;
	  }
	  return value.toString().toLowerCase().indexOf(query.toLowerCase()) != -1;
	};
	Handsontable.Search.DEFAULT_SEARCH_RESULT_CLASS = 'htSearchResult';
	Handsontable.Search.global = (function() {
	  var defaultCallback = Handsontable.Search.DEFAULT_CALLBACK;
	  var defaultQueryMethod = Handsontable.Search.DEFAULT_QUERY_METHOD;
	  var defaultSearchResultClass = Handsontable.Search.DEFAULT_SEARCH_RESULT_CLASS;
	  return {
	    getDefaultCallback: function() {
	      return defaultCallback;
	    },
	    setDefaultCallback: function(newDefaultCallback) {
	      defaultCallback = newDefaultCallback;
	    },
	    getDefaultQueryMethod: function() {
	      return defaultQueryMethod;
	    },
	    setDefaultQueryMethod: function(newDefaultQueryMethod) {
	      defaultQueryMethod = newDefaultQueryMethod;
	    },
	    getDefaultSearchResultClass: function() {
	      return defaultSearchResultClass;
	    },
	    setDefaultSearchResultClass: function(newSearchResultClass) {
	      defaultSearchResultClass = newSearchResultClass;
	    }
	  };
	})();
	Handsontable.SearchCellDecorator = function(instance, TD, row, col, prop, value, cellProperties) {
	  var searchResultClass = (cellProperties.search !== null && typeof cellProperties.search == 'object' && cellProperties.search.searchResultClass) || Handsontable.Search.global.getDefaultSearchResultClass();
	  if (cellProperties.isSearchResult) {
	    addClass(TD, searchResultClass);
	  } else {
	    removeClass(TD, searchResultClass);
	  }
	};
	var originalBaseRenderer = getRenderer('base');
	registerRenderer('base', function(instance, TD, row, col, prop, value, cellProperties) {
	  originalBaseRenderer.apply(this, arguments);
	  Handsontable.SearchCellDecorator.apply(this, arguments);
	});
	function init() {
	  var instance = this;
	  var pluginEnabled = !!instance.getSettings().search;
	  if (pluginEnabled) {
	    instance.search = new Handsontable.Search(instance);
	  } else {
	    delete instance.search;
	  }
	}
	Handsontable.hooks.add('afterInit', init);
	Handsontable.hooks.add('afterUpdateSettings', init);

	//# 
	},{"helpers/dom/element":44,"renderers":86}],84:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  TouchScroll: {get: function() {
	      return TouchScroll;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47__46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47__95_base__,
	    $___46__46__47__46__46__47_plugins__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    removeClass = $__0.removeClass;
	var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;
	var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;
	var TouchScroll = function TouchScroll(hotInstance) {
	  var $__3 = this;
	  $traceurRuntime.superConstructor($TouchScroll).call(this, hotInstance);
	  this.hot.addHook('afterInit', (function() {
	    return $__3.afterInit();
	  }));
	  this.hot.addHook('afterUpdateSettings', (function() {
	    return $__3.onAfterUpdateSettings();
	  }));
	  this.scrollbars = [];
	  this.clones = [];
	};
	var $TouchScroll = TouchScroll;
	($traceurRuntime.createClass)(TouchScroll, {
	  afterInit: function() {
	    this.registerEvents();
	    this.onAfterUpdateSettings();
	  },
	  onAfterUpdateSettings: function() {
	    var _this = this;
	    this.hot.addHookOnce('afterRender', function() {
	      var wtOverlays = _this.hot.view.wt.wtOverlays;
	      _this.scrollbars = [];
	      _this.scrollbars.push(wtOverlays.topOverlay);
	      if (wtOverlays.bottomOverlay.clone) {
	        _this.scrollbars.push(wtOverlays.bottomOverlay);
	      }
	      _this.scrollbars.push(wtOverlays.leftOverlay);
	      if (wtOverlays.topLeftCornerOverlay) {
	        _this.scrollbars.push(wtOverlays.topLeftCornerOverlay);
	      }
	      if (wtOverlays.bottomLeftCornerOverlay && wtOverlays.bottomLeftCornerOverlay.clone) {
	        _this.scrollbars.push(wtOverlays.bottomLeftCornerOverlay);
	      }
	      _this.clones = [];
	      if (wtOverlays.topOverlay.needFullRender) {
	        _this.clones.push(wtOverlays.topOverlay.clone.wtTable.holder.parentNode);
	      }
	      if (wtOverlays.bottomOverlay.needFullRender) {
	        _this.clones.push(wtOverlays.bottomOverlay.clone.wtTable.holder.parentNode);
	      }
	      if (wtOverlays.leftOverlay.needFullRender) {
	        _this.clones.push(wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);
	      }
	      if (wtOverlays.topLeftCornerOverlay) {
	        _this.clones.push(wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      }
	      if (wtOverlays.bottomLeftCornerOverlay && wtOverlays.bottomLeftCornerOverlay.clone) {
	        _this.clones.push(wtOverlays.bottomLeftCornerOverlay.clone.wtTable.holder.parentNode);
	      }
	    });
	  },
	  registerEvents: function() {
	    var $__3 = this;
	    this.hot.addHook('beforeTouchScroll', (function() {
	      return $__3.onBeforeTouchScroll();
	    }));
	    this.hot.addHook('afterMomentumScroll', (function() {
	      return $__3.onAfterMomentumScroll();
	    }));
	  },
	  onBeforeTouchScroll: function() {
	    Handsontable.freezeOverlays = true;
	    for (var i = 0,
	        cloneCount = this.clones.length; i < cloneCount; i++) {
	      addClass(this.clones[i], 'hide-tween');
	    }
	  },
	  onAfterMomentumScroll: function() {
	    Handsontable.freezeOverlays = false;
	    var _that = this;
	    for (var i = 0,
	        cloneCount = this.clones.length; i < cloneCount; i++) {
	      removeClass(this.clones[i], 'hide-tween');
	    }
	    for (var i$__5 = 0,
	        cloneCount$__6 = this.clones.length; i$__5 < cloneCount$__6; i$__5++) {
	      addClass(this.clones[i$__5], 'show-tween');
	    }
	    setTimeout(function() {
	      for (var i = 0,
	          cloneCount = _that.clones.length; i < cloneCount; i++) {
	        removeClass(_that.clones[i], 'show-tween');
	      }
	    }, 400);
	    for (var i$__7 = 0,
	        cloneCount$__8 = this.scrollbars.length; i$__7 < cloneCount$__8; i$__7++) {
	      this.scrollbars[i$__7].refresh();
	      this.scrollbars[i$__7].resetFixedPosition();
	    }
	    this.hot.view.wt.wtOverlays.syncScrollWithMaster();
	  }
	}, {}, BasePlugin);
	;
	registerPlugin('touchScroll', TouchScroll);

	//# 
	},{"_base":56,"helpers/dom/element":44,"plugins":55}],85:[function(require,module,exports){
	"use strict";
	var $___46__46__47__46__46__47_helpers_47_object__,
	    $___46__46__47__46__46__47_helpers_47_dom_47_event__;
	var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),
	    inherit = $__0.inherit,
	    deepClone = $__0.deepClone;
	var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;
	Handsontable.UndoRedo = function(instance) {
	  var plugin = this;
	  this.instance = instance;
	  this.doneActions = [];
	  this.undoneActions = [];
	  this.ignoreNewActions = false;
	  instance.addHook('afterChange', function(changes, origin) {
	    if (changes) {
	      var action = new Handsontable.UndoRedo.ChangeAction(changes);
	      plugin.done(action);
	    }
	  });
	  instance.addHook('afterCreateRow', function(index, amount, createdAutomatically) {
	    if (createdAutomatically) {
	      return;
	    }
	    var action = new Handsontable.UndoRedo.CreateRowAction(index, amount);
	    plugin.done(action);
	  });
	  instance.addHook('beforeRemoveRow', function(index, amount) {
	    var originalData = plugin.instance.getData();
	    index = (originalData.length + index) % originalData.length;
	    var removedData = originalData.slice(index, index + amount);
	    var action = new Handsontable.UndoRedo.RemoveRowAction(index, removedData);
	    plugin.done(action);
	  });
	  instance.addHook('afterCreateCol', function(index, amount, createdAutomatically) {
	    if (createdAutomatically) {
	      return;
	    }
	    var action = new Handsontable.UndoRedo.CreateColumnAction(index, amount);
	    plugin.done(action);
	  });
	  instance.addHook('beforeRemoveCol', function(index, amount) {
	    var originalData = plugin.instance.getData();
	    index = (plugin.instance.countCols() + index) % plugin.instance.countCols();
	    var removedData = [];
	    for (var i = 0,
	        len = originalData.length; i < len; i++) {
	      removedData[i] = originalData[i].slice(index, index + amount);
	    }
	    var headers;
	    if (Array.isArray(instance.getSettings().colHeaders)) {
	      headers = instance.getSettings().colHeaders.slice(index, index + removedData.length);
	    }
	    var action = new Handsontable.UndoRedo.RemoveColumnAction(index, removedData, headers);
	    plugin.done(action);
	  });
	  instance.addHook('beforeCellAlignment', function(stateBefore, range, type, alignment) {
	    var action = new Handsontable.UndoRedo.CellAlignmentAction(stateBefore, range, type, alignment);
	    plugin.done(action);
	  });
	};
	Handsontable.UndoRedo.prototype.done = function(action) {
	  if (!this.ignoreNewActions) {
	    this.doneActions.push(action);
	    this.undoneActions.length = 0;
	  }
	};
	Handsontable.UndoRedo.prototype.undo = function() {
	  if (this.isUndoAvailable()) {
	    var action = this.doneActions.pop();
	    this.ignoreNewActions = true;
	    var that = this;
	    action.undo(this.instance, function() {
	      that.ignoreNewActions = false;
	      that.undoneActions.push(action);
	    });
	  }
	};
	Handsontable.UndoRedo.prototype.redo = function() {
	  if (this.isRedoAvailable()) {
	    var action = this.undoneActions.pop();
	    this.ignoreNewActions = true;
	    var that = this;
	    action.redo(this.instance, function() {
	      that.ignoreNewActions = false;
	      that.doneActions.push(action);
	    });
	  }
	};
	Handsontable.UndoRedo.prototype.isUndoAvailable = function() {
	  return this.doneActions.length > 0;
	};
	Handsontable.UndoRedo.prototype.isRedoAvailable = function() {
	  return this.undoneActions.length > 0;
	};
	Handsontable.UndoRedo.prototype.clear = function() {
	  this.doneActions.length = 0;
	  this.undoneActions.length = 0;
	};
	Handsontable.UndoRedo.Action = function() {};
	Handsontable.UndoRedo.Action.prototype.undo = function() {};
	Handsontable.UndoRedo.Action.prototype.redo = function() {};
	Handsontable.UndoRedo.ChangeAction = function(changes) {
	  this.changes = changes;
	};
	inherit(Handsontable.UndoRedo.ChangeAction, Handsontable.UndoRedo.Action);
	Handsontable.UndoRedo.ChangeAction.prototype.undo = function(instance, undoneCallback) {
	  var data = deepClone(this.changes),
	      emptyRowsAtTheEnd = instance.countEmptyRows(true),
	      emptyColsAtTheEnd = instance.countEmptyCols(true);
	  for (var i = 0,
	      len = data.length; i < len; i++) {
	    data[i].splice(3, 1);
	  }
	  instance.addHookOnce('afterChange', undoneCallback);
	  instance.setDataAtRowProp(data, null, null, 'undo');
	  for (var i = 0,
	      len = data.length; i < len; i++) {
	    if (instance.getSettings().minSpareRows && data[i][0] + 1 + instance.getSettings().minSpareRows === instance.countRows() && emptyRowsAtTheEnd == instance.getSettings().minSpareRows) {
	      instance.alter('remove_row', parseInt(data[i][0] + 1, 10), instance.getSettings().minSpareRows);
	      instance.undoRedo.doneActions.pop();
	    }
	    if (instance.getSettings().minSpareCols && data[i][1] + 1 + instance.getSettings().minSpareCols === instance.countCols() && emptyColsAtTheEnd == instance.getSettings().minSpareCols) {
	      instance.alter('remove_col', parseInt(data[i][1] + 1, 10), instance.getSettings().minSpareCols);
	      instance.undoRedo.doneActions.pop();
	    }
	  }
	};
	Handsontable.UndoRedo.ChangeAction.prototype.redo = function(instance, onFinishCallback) {
	  var data = deepClone(this.changes);
	  for (var i = 0,
	      len = data.length; i < len; i++) {
	    data[i].splice(2, 1);
	  }
	  instance.addHookOnce('afterChange', onFinishCallback);
	  instance.setDataAtRowProp(data, null, null, 'redo');
	};
	Handsontable.UndoRedo.CreateRowAction = function(index, amount) {
	  this.index = index;
	  this.amount = amount;
	};
	inherit(Handsontable.UndoRedo.CreateRowAction, Handsontable.UndoRedo.Action);
	Handsontable.UndoRedo.CreateRowAction.prototype.undo = function(instance, undoneCallback) {
	  var rowCount = instance.countRows(),
	      minSpareRows = instance.getSettings().minSpareRows;
	  if (this.index >= rowCount && this.index - minSpareRows < rowCount) {
	    this.index -= minSpareRows;
	  }
	  instance.addHookOnce('afterRemoveRow', undoneCallback);
	  instance.alter('remove_row', this.index, this.amount);
	};
	Handsontable.UndoRedo.CreateRowAction.prototype.redo = function(instance, redoneCallback) {
	  instance.addHookOnce('afterCreateRow', redoneCallback);
	  instance.alter('insert_row', this.index + 1, this.amount);
	};
	Handsontable.UndoRedo.RemoveRowAction = function(index, data) {
	  this.index = index;
	  this.data = data;
	};
	inherit(Handsontable.UndoRedo.RemoveRowAction, Handsontable.UndoRedo.Action);
	Handsontable.UndoRedo.RemoveRowAction.prototype.undo = function(instance, undoneCallback) {
	  var spliceArgs = [this.index, 0];
	  Array.prototype.push.apply(spliceArgs, this.data);
	  Array.prototype.splice.apply(instance.getData(), spliceArgs);
	  instance.addHookOnce('afterRender', undoneCallback);
	  instance.render();
	};
	Handsontable.UndoRedo.RemoveRowAction.prototype.redo = function(instance, redoneCallback) {
	  instance.addHookOnce('afterRemoveRow', redoneCallback);
	  instance.alter('remove_row', this.index, this.data.length);
	};
	Handsontable.UndoRedo.CreateColumnAction = function(index, amount) {
	  this.index = index;
	  this.amount = amount;
	};
	inherit(Handsontable.UndoRedo.CreateColumnAction, Handsontable.UndoRedo.Action);
	Handsontable.UndoRedo.CreateColumnAction.prototype.undo = function(instance, undoneCallback) {
	  instance.addHookOnce('afterRemoveCol', undoneCallback);
	  instance.alter('remove_col', this.index, this.amount);
	};
	Handsontable.UndoRedo.CreateColumnAction.prototype.redo = function(instance, redoneCallback) {
	  instance.addHookOnce('afterCreateCol', redoneCallback);
	  instance.alter('insert_col', this.index + 1, this.amount);
	};
	Handsontable.UndoRedo.CellAlignmentAction = function(stateBefore, range, type, alignment) {
	  this.stateBefore = stateBefore;
	  this.range = range;
	  this.type = type;
	  this.alignment = alignment;
	};
	Handsontable.UndoRedo.CellAlignmentAction.prototype.undo = function(instance, undoneCallback) {
	  if (!instance.getPlugin('contextMenu').isEnabled()) {
	    return;
	  }
	  for (var row = this.range.from.row; row <= this.range.to.row; row++) {
	    for (var col = this.range.from.col; col <= this.range.to.col; col++) {
	      instance.setCellMeta(row, col, 'className', this.stateBefore[row][col] || ' htLeft');
	    }
	  }
	  instance.addHookOnce('afterRender', undoneCallback);
	  instance.render();
	};
	Handsontable.UndoRedo.CellAlignmentAction.prototype.redo = function(instance, undoneCallback) {
	  if (!instance.getPlugin('contextMenu').isEnabled()) {
	    return;
	  }
	  instance.selectCell(this.range.from.row, this.range.from.col, this.range.to.row, this.range.to.col);
	  instance.getPlugin('contextMenu').executeCommand('alignment:' + this.alignment.replace('ht', '').toLowerCase());
	  instance.addHookOnce('afterRender', undoneCallback);
	  instance.render();
	};
	Handsontable.UndoRedo.RemoveColumnAction = function(index, data, headers) {
	  this.index = index;
	  this.data = data;
	  this.amount = this.data[0].length;
	  this.headers = headers;
	};
	inherit(Handsontable.UndoRedo.RemoveColumnAction, Handsontable.UndoRedo.Action);
	Handsontable.UndoRedo.RemoveColumnAction.prototype.undo = function(instance, undoneCallback) {
	  var row,
	      spliceArgs;
	  for (var i = 0,
	      len = instance.getData().length; i < len; i++) {
	    row = instance.getSourceDataAtRow(i);
	    spliceArgs = [this.index, 0];
	    Array.prototype.push.apply(spliceArgs, this.data[i]);
	    Array.prototype.splice.apply(row, spliceArgs);
	  }
	  if (typeof this.headers != 'undefined') {
	    spliceArgs = [this.index, 0];
	    Array.prototype.push.apply(spliceArgs, this.headers);
	    Array.prototype.splice.apply(instance.getSettings().colHeaders, spliceArgs);
	  }
	  instance.addHookOnce('afterRender', undoneCallback);
	  instance.render();
	};
	Handsontable.UndoRedo.RemoveColumnAction.prototype.redo = function(instance, redoneCallback) {
	  instance.addHookOnce('afterRemoveCol', redoneCallback);
	  instance.alter('remove_col', this.index, this.amount);
	};
	function init() {
	  var instance = this;
	  var pluginEnabled = typeof instance.getSettings().undo == 'undefined' || instance.getSettings().undo;
	  if (pluginEnabled) {
	    if (!instance.undoRedo) {
	      instance.undoRedo = new Handsontable.UndoRedo(instance);
	      exposeUndoRedoMethods(instance);
	      instance.addHook('beforeKeyDown', onBeforeKeyDown);
	      instance.addHook('afterChange', onAfterChange);
	    }
	  } else {
	    if (instance.undoRedo) {
	      delete instance.undoRedo;
	      removeExposedUndoRedoMethods(instance);
	      instance.removeHook('beforeKeyDown', onBeforeKeyDown);
	      instance.removeHook('afterChange', onAfterChange);
	    }
	  }
	}
	function onBeforeKeyDown(event) {
	  var instance = this;
	  var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;
	  if (ctrlDown) {
	    if (event.keyCode === 89 || (event.shiftKey && event.keyCode === 90)) {
	      instance.undoRedo.redo();
	      stopImmediatePropagation(event);
	    } else if (event.keyCode === 90) {
	      instance.undoRedo.undo();
	      stopImmediatePropagation(event);
	    }
	  }
	}
	function onAfterChange(changes, source) {
	  var instance = this;
	  if (source == 'loadData') {
	    return instance.undoRedo.clear();
	  }
	}
	function exposeUndoRedoMethods(instance) {
	  instance.undo = function() {
	    return instance.undoRedo.undo();
	  };
	  instance.redo = function() {
	    return instance.undoRedo.redo();
	  };
	  instance.isUndoAvailable = function() {
	    return instance.undoRedo.isUndoAvailable();
	  };
	  instance.isRedoAvailable = function() {
	    return instance.undoRedo.isRedoAvailable();
	  };
	  instance.clearUndo = function() {
	    return instance.undoRedo.clear();
	  };
	}
	function removeExposedUndoRedoMethods(instance) {
	  delete instance.undo;
	  delete instance.redo;
	  delete instance.isUndoAvailable;
	  delete instance.isRedoAvailable;
	  delete instance.clearUndo;
	}
	Handsontable.hooks.add('afterInit', init);
	Handsontable.hooks.add('afterUpdateSettings', init);

	//# 
	},{"helpers/dom/event":45,"helpers/object":49}],86:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  registerRenderer: {get: function() {
	      return registerRenderer;
	    }},
	  getRenderer: {get: function() {
	      return getRenderer;
	    }},
	  hasRenderer: {get: function() {
	      return hasRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_string__;
	var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;
	var registeredRenderers = {};
	Handsontable.renderers = Handsontable.renderers || {};
	Handsontable.renderers.registerRenderer = registerRenderer;
	Handsontable.renderers.getRenderer = getRenderer;
	function registerRenderer(rendererName, rendererFunction) {
	  var registerName;
	  registeredRenderers[rendererName] = rendererFunction;
	  registerName = toUpperCaseFirst(rendererName) + 'Renderer';
	  Handsontable.renderers[registerName] = rendererFunction;
	  Handsontable[registerName] = rendererFunction;
	}
	function getRenderer(rendererName) {
	  if (typeof rendererName == 'function') {
	    return rendererName;
	  }
	  if (typeof rendererName != 'string') {
	    throw Error('Only strings and functions can be passed as "renderer" parameter');
	  }
	  if (!(rendererName in registeredRenderers)) {
	    throw Error('No editor registered under name "' + rendererName + '"');
	  }
	  return registeredRenderers[rendererName];
	}
	function hasRenderer(rendererName) {
	  return rendererName in registeredRenderers;
	}
	;

	//# 
	},{"helpers/string":51}],87:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  cellDecorator: {get: function() {
	      return cellDecorator;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_renderers__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    removeClass = $__0.removeClass;
	var registerRenderer = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}).registerRenderer;
	;
	registerRenderer('base', cellDecorator);
	Handsontable.renderers.cellDecorator = cellDecorator;
	function cellDecorator(instance, TD, row, col, prop, value, cellProperties) {
	  if (cellProperties.className) {
	    if (TD.className) {
	      TD.className = TD.className + ' ' + cellProperties.className;
	    } else {
	      TD.className = cellProperties.className;
	    }
	  }
	  if (cellProperties.readOnly) {
	    addClass(TD, cellProperties.readOnlyCellClassName);
	  }
	  if (cellProperties.valid === false && cellProperties.invalidCellClassName) {
	    addClass(TD, cellProperties.invalidCellClassName);
	  } else {
	    removeClass(TD, cellProperties.invalidCellClassName);
	  }
	  if (cellProperties.wordWrap === false && cellProperties.noWordWrapClassName) {
	    addClass(TD, cellProperties.noWordWrapClassName);
	  }
	  if (!value && cellProperties.placeholder) {
	    addClass(TD, cellProperties.placeholderCellClassName);
	  }
	}

	//# 
	},{"helpers/dom/element":44,"renderers":86}],88:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  autocompleteRenderer: {get: function() {
	      return autocompleteRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_eventManager__,
	    $___46__46__47_renderers__,
	    $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    hasClass = $__0.hasClass,
	    empty = $__0.empty;
	var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;
	var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__2.getRenderer,
	    registerRenderer = $__2.registerRenderer;
	var WalkontableCellCoords = ($___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var clonableWRAPPER = document.createElement('DIV');
	clonableWRAPPER.className = 'htAutocompleteWrapper';
	var clonableARROW = document.createElement('DIV');
	clonableARROW.className = 'htAutocompleteArrow';
	clonableARROW.appendChild(document.createTextNode(String.fromCharCode(9660)));
	var wrapTdContentWithWrapper = function(TD, WRAPPER) {
	  WRAPPER.innerHTML = TD.innerHTML;
	  empty(TD);
	  TD.appendChild(WRAPPER);
	};
	function autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  var WRAPPER = clonableWRAPPER.cloneNode(true);
	  var ARROW = clonableARROW.cloneNode(true);
	  getRenderer('text')(instance, TD, row, col, prop, value, cellProperties);
	  TD.appendChild(ARROW);
	  addClass(TD, 'htAutocomplete');
	  if (!TD.firstChild) {
	    TD.appendChild(document.createTextNode(String.fromCharCode(160)));
	  }
	  if (!instance.acArrowListener) {
	    var eventManager = eventManagerObject(instance);
	    instance.acArrowListener = function(event) {
	      if (hasClass(event.target, 'htAutocompleteArrow')) {
	        instance.view.wt.getSetting('onCellDblClick', null, new WalkontableCellCoords(row, col), TD);
	      }
	    };
	    eventManager.addEventListener(instance.rootElement, 'mousedown', instance.acArrowListener);
	    instance.addHookOnce('afterDestroy', function() {
	      eventManager.destroy();
	    });
	  }
	}
	;
	registerRenderer('autocomplete', autocompleteRenderer);

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"eventManager":40,"helpers/dom/element":44,"renderers":86}],89:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  checkboxRenderer: {get: function() {
	      return checkboxRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_string__,
	    $___46__46__47_eventManager__,
	    $___46__46__47_renderers__,
	    $___46__46__47_helpers_47_unicode__,
	    $___46__46__47_helpers_47_dom_47_event__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    empty = $__0.empty,
	    addClass = $__0.addClass,
	    hasClass = $__0.hasClass;
	var equalsIgnoreCase = ($___46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47_helpers_47_string__ && $___46__46__47_helpers_47_string__.__esModule && $___46__46__47_helpers_47_string__ || {default: $___46__46__47_helpers_47_string__}).equalsIgnoreCase;
	var EventManager = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).EventManager;
	var $__3 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__3.getRenderer,
	    registerRenderer = $__3.registerRenderer;
	var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;
	var $__5 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),
	    stopPropagation = $__5.stopPropagation,
	    stopImmediatePropagation = $__5.stopImmediatePropagation,
	    isImmediatePropagationStopped = $__5.isImmediatePropagationStopped;
	var isListeningKeyDownEvent = new WeakMap();
	var BAD_VALUE_CLASS = 'htBadValue';
	function checkboxRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  var eventManager = new EventManager(instance);
	  var input = createInput();
	  var labelOptions = cellProperties.label;
	  var badValue = false;
	  if (typeof cellProperties.checkedTemplate === 'undefined') {
	    cellProperties.checkedTemplate = true;
	  }
	  if (typeof cellProperties.uncheckedTemplate === 'undefined') {
	    cellProperties.uncheckedTemplate = false;
	  }
	  empty(TD);
	  if (value === cellProperties.checkedTemplate || equalsIgnoreCase(value, cellProperties.checkedTemplate)) {
	    input.checked = true;
	  } else if (value === cellProperties.uncheckedTemplate || equalsIgnoreCase(value, cellProperties.uncheckedTemplate)) {
	    input.checked = false;
	  } else if (value === null) {
	    addClass(input, 'noValue');
	  } else {
	    input.style.display = 'none';
	    addClass(input, BAD_VALUE_CLASS);
	    badValue = true;
	  }
	  if (!badValue && labelOptions) {
	    var labelText = '';
	    if (labelOptions.value) {
	      labelText = typeof labelOptions.value === 'function' ? labelOptions.value.call(this, row, col, prop, value) : labelOptions.value;
	    } else if (labelOptions.property) {
	      labelText = instance.getDataAtRowProp(row, labelOptions.property);
	    }
	    var label = createLabel(labelText);
	    if (labelOptions.position === 'before') {
	      label.appendChild(input);
	    } else {
	      label.insertBefore(input, label.firstChild);
	    }
	    input = label;
	  }
	  TD.appendChild(input);
	  if (badValue) {
	    TD.appendChild(document.createTextNode('#bad-value#'));
	  }
	  if (cellProperties.readOnly) {
	    eventManager.addEventListener(input, 'click', preventDefault);
	  } else {
	    eventManager.addEventListener(input, 'mousedown', stopPropagation);
	    eventManager.addEventListener(input, 'mouseup', stopPropagation);
	    eventManager.addEventListener(input, 'change', (function(event) {
	      instance.setDataAtRowProp(row, prop, event.target.checked ? cellProperties.checkedTemplate : cellProperties.uncheckedTemplate);
	    }));
	  }
	  if (!isListeningKeyDownEvent.has(instance)) {
	    isListeningKeyDownEvent.set(instance, true);
	    instance.addHook('beforeKeyDown', onBeforeKeyDown);
	  }
	  function onBeforeKeyDown(event) {
	    var allowedKeys = [KEY_CODES.SPACE, KEY_CODES.ENTER, KEY_CODES.DELETE, KEY_CODES.BACKSPACE];
	    if (allowedKeys.indexOf(event.keyCode) !== -1 && !isImmediatePropagationStopped(event)) {
	      eachSelectedCheckboxCell(function() {
	        stopImmediatePropagation(event);
	        event.preventDefault();
	      });
	    }
	    if (event.keyCode == KEY_CODES.SPACE || event.keyCode == KEY_CODES.ENTER) {
	      toggleSelected();
	    }
	    if (event.keyCode == KEY_CODES.DELETE || event.keyCode == KEY_CODES.BACKSPACE) {
	      toggleSelected(false);
	    }
	  }
	  function toggleSelected() {
	    var checked = arguments[0] !== (void 0) ? arguments[0] : null;
	    eachSelectedCheckboxCell(function(checkboxes) {
	      for (var i = 0,
	          len = checkboxes.length; i < len; i++) {
	        if (hasClass(checkboxes[i], BAD_VALUE_CLASS) && checked === null) {
	          return;
	        }
	        toggleCheckbox(checkboxes[i], checked);
	      }
	    });
	  }
	  function toggleCheckbox(checkbox) {
	    var checked = arguments[1] !== (void 0) ? arguments[1] : null;
	    if (checked === null) {
	      checkbox.checked = !checkbox.checked;
	    } else {
	      checkbox.checked = checked;
	    }
	    eventManager.fireEvent(checkbox, 'change');
	  }
	  function eachSelectedCheckboxCell(callback) {
	    var selRange = instance.getSelectedRange();
	    var topLeft = selRange.getTopLeftCorner();
	    var bottomRight = selRange.getBottomRightCorner();
	    for (var row = topLeft.row; row <= bottomRight.row; row++) {
	      for (var col = topLeft.col; col <= bottomRight.col; col++) {
	        var cell = instance.getCell(row, col);
	        var cellProperties$__6 = instance.getCellMeta(row, col);
	        var checkboxes = cell.querySelectorAll('input[type=checkbox]');
	        if (checkboxes.length > 0 && !cellProperties$__6.readOnly) {
	          callback(checkboxes);
	        }
	      }
	    }
	  }
	}
	;
	registerRenderer('checkbox', checkboxRenderer);
	function createInput() {
	  var input = document.createElement('input');
	  input.className = 'htCheckboxRendererInput';
	  input.type = 'checkbox';
	  input.setAttribute('autocomplete', 'off');
	  return input.cloneNode(false);
	}
	function createLabel(text) {
	  var label = document.createElement('label');
	  label.className = 'htCheckboxRendererLabel';
	  label.appendChild(document.createTextNode(text));
	  return label.cloneNode(true);
	}
	function preventDefault(event) {
	  event.preventDefault();
	}

	//# 
	},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/string":51,"helpers/unicode":52,"renderers":86}],90:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  htmlRenderer: {get: function() {
	      return htmlRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_renderers__;
	var fastInnerHTML = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).fastInnerHTML;
	var $__1 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__1.getRenderer,
	    registerRenderer = $__1.registerRenderer;
	function htmlRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  getRenderer('base').apply(this, arguments);
	  fastInnerHTML(TD, value);
	}
	;
	registerRenderer('html', htmlRenderer);

	//# 
	},{"helpers/dom/element":44,"renderers":86}],91:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  numericRenderer: {get: function() {
	      return numericRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $__numeral__,
	    $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_renderers__,
	    $___46__46__47_helpers_47_number__;
	var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;
	var addClass = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).addClass;
	var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__2.getRenderer,
	    registerRenderer = $__2.registerRenderer;
	var isNumeric = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).isNumeric;
	function numericRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  if (isNumeric(value)) {
	    if (typeof cellProperties.language !== 'undefined') {
	      numeral.language(cellProperties.language);
	    }
	    value = numeral(value).format(cellProperties.format || '0');
	    addClass(TD, 'htNumeric');
	  }
	  getRenderer('text')(instance, TD, row, col, prop, value, cellProperties);
	}
	;
	registerRenderer('numeric', numericRenderer);

	//# 
	},{"helpers/dom/element":44,"helpers/number":48,"numeral":"numeral","renderers":86}],92:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  passwordRenderer: {get: function() {
	      return passwordRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_renderers__;
	var fastInnerHTML = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).fastInnerHTML;
	var $__1 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__1.getRenderer,
	    registerRenderer = $__1.registerRenderer;
	function passwordRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  getRenderer('text').apply(this, arguments);
	  value = TD.innerHTML;
	  var hash;
	  var hashLength = cellProperties.hashLength || value.length;
	  var hashSymbol = cellProperties.hashSymbol || '*';
	  for (hash = ''; hash.split(hashSymbol).length - 1 < hashLength; hash += hashSymbol) {}
	  fastInnerHTML(TD, hash);
	}
	;
	registerRenderer('password', passwordRenderer);

	//# 
	},{"helpers/dom/element":44,"renderers":86}],93:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  textRenderer: {get: function() {
	      return textRenderer;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_mixed__,
	    $___46__46__47_renderers__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    empty = $__0.empty,
	    fastInnerText = $__0.fastInnerText;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),
	    getRenderer = $__2.getRenderer,
	    registerRenderer = $__2.registerRenderer;
	function textRenderer(instance, TD, row, col, prop, value, cellProperties) {
	  getRenderer('base').apply(this, arguments);
	  if (!value && cellProperties.placeholder) {
	    value = cellProperties.placeholder;
	  }
	  var escaped = stringify(value);
	  if (!instance.getSettings().trimWhitespace) {
	    escaped = escaped.replace(/ /g, String.fromCharCode(160));
	  }
	  if (cellProperties.rendererTemplate) {
	    empty(TD);
	    var TEMPLATE = document.createElement('TEMPLATE');
	    TEMPLATE.setAttribute('bind', '{{}}');
	    TEMPLATE.innerHTML = cellProperties.rendererTemplate;
	    HTMLTemplateElement.decorate(TEMPLATE);
	    TEMPLATE.model = instance.getSourceDataAtRow(row);
	    TD.appendChild(TEMPLATE);
	  } else {
	    fastInnerText(TD, escaped);
	  }
	}
	;
	registerRenderer('text', textRenderer);

	//# 
	},{"helpers/dom/element":44,"helpers/mixed":47,"renderers":86}],94:[function(require,module,exports){
	"use strict";
	(function(global) {
	  'use strict';
	  if (global.$traceurRuntime) {
	    return;
	  }
	  var $Object = Object;
	  var $TypeError = TypeError;
	  var $create = $Object.create;
	  var $defineProperties = $Object.defineProperties;
	  var $defineProperty = $Object.defineProperty;
	  var $freeze = $Object.freeze;
	  var $getOwnPropertyDescriptor = $Object.getOwnPropertyDescriptor;
	  var $getOwnPropertyNames = $Object.getOwnPropertyNames;
	  var $keys = $Object.keys;
	  var $hasOwnProperty = $Object.prototype.hasOwnProperty;
	  var $preventExtensions = Object.preventExtensions;
	  var $seal = Object.seal;
	  var $isExtensible = Object.isExtensible;
	  function nonEnum(value) {
	    return {
	      configurable: true,
	      enumerable: false,
	      value: value,
	      writable: true
	    };
	  }
	  var method = nonEnum;
	  var counter = 0;
	  function newUniqueString() {
	    return '__$' + Math.floor(Math.random() * 1e9) + '$' + ++counter + '$__';
	  }
	  var symbolInternalProperty = newUniqueString();
	  var symbolDescriptionProperty = newUniqueString();
	  var symbolDataProperty = newUniqueString();
	  var symbolValues = $create(null);
	  var privateNames = $create(null);
	  function isPrivateName(s) {
	    return privateNames[s];
	  }
	  function createPrivateName() {
	    var s = newUniqueString();
	    privateNames[s] = true;
	    return s;
	  }
	  function isShimSymbol(symbol) {
	    return typeof symbol === 'object' && symbol instanceof SymbolValue;
	  }
	  function typeOf(v) {
	    if (isShimSymbol(v))
	      return 'symbol';
	    return typeof v;
	  }
	  function Symbol(description) {
	    var value = new SymbolValue(description);
	    if (!(this instanceof Symbol))
	      return value;
	    throw new TypeError('Symbol cannot be new\'ed');
	  }
	  $defineProperty(Symbol.prototype, 'constructor', nonEnum(Symbol));
	  $defineProperty(Symbol.prototype, 'toString', method(function() {
	    var symbolValue = this[symbolDataProperty];
	    if (!getOption('symbols'))
	      return symbolValue[symbolInternalProperty];
	    if (!symbolValue)
	      throw TypeError('Conversion from symbol to string');
	    var desc = symbolValue[symbolDescriptionProperty];
	    if (desc === undefined)
	      desc = '';
	    return 'Symbol(' + desc + ')';
	  }));
	  $defineProperty(Symbol.prototype, 'valueOf', method(function() {
	    var symbolValue = this[symbolDataProperty];
	    if (!symbolValue)
	      throw TypeError('Conversion from symbol to string');
	    if (!getOption('symbols'))
	      return symbolValue[symbolInternalProperty];
	    return symbolValue;
	  }));
	  function SymbolValue(description) {
	    var key = newUniqueString();
	    $defineProperty(this, symbolDataProperty, {value: this});
	    $defineProperty(this, symbolInternalProperty, {value: key});
	    $defineProperty(this, symbolDescriptionProperty, {value: description});
	    freeze(this);
	    symbolValues[key] = this;
	  }
	  $defineProperty(SymbolValue.prototype, 'constructor', nonEnum(Symbol));
	  $defineProperty(SymbolValue.prototype, 'toString', {
	    value: Symbol.prototype.toString,
	    enumerable: false
	  });
	  $defineProperty(SymbolValue.prototype, 'valueOf', {
	    value: Symbol.prototype.valueOf,
	    enumerable: false
	  });
	  var hashProperty = createPrivateName();
	  var hashPropertyDescriptor = {value: undefined};
	  var hashObjectProperties = {
	    hash: {value: undefined},
	    self: {value: undefined}
	  };
	  var hashCounter = 0;
	  function getOwnHashObject(object) {
	    var hashObject = object[hashProperty];
	    if (hashObject && hashObject.self === object)
	      return hashObject;
	    if ($isExtensible(object)) {
	      hashObjectProperties.hash.value = hashCounter++;
	      hashObjectProperties.self.value = object;
	      hashPropertyDescriptor.value = $create(null, hashObjectProperties);
	      $defineProperty(object, hashProperty, hashPropertyDescriptor);
	      return hashPropertyDescriptor.value;
	    }
	    return undefined;
	  }
	  function freeze(object) {
	    getOwnHashObject(object);
	    return $freeze.apply(this, arguments);
	  }
	  function preventExtensions(object) {
	    getOwnHashObject(object);
	    return $preventExtensions.apply(this, arguments);
	  }
	  function seal(object) {
	    getOwnHashObject(object);
	    return $seal.apply(this, arguments);
	  }
	  freeze(SymbolValue.prototype);
	  function isSymbolString(s) {
	    return symbolValues[s] || privateNames[s];
	  }
	  function toProperty(name) {
	    if (isShimSymbol(name))
	      return name[symbolInternalProperty];
	    return name;
	  }
	  function removeSymbolKeys(array) {
	    var rv = [];
	    for (var i = 0; i < array.length; i++) {
	      if (!isSymbolString(array[i])) {
	        rv.push(array[i]);
	      }
	    }
	    return rv;
	  }
	  function getOwnPropertyNames(object) {
	    return removeSymbolKeys($getOwnPropertyNames(object));
	  }
	  function keys(object) {
	    return removeSymbolKeys($keys(object));
	  }
	  function getOwnPropertySymbols(object) {
	    var rv = [];
	    var names = $getOwnPropertyNames(object);
	    for (var i = 0; i < names.length; i++) {
	      var symbol = symbolValues[names[i]];
	      if (symbol) {
	        rv.push(symbol);
	      }
	    }
	    return rv;
	  }
	  function getOwnPropertyDescriptor(object, name) {
	    return $getOwnPropertyDescriptor(object, toProperty(name));
	  }
	  function hasOwnProperty(name) {
	    return $hasOwnProperty.call(this, toProperty(name));
	  }
	  function getOption(name) {
	    return global.traceur && global.traceur.options[name];
	  }
	  function defineProperty(object, name, descriptor) {
	    if (isShimSymbol(name)) {
	      name = name[symbolInternalProperty];
	    }
	    $defineProperty(object, name, descriptor);
	    return object;
	  }
	  function polyfillObject(Object) {
	    $defineProperty(Object, 'defineProperty', {value: defineProperty});
	    $defineProperty(Object, 'getOwnPropertyNames', {value: getOwnPropertyNames});
	    $defineProperty(Object, 'getOwnPropertyDescriptor', {value: getOwnPropertyDescriptor});
	    $defineProperty(Object.prototype, 'hasOwnProperty', {value: hasOwnProperty});
	    $defineProperty(Object, 'freeze', {value: freeze});
	    $defineProperty(Object, 'preventExtensions', {value: preventExtensions});
	    $defineProperty(Object, 'seal', {value: seal});
	    $defineProperty(Object, 'keys', {value: keys});
	  }
	  function exportStar(object) {
	    for (var i = 1; i < arguments.length; i++) {
	      var names = $getOwnPropertyNames(arguments[i]);
	      for (var j = 0; j < names.length; j++) {
	        var name = names[j];
	        if (isSymbolString(name))
	          continue;
	        (function(mod, name) {
	          $defineProperty(object, name, {
	            get: function() {
	              return mod[name];
	            },
	            enumerable: true
	          });
	        })(arguments[i], names[j]);
	      }
	    }
	    return object;
	  }
	  function isObject(x) {
	    return x != null && (typeof x === 'object' || typeof x === 'function');
	  }
	  function toObject(x) {
	    if (x == null)
	      throw $TypeError();
	    return $Object(x);
	  }
	  function checkObjectCoercible(argument) {
	    if (argument == null) {
	      throw new TypeError('Value cannot be converted to an Object');
	    }
	    return argument;
	  }
	  function polyfillSymbol(global, Symbol) {
	    if (!global.Symbol) {
	      global.Symbol = Symbol;
	      Object.getOwnPropertySymbols = getOwnPropertySymbols;
	    }
	    if (!global.Symbol.iterator) {
	      global.Symbol.iterator = Symbol('Symbol.iterator');
	    }
	  }
	  function setupGlobals(global) {
	    polyfillSymbol(global, Symbol);
	    global.Reflect = global.Reflect || {};
	    global.Reflect.global = global.Reflect.global || global;
	    polyfillObject(global.Object);
	  }
	  setupGlobals(global);
	  global.$traceurRuntime = {
	    checkObjectCoercible: checkObjectCoercible,
	    createPrivateName: createPrivateName,
	    defineProperties: $defineProperties,
	    defineProperty: $defineProperty,
	    exportStar: exportStar,
	    getOwnHashObject: getOwnHashObject,
	    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	    getOwnPropertyNames: $getOwnPropertyNames,
	    isObject: isObject,
	    isPrivateName: isPrivateName,
	    isSymbolString: isSymbolString,
	    keys: $keys,
	    setupGlobals: setupGlobals,
	    toObject: toObject,
	    toProperty: toProperty,
	    typeof: typeOf
	  };
	})(window);
	(function() {
	  'use strict';
	  var $toProperty = $traceurRuntime.toProperty;
	  function spread() {
	    var rv = [],
	        j = 0,
	        iterResult;
	    for (var i = 0; i < arguments.length; i++) {
	      var valueToSpread = $traceurRuntime.checkObjectCoercible(arguments[i]);
	      if (typeof valueToSpread[$toProperty(Symbol.iterator)] !== 'function') {
	        throw new TypeError('Cannot spread non-iterable object.');
	      }
	      var iter = valueToSpread[$toProperty(Symbol.iterator)]();
	      while (!(iterResult = iter.next()).done) {
	        rv[j++] = iterResult.value;
	      }
	    }
	    return rv;
	  }
	  $traceurRuntime.spread = spread;
	})();
	(function() {
	  'use strict';
	  var $Object = Object;
	  var $TypeError = TypeError;
	  var $create = $Object.create;
	  var $defineProperties = $traceurRuntime.defineProperties;
	  var $defineProperty = $traceurRuntime.defineProperty;
	  var $getOwnPropertyDescriptor = $traceurRuntime.getOwnPropertyDescriptor;
	  var $getPrototypeOf = Object.getPrototypeOf;
	  var $toProperty = $traceurRuntime.toProperty;
	  var $__0 = Object,
	      getOwnPropertyNames = $__0.getOwnPropertyNames,
	      getOwnPropertySymbols = $__0.getOwnPropertySymbols;
	  function superDescriptor(homeObject, name) {
	    var proto = $getPrototypeOf(homeObject);
	    do {
	      var result = $getOwnPropertyDescriptor(proto, name);
	      if (result)
	        return result;
	      proto = $getPrototypeOf(proto);
	    } while (proto);
	    return undefined;
	  }
	  function superConstructor(ctor) {
	    return ctor.__proto__;
	  }
	  function superCall(self, homeObject, name, args) {
	    return superGet(self, homeObject, name).apply(self, args);
	  }
	  function superGet(self, homeObject, name) {
	    var descriptor = superDescriptor(homeObject, name);
	    if (descriptor) {
	      if (!descriptor.get)
	        return descriptor.value;
	      return descriptor.get.call(self);
	    }
	    return undefined;
	  }
	  function superSet(self, homeObject, name, value) {
	    var descriptor = superDescriptor(homeObject, name);
	    if (descriptor && descriptor.set) {
	      descriptor.set.call(self, value);
	      return value;
	    }
	    throw $TypeError(("super has no setter '" + name + "'."));
	  }
	  function getDescriptors(object) {
	    var descriptors = {};
	    var names = getOwnPropertyNames(object);
	    for (var i = 0; i < names.length; i++) {
	      var name = names[i];
	      descriptors[name] = $getOwnPropertyDescriptor(object, name);
	    }
	    var symbols = getOwnPropertySymbols(object);
	    for (var i = 0; i < symbols.length; i++) {
	      var symbol = symbols[i];
	      descriptors[$toProperty(symbol)] = $getOwnPropertyDescriptor(object, $toProperty(symbol));
	    }
	    return descriptors;
	  }
	  function createClass(ctor, object, staticObject, superClass) {
	    $defineProperty(object, 'constructor', {
	      value: ctor,
	      configurable: true,
	      enumerable: false,
	      writable: true
	    });
	    if (arguments.length > 3) {
	      if (typeof superClass === 'function')
	        ctor.__proto__ = superClass;
	      ctor.prototype = $create(getProtoParent(superClass), getDescriptors(object));
	    } else {
	      ctor.prototype = object;
	    }
	    $defineProperty(ctor, 'prototype', {
	      configurable: false,
	      writable: false
	    });
	    return $defineProperties(ctor, getDescriptors(staticObject));
	  }
	  function getProtoParent(superClass) {
	    if (typeof superClass === 'function') {
	      var prototype = superClass.prototype;
	      if ($Object(prototype) === prototype || prototype === null)
	        return superClass.prototype;
	      throw new $TypeError('super prototype must be an Object or null');
	    }
	    if (superClass === null)
	      return null;
	    throw new $TypeError(("Super expression must either be null or a function, not " + typeof superClass + "."));
	  }
	  function defaultSuperCall(self, homeObject, args) {
	    if ($getPrototypeOf(homeObject) !== null)
	      superCall(self, homeObject, 'constructor', args);
	  }
	  $traceurRuntime.createClass = createClass;
	  $traceurRuntime.defaultSuperCall = defaultSuperCall;
	  $traceurRuntime.superCall = superCall;
	  $traceurRuntime.superConstructor = superConstructor;
	  $traceurRuntime.superGet = superGet;
	  $traceurRuntime.superSet = superSet;
	})();

	//# 
	},{}],95:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  TableView: {get: function() {
	      return TableView;
	    }},
	  __esModule: {value: true}
	});
	var $__helpers_47_dom_47_element__,
	    $__eventManager__,
	    $__helpers_47_dom_47_event__,
	    $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,
	    $__3rdparty_47_walkontable_47_src_47_selection__,
	    $__3rdparty_47_walkontable_47_src_47_core__;
	var $__0 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    empty = $__0.empty,
	    fastInnerHTML = $__0.fastInnerHTML,
	    fastInnerText = $__0.fastInnerText,
	    getScrollbarWidth = $__0.getScrollbarWidth,
	    hasClass = $__0.hasClass,
	    isChildOf = $__0.isChildOf,
	    isInput = $__0.isInput,
	    isOutsideInput = $__0.isOutsideInput;
	var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;
	var $__2 = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__}),
	    stopPropagation = $__2.stopPropagation,
	    isImmediatePropagationStopped = $__2.isImmediatePropagationStopped;
	var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;
	var WalkontableSelection = ($__3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $__3rdparty_47_walkontable_47_src_47_selection__ && $__3rdparty_47_walkontable_47_src_47_selection__.__esModule && $__3rdparty_47_walkontable_47_src_47_selection__ || {default: $__3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;
	var Walkontable = ($__3rdparty_47_walkontable_47_src_47_core__ = require("3rdparty/walkontable/src/core"), $__3rdparty_47_walkontable_47_src_47_core__ && $__3rdparty_47_walkontable_47_src_47_core__.__esModule && $__3rdparty_47_walkontable_47_src_47_core__ || {default: $__3rdparty_47_walkontable_47_src_47_core__}).Walkontable;
	Handsontable.TableView = TableView;
	function TableView(instance) {
	  var that = this;
	  this.eventManager = eventManagerObject(instance);
	  this.instance = instance;
	  this.settings = instance.getSettings();
	  var originalStyle = instance.rootElement.getAttribute('style');
	  if (originalStyle) {
	    instance.rootElement.setAttribute('data-originalstyle', originalStyle);
	  }
	  addClass(instance.rootElement, 'handsontable');
	  var table = document.createElement('TABLE');
	  addClass(table, 'htCore');
	  if (instance.getSettings().tableClassName) {
	    addClass(table, instance.getSettings().tableClassName);
	  }
	  this.THEAD = document.createElement('THEAD');
	  table.appendChild(this.THEAD);
	  this.TBODY = document.createElement('TBODY');
	  table.appendChild(this.TBODY);
	  instance.table = table;
	  instance.container.insertBefore(table, instance.container.firstChild);
	  this.eventManager.addEventListener(instance.rootElement, 'mousedown', function(event) {
	    if (!that.isTextSelectionAllowed(event.target)) {
	      clearTextSelection();
	      event.preventDefault();
	      window.focus();
	    }
	  });
	  this.eventManager.addEventListener(document.documentElement, 'keyup', function(event) {
	    if (instance.selection.isInProgress() && !event.shiftKey) {
	      instance.selection.finish();
	    }
	  });
	  var isMouseDown;
	  this.isMouseDown = function() {
	    return isMouseDown;
	  };
	  this.eventManager.addEventListener(document.documentElement, 'mouseup', function(event) {
	    if (instance.selection.isInProgress() && event.which === 1) {
	      instance.selection.finish();
	    }
	    isMouseDown = false;
	    if (isOutsideInput(document.activeElement)) {
	      instance.unlisten();
	    }
	  });
	  this.eventManager.addEventListener(document.documentElement, 'mousedown', function(event) {
	    var next = event.target;
	    var eventX = event.x || event.clientX;
	    var eventY = event.y || event.clientY;
	    if (isMouseDown || !instance.rootElement) {
	      return;
	    }
	    if (next === instance.view.wt.wtTable.holder) {
	      var scrollbarWidth = getScrollbarWidth();
	      if (document.elementFromPoint(eventX + scrollbarWidth, eventY) !== instance.view.wt.wtTable.holder || document.elementFromPoint(eventX, eventY + scrollbarWidth) !== instance.view.wt.wtTable.holder) {
	        return;
	      }
	    } else {
	      while (next !== document.documentElement) {
	        if (next === null) {
	          if (event.isTargetWebComponent) {
	            break;
	          }
	          return;
	        }
	        if (next === instance.rootElement) {
	          return;
	        }
	        next = next.parentNode;
	      }
	    }
	    if (that.settings.outsideClickDeselects) {
	      instance.deselectCell();
	    } else {
	      instance.destroyEditor();
	    }
	  });
	  this.eventManager.addEventListener(table, 'selectstart', function(event) {
	    if (that.settings.fragmentSelection) {
	      return;
	    }
	    event.preventDefault();
	  });
	  var clearTextSelection = function() {
	    if (window.getSelection) {
	      if (window.getSelection().empty) {
	        window.getSelection().empty();
	      } else if (window.getSelection().removeAllRanges) {
	        window.getSelection().removeAllRanges();
	      }
	    } else if (document.selection) {
	      document.selection.empty();
	    }
	  };
	  var selections = [new WalkontableSelection({
	    className: 'current',
	    border: {
	      width: 2,
	      color: '#5292F7',
	      cornerVisible: function() {
	        return that.settings.fillHandle && !that.isCellEdited() && !instance.selection.isMultiple();
	      },
	      multipleSelectionHandlesVisible: function() {
	        return !that.isCellEdited() && !instance.selection.isMultiple();
	      }
	    }
	  }), new WalkontableSelection({
	    className: 'area',
	    border: {
	      width: 1,
	      color: '#89AFF9',
	      cornerVisible: function() {
	        return that.settings.fillHandle && !that.isCellEdited() && instance.selection.isMultiple();
	      },
	      multipleSelectionHandlesVisible: function() {
	        return !that.isCellEdited() && instance.selection.isMultiple();
	      }
	    }
	  }), new WalkontableSelection({
	    className: 'highlight',
	    highlightRowClassName: that.settings.currentRowClassName,
	    highlightColumnClassName: that.settings.currentColClassName
	  }), new WalkontableSelection({
	    className: 'fill',
	    border: {
	      width: 1,
	      color: 'red'
	    }
	  })];
	  selections.current = selections[0];
	  selections.area = selections[1];
	  selections.highlight = selections[2];
	  selections.fill = selections[3];
	  var walkontableConfig = {
	    debug: function() {
	      return that.settings.debug;
	    },
	    externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),
	    table: table,
	    stretchH: this.settings.stretchH,
	    data: instance.getDataAtCell,
	    totalRows: instance.countRows,
	    totalColumns: instance.countCols,
	    fixedColumnsLeft: function() {
	      return that.settings.fixedColumnsLeft;
	    },
	    fixedRowsTop: function() {
	      return that.settings.fixedRowsTop;
	    },
	    fixedRowsBottom: function() {
	      return that.settings.fixedRowsBottom;
	    },
	    minSpareRows: function() {
	      return that.settings.minSpareRows;
	    },
	    renderAllRows: that.settings.renderAllRows,
	    rowHeaders: function() {
	      var arr = [];
	      if (instance.hasRowHeaders()) {
	        arr.push(function(index, TH) {
	          that.appendRowHeader(index, TH);
	        });
	      }
	      Handsontable.hooks.run(instance, 'afterGetRowHeaderRenderers', arr);
	      return arr;
	    },
	    columnHeaders: function() {
	      var arr = [];
	      if (instance.hasColHeaders()) {
	        arr.push(function(index, TH) {
	          that.appendColHeader(index, TH);
	        });
	      }
	      Handsontable.hooks.run(instance, 'afterGetColumnHeaderRenderers', arr);
	      return arr;
	    },
	    columnWidth: instance.getColWidth,
	    rowHeight: instance.getRowHeight,
	    cellRenderer: function(row, col, TD) {
	      var prop = that.instance.colToProp(col),
	          cellProperties = that.instance.getCellMeta(row, col),
	          renderer = that.instance.getCellRenderer(cellProperties);
	      var value = that.instance.getDataAtRowProp(row, prop);
	      renderer(that.instance, TD, row, col, prop, value, cellProperties);
	      Handsontable.hooks.run(that.instance, 'afterRenderer', TD, row, col, prop, value, cellProperties);
	    },
	    selections: selections,
	    hideBorderOnMouseDownOver: function() {
	      return that.settings.fragmentSelection;
	    },
	    onCellMouseDown: function(event, coords, TD, wt) {
	      var colspanOffset;
	      var TR = TD.parentNode;
	      var THEAD = TR.parentNode;
	      var headerLevel;
	      var headerColspan;
	      instance.listen();
	      that.activeWt = wt;
	      isMouseDown = true;
	      Handsontable.hooks.run(instance, 'beforeOnCellMouseDown', event, coords, TD);
	      instance.selection.setSelectedHeaders(false, false);
	      if (!isImmediatePropagationStopped(event)) {
	        if (event.button === 2 && instance.selection.inInSelection(coords)) {
	          var nothing = 1;
	        } else if (event.shiftKey) {
	          if (coords.row >= 0 && coords.col >= 0) {
	            instance.selection.setRangeEnd(coords);
	          }
	        } else {
	          if ((coords.row < 0 || coords.col < 0) && (coords.row >= 0 || coords.col >= 0)) {
	            if (coords.row < 0) {
	              headerLevel = THEAD.childNodes.length - Array.prototype.indexOf.call(THEAD.childNodes, TR) - 1;
	              headerColspan = instance.getHeaderColspan(coords.col, headerLevel);
	              instance.selection.setSelectedHeaders(false, true);
	              instance.selectCell(0, coords.col, instance.countRows() - 1, coords.col + Math.max(0, headerColspan - 1));
	            }
	            if (coords.col < 0) {
	              instance.selection.setSelectedHeaders(true, false);
	              instance.selectCell(coords.row, 0, coords.row, instance.countCols() - 1);
	            }
	          } else {
	            coords.row = coords.row < 0 ? 0 : coords.row;
	            coords.col = coords.col < 0 ? 0 : coords.col;
	            instance.selection.setRangeStart(coords);
	          }
	        }
	        Handsontable.hooks.run(instance, 'afterOnCellMouseDown', event, coords, TD);
	        that.activeWt = that.wt;
	      }
	    },
	    onCellMouseOver: function(event, coords, TD, wt) {
	      that.activeWt = wt;
	      if (coords.row >= 0 && coords.col >= 0) {
	        if (isMouseDown) {
	          instance.selection.setRangeEnd(coords);
	        }
	      } else {
	        if (isMouseDown) {
	          if (coords.row < 0) {
	            if (instance.selection.selectedHeader.cols) {
	              instance.selection.setRangeEnd(new WalkontableCellCoords(instance.countRows() - 1, coords.col));
	              instance.selection.setSelectedHeaders(false, true);
	            } else {
	              instance.selection.setRangeEnd(new WalkontableCellCoords(coords.row, coords.col));
	            }
	          }
	          if (coords.col < 0) {
	            if (instance.selection.selectedHeader.rows) {
	              instance.selection.setRangeEnd(new WalkontableCellCoords(coords.row, instance.countCols() - 1));
	              instance.selection.setSelectedHeaders(true, false);
	            } else {
	              instance.selection.setRangeEnd(new WalkontableCellCoords(coords.row, coords.col));
	            }
	          }
	        }
	      }
	      Handsontable.hooks.run(instance, 'afterOnCellMouseOver', event, coords, TD);
	      that.activeWt = that.wt;
	    },
	    onCellCornerMouseDown: function(event) {
	      event.preventDefault();
	      Handsontable.hooks.run(instance, 'afterOnCellCornerMouseDown', event);
	    },
	    beforeDraw: function(force) {
	      that.beforeRender(force);
	    },
	    onDraw: function(force) {
	      that.onDraw(force);
	    },
	    onScrollVertically: function() {
	      instance.runHooks('afterScrollVertically');
	    },
	    onScrollHorizontally: function() {
	      instance.runHooks('afterScrollHorizontally');
	    },
	    onBeforeDrawBorders: function(corners, borderClassName) {
	      instance.runHooks('beforeDrawBorders', corners, borderClassName);
	    },
	    onBeforeTouchScroll: function() {
	      instance.runHooks('beforeTouchScroll');
	    },
	    onAfterMomentumScroll: function() {
	      instance.runHooks('afterMomentumScroll');
	    },
	    viewportRowCalculatorOverride: function(calc) {
	      var rows = instance.countRows();
	      var viewportOffset = that.settings.viewportRowRenderingOffset;
	      if (viewportOffset === 'auto' && that.settings.fixedRowsTop) {
	        viewportOffset = 10;
	      }
	      if (typeof viewportOffset === 'number') {
	        calc.startRow = Math.max(calc.startRow - viewportOffset, 0);
	        calc.endRow = Math.min(calc.endRow + viewportOffset, rows - 1);
	      }
	      if (viewportOffset === 'auto') {
	        var center = calc.startRow + calc.endRow - calc.startRow;
	        var offset = Math.ceil(center / rows * 12);
	        calc.startRow = Math.max(calc.startRow - offset, 0);
	        calc.endRow = Math.min(calc.endRow + offset, rows - 1);
	      }
	      instance.runHooks('afterViewportRowCalculatorOverride', calc);
	    },
	    viewportColumnCalculatorOverride: function(calc) {
	      var cols = instance.countCols();
	      var viewportOffset = that.settings.viewportColumnRenderingOffset;
	      if (viewportOffset === 'auto' && that.settings.fixedColumnsLeft) {
	        viewportOffset = 10;
	      }
	      if (typeof viewportOffset === 'number') {
	        calc.startColumn = Math.max(calc.startColumn - viewportOffset, 0);
	        calc.endColumn = Math.min(calc.endColumn + viewportOffset, cols - 1);
	      }
	      if (viewportOffset === 'auto') {
	        var center = calc.startColumn + calc.endColumn - calc.startColumn;
	        var offset = Math.ceil(center / cols * 12);
	        calc.startRow = Math.max(calc.startColumn - offset, 0);
	        calc.endColumn = Math.min(calc.endColumn + offset, cols - 1);
	      }
	      instance.runHooks('afterViewportColumnCalculatorOverride', calc);
	    }
	  };
	  Handsontable.hooks.run(instance, 'beforeInitWalkontable', walkontableConfig);
	  this.wt = new Walkontable(walkontableConfig);
	  this.activeWt = this.wt;
	  this.eventManager.addEventListener(that.wt.wtTable.spreader, 'mousedown', function(event) {
	    if (event.target === that.wt.wtTable.spreader && event.which === 3) {
	      stopPropagation(event);
	    }
	  });
	  this.eventManager.addEventListener(that.wt.wtTable.spreader, 'contextmenu', function(event) {
	    if (event.target === that.wt.wtTable.spreader && event.which === 3) {
	      stopPropagation(event);
	    }
	  });
	  this.eventManager.addEventListener(document.documentElement, 'click', function() {
	    if (that.settings.observeDOMVisibility) {
	      if (that.wt.drawInterrupted) {
	        that.instance.forceFullRender = true;
	        that.render();
	      }
	    }
	  });
	}
	TableView.prototype.isTextSelectionAllowed = function(el) {
	  if (isInput(el)) {
	    return true;
	  }
	  if (this.settings.fragmentSelection && isChildOf(el, this.TBODY)) {
	    return true;
	  }
	  return false;
	};
	TableView.prototype.isCellEdited = function() {
	  var activeEditor = this.instance.getActiveEditor();
	  return activeEditor && activeEditor.isOpened();
	};
	TableView.prototype.beforeRender = function(force) {
	  if (force) {
	    Handsontable.hooks.run(this.instance, 'beforeRender', this.instance.forceFullRender);
	  }
	};
	TableView.prototype.onDraw = function(force) {
	  if (force) {
	    Handsontable.hooks.run(this.instance, 'afterRender', this.instance.forceFullRender);
	  }
	};
	TableView.prototype.render = function() {
	  this.wt.draw(!this.instance.forceFullRender);
	  this.instance.forceFullRender = false;
	  this.instance.renderCall = false;
	};
	TableView.prototype.getCellAtCoords = function(coords, topmost) {
	  var td = this.wt.getCell(coords, topmost);
	  if (td < 0) {
	    return null;
	  } else {
	    return td;
	  }
	};
	TableView.prototype.scrollViewport = function(coords) {
	  this.wt.scrollViewport(coords);
	};
	TableView.prototype.appendRowHeader = function(row, TH) {
	  if (TH.firstChild) {
	    var container = TH.firstChild;
	    if (!hasClass(container, 'relative')) {
	      empty(TH);
	      this.appendRowHeader(row, TH);
	      return;
	    }
	    this.updateCellHeader(container.querySelector('.rowHeader'), row, this.instance.getRowHeader);
	  } else {
	    var div = document.createElement('div');
	    var span = document.createElement('span');
	    div.className = 'relative';
	    span.className = 'rowHeader';
	    this.updateCellHeader(span, row, this.instance.getRowHeader);
	    div.appendChild(span);
	    TH.appendChild(div);
	  }
	  Handsontable.hooks.run(this.instance, 'afterGetRowHeader', row, TH);
	};
	TableView.prototype.appendColHeader = function(col, TH) {
	  if (TH.firstChild) {
	    var container = TH.firstChild;
	    if (!hasClass(container, 'relative')) {
	      empty(TH);
	      this.appendRowHeader(col, TH);
	      return;
	    }
	    this.updateCellHeader(container.querySelector('.colHeader'), col, this.instance.getColHeader);
	  } else {
	    var div = document.createElement('div');
	    var span = document.createElement('span');
	    div.className = 'relative';
	    span.className = 'colHeader';
	    this.updateCellHeader(span, col, this.instance.getColHeader);
	    div.appendChild(span);
	    TH.appendChild(div);
	  }
	  Handsontable.hooks.run(this.instance, 'afterGetColHeader', col, TH);
	};
	TableView.prototype.updateCellHeader = function(element, index, content) {
	  if (index > -1) {
	    fastInnerHTML(element, content(index));
	  } else {
	    fastInnerText(element, String.fromCharCode(160));
	    addClass(element, 'cornerHeader');
	  }
	};
	TableView.prototype.maximumVisibleElementWidth = function(leftOffset) {
	  var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();
	  var maxWidth = workspaceWidth - leftOffset;
	  return maxWidth > 0 ? maxWidth : 0;
	};
	TableView.prototype.maximumVisibleElementHeight = function(topOffset) {
	  var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();
	  var maxHeight = workspaceHeight - topOffset;
	  return maxHeight > 0 ? maxHeight : 0;
	};
	TableView.prototype.mainViewIsActive = function() {
	  return this.wt === this.activeWt;
	};
	TableView.prototype.destroy = function() {
	  this.wt.destroy();
	  this.eventManager.destroy();
	};
	;

	//# 
	},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/core":7,"3rdparty/walkontable/src/selection":18,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45}],96:[function(require,module,exports){
	"use strict";
	Object.defineProperties(exports, {
	  GhostTable: {get: function() {
	      return GhostTable;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_array__,
	    $___46__46__47_helpers_47_object__,
	    $___46__46__47_helpers_47_number__,
	    $___46__46__47_helpers_47_mixed__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth;
	var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;
	var objectEach = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).objectEach;
	var rangeEach = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).rangeEach;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	var GhostTable = function GhostTable(hotInstance) {
	  this.hot = hotInstance;
	  this.container = null;
	  this.injected = false;
	  this.rows = [];
	  this.columns = [];
	  this.samples = null;
	};
	($traceurRuntime.createClass)(GhostTable, {
	  addRow: function(row, samples) {
	    if (this.columns.length) {
	      throw new Error('Doesn\'t support multi-dimensional table');
	    }
	    if (!this.rows.length) {
	      this.container = this.createContainer(this.hot.rootElement.className);
	    }
	    var rowObject = {row: row};
	    this.rows.push(rowObject);
	    this.samples = samples;
	    this.table = this.createTable(this.hot.table.className);
	    this.table.colGroup.appendChild(this.createColGroupsCol());
	    this.table.tr.appendChild(this.createRow(row));
	    this.container.container.appendChild(this.table.fragment);
	    rowObject.table = this.table.table;
	  },
	  addColumn: function(column, samples) {
	    if (this.rows.length) {
	      throw new Error('Doesn\'t support multi-dimensional table');
	    }
	    if (!this.columns.length) {
	      this.container = this.createContainer(this.hot.rootElement.className);
	    }
	    var columnObject = {col: column};
	    this.columns.push(columnObject);
	    this.samples = samples;
	    this.table = this.createTable(this.hot.table.className);
	    if (this.hot.getColHeader(column) !== null) {
	      this.hot.view.appendColHeader(column, this.table.th);
	    }
	    this.table.tBody.appendChild(this.createCol(column));
	    this.container.container.appendChild(this.table.fragment);
	    columnObject.table = this.table.table;
	  },
	  getHeights: function(callback) {
	    if (!this.injected) {
	      this.injectTable();
	    }
	    arrayEach(this.rows, (function(row) {
	      callback(row.row, outerHeight(row.table) - 1);
	    }));
	  },
	  getWidths: function(callback) {
	    if (!this.injected) {
	      this.injectTable();
	    }
	    arrayEach(this.columns, (function(column) {
	      callback(column.col, outerWidth(column.table));
	    }));
	  },
	  createColGroupsCol: function() {
	    var $__5 = this;
	    var d = document;
	    var fragment = d.createDocumentFragment();
	    fragment.appendChild(this.createColElement(-1));
	    this.samples.forEach((function(sample) {
	      arrayEach(sample.strings, (function(string) {
	        fragment.appendChild($__5.createColElement(string.col));
	      }));
	    }));
	    return fragment;
	  },
	  createRow: function(row) {
	    var $__5 = this;
	    var d = document;
	    var fragment = d.createDocumentFragment();
	    var th = d.createElement('th');
	    if (this.hot.getRowHeader(row) !== null) {
	      this.hot.view.appendRowHeader(row, th);
	    }
	    fragment.appendChild(th);
	    this.samples.forEach((function(sample) {
	      arrayEach(sample.strings, (function(string) {
	        var column = string.col;
	        var cellProperties = $__5.hot.getCellMeta(row, column);
	        cellProperties.col = column;
	        cellProperties.row = row;
	        var renderer = $__5.hot.getCellRenderer(cellProperties);
	        var td = d.createElement('td');
	        renderer($__5.hot, td, row, column, $__5.hot.colToProp(column), string.value, cellProperties);
	        fragment.appendChild(td);
	      }));
	    }));
	    return fragment;
	  },
	  createCol: function(column) {
	    var $__5 = this;
	    var d = document;
	    var fragment = d.createDocumentFragment();
	    this.samples.forEach((function(sample) {
	      arrayEach(sample.strings, (function(string) {
	        var row = string.row;
	        var cellProperties = $__5.hot.getCellMeta(row, column);
	        cellProperties.col = column;
	        cellProperties.row = row;
	        var renderer = $__5.hot.getCellRenderer(cellProperties);
	        var td = d.createElement('td');
	        var tr = d.createElement('tr');
	        renderer($__5.hot, td, row, column, $__5.hot.colToProp(row), string.value, cellProperties);
	        tr.appendChild(td);
	        fragment.appendChild(tr);
	      }));
	    }));
	    return fragment;
	  },
	  clean: function() {
	    this.rows.length = 0;
	    this.columns.length = 0;
	    if (this.samples) {
	      this.samples.clear();
	    }
	    this.samples = null;
	    this.removeTable();
	  },
	  injectTable: function() {
	    var parent = arguments[0] !== (void 0) ? arguments[0] : null;
	    if (!this.injected) {
	      (parent || this.hot.rootElement).appendChild(this.container.fragment);
	      this.injected = true;
	    }
	  },
	  removeTable: function() {
	    if (this.injected && this.container.container.parentNode) {
	      this.container.container.parentNode.removeChild(this.container.container);
	      this.container = null;
	      this.injected = false;
	    }
	  },
	  createColElement: function(column) {
	    var d = document;
	    var col = d.createElement('col');
	    col.style.width = this.hot.view.wt.wtTable.getStretchedColumnWidth(column) + 'px';
	    return col;
	  },
	  createTable: function() {
	    var className = arguments[0] !== (void 0) ? arguments[0] : '';
	    var d = document;
	    var fragment = d.createDocumentFragment();
	    var table = d.createElement('table');
	    var tHead = d.createElement('thead');
	    var tBody = d.createElement('tbody');
	    var colGroup = d.createElement('colgroup');
	    var tr = d.createElement('tr');
	    var th = d.createElement('th');
	    if (this.isVertical()) {
	      table.appendChild(colGroup);
	    }
	    if (this.isHorizontal()) {
	      tr.appendChild(th);
	      tHead.appendChild(tr);
	      table.style.tableLayout = 'auto';
	      table.style.width = 'auto';
	    }
	    table.appendChild(tHead);
	    if (this.isVertical()) {
	      tBody.appendChild(tr);
	    }
	    table.appendChild(tBody);
	    addClass(table, className);
	    fragment.appendChild(table);
	    return {
	      fragment: fragment,
	      table: table,
	      tHead: tHead,
	      tBody: tBody,
	      colGroup: colGroup,
	      tr: tr,
	      th: th
	    };
	  },
	  createContainer: function() {
	    var className = arguments[0] !== (void 0) ? arguments[0] : '';
	    var d = document;
	    var fragment = d.createDocumentFragment();
	    var container = d.createElement('div');
	    className = 'htGhostTable htAutoSize ' + className.trim();
	    addClass(container, className);
	    fragment.appendChild(container);
	    return {
	      fragment: fragment,
	      container: container
	    };
	  },
	  isVertical: function() {
	    return this.rows.length && !this.columns.length ? true : false;
	  },
	  isHorizontal: function() {
	    return this.columns.length && !this.rows.length ? true : false;
	  }
	}, {});
	;
	Handsontable.utils = Handsontable.utils || {};
	Handsontable.utils.GhostTable = GhostTable;

	//# 
	},{"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/number":48,"helpers/object":49}],97:[function(require,module,exports){
	"use strict";
	var $__7;
	Object.defineProperties(exports, {
	  SamplesGenerator: {get: function() {
	      return SamplesGenerator;
	    }},
	  __esModule: {value: true}
	});
	var $___46__46__47_helpers_47_dom_47_element__,
	    $___46__46__47_helpers_47_array__,
	    $___46__46__47_helpers_47_object__,
	    $___46__46__47_helpers_47_number__,
	    $___46__46__47_helpers_47_mixed__;
	var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),
	    addClass = $__0.addClass,
	    outerHeight = $__0.outerHeight,
	    outerWidth = $__0.outerWidth;
	var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;
	var objectEach = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).objectEach;
	var rangeEach = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).rangeEach;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	var SamplesGenerator = function SamplesGenerator(dataFactory) {
	  this.samples = null;
	  this.dataFactory = dataFactory;
	};
	var $SamplesGenerator = SamplesGenerator;
	($traceurRuntime.createClass)(SamplesGenerator, ($__7 = {}, Object.defineProperty($__7, "generateRowSamples", {
	  value: function(rowRange, colRange) {
	    return this.generateSamples('row', colRange, rowRange);
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__7, "generateColumnSamples", {
	  value: function(colRange, rowRange) {
	    return this.generateSamples('col', rowRange, colRange);
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__7, "generateSamples", {
	  value: function(type, range, specifierRange) {
	    var $__5 = this;
	    var samples = new Map();
	    if (typeof specifierRange === 'number') {
	      specifierRange = {
	        from: specifierRange,
	        to: specifierRange
	      };
	    }
	    rangeEach(specifierRange.from, specifierRange.to, (function(index) {
	      var sample = $__5.generateSample(type, range, index);
	      samples.set(index, sample);
	    }));
	    return samples;
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), Object.defineProperty($__7, "generateSample", {
	  value: function(type, range, specifierValue) {
	    var $__5 = this;
	    var samples = new Map();
	    rangeEach(range.from, range.to, (function(index) {
	      var $__7;
	      var value;
	      if (type === 'row') {
	        value = $__5.dataFactory(specifierValue, index);
	      } else if (type === 'col') {
	        value = $__5.dataFactory(index, specifierValue);
	      } else {
	        throw new Error('Unsupported sample type');
	      }
	      if (!Array.isArray(value)) {
	        value = stringify(value);
	      }
	      var len = value.length;
	      if (!samples.has(len)) {
	        samples.set(len, {
	          needed: $SamplesGenerator.SAMPLE_COUNT,
	          strings: []
	        });
	      }
	      var sample = samples.get(len);
	      if (sample.needed) {
	        var computedKey = type === 'row' ? 'col' : 'row';
	        sample.strings.push(($__7 = {}, Object.defineProperty($__7, "value", {
	          value: value,
	          configurable: true,
	          enumerable: true,
	          writable: true
	        }), Object.defineProperty($__7, computedKey, {
	          value: index,
	          configurable: true,
	          enumerable: true,
	          writable: true
	        }), $__7));
	        sample.needed--;
	      }
	    }));
	    return samples;
	  },
	  configurable: true,
	  enumerable: true,
	  writable: true
	}), $__7), {get SAMPLE_COUNT() {
	    return 3;
	  }});
	;
	Handsontable.utils = Handsontable.utils || {};
	Handsontable.utils.SamplesGenerator = SamplesGenerator;

	//# 
	},{"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/number":48,"helpers/object":49}],98:[function(require,module,exports){
	"use strict";
	var $___46__46__47_helpers_47_mixed__;
	var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;
	Handsontable.AutocompleteValidator = function(value, callback) {
	  if (this.strict && this.source) {
	    if (typeof this.source === 'function') {
	      this.source(value, process(value, callback));
	    } else {
	      process(value, callback)(this.source);
	    }
	  } else {
	    callback(true);
	  }
	};
	function process(value, callback) {
	  var originalVal = value;
	  var lowercaseVal = typeof originalVal === 'string' ? originalVal.toLowerCase() : null;
	  return function(source) {
	    var found = false;
	    for (var s = 0,
	        slen = source.length; s < slen; s++) {
	      if (originalVal === source[s]) {
	        found = true;
	        break;
	      } else if (lowercaseVal === stringify(source[s]).toLowerCase()) {
	        found = true;
	        break;
	      }
	    }
	    callback(found);
	  };
	}

	//# 
	},{"helpers/mixed":47}],99:[function(require,module,exports){
	"use strict";
	var $__moment__,
	    $___46__46__47_editors__;
	var moment = ($__moment__ = require("moment"), $__moment__ && $__moment__.__esModule && $__moment__ || {default: $__moment__}).default;
	var getEditor = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}).getEditor;
	Handsontable.DateValidator = function(value, callback) {
	  var valid = true;
	  var dateEditor = getEditor('date', this.instance);
	  if (value === null) {
	    value = '';
	  }
	  var isValidDate = moment(new Date(value)).isValid();
	  var isValidFormat = moment(value, this.dateFormat || dateEditor.defaultDateFormat, true).isValid();
	  if (!isValidDate) {
	    valid = false;
	  }
	  if (!isValidDate && isValidFormat) {
	    valid = true;
	  }
	  if (isValidDate && !isValidFormat) {
	    if (this.correctFormat === true) {
	      var correctedValue = correctFormat(value, this.dateFormat);
	      this.instance.setDataAtCell(this.row, this.col, correctedValue, 'dateValidator');
	      valid = true;
	    } else {
	      valid = false;
	    }
	  }
	  callback(valid);
	};
	var correctFormat = function correctFormat(value, dateFormat) {
	  var date = moment(new Date(value));
	  var year = date.format('YYYY');
	  var yearNow = moment().format('YYYY');
	  if (year.substr(0, 2) !== yearNow.substr(0, 2)) {
	    if (!value.match(new RegExp(year))) {
	      date.year(year.replace(year.substr(0, 2), yearNow.substr(0, 2)));
	    }
	  } else if (year.length > 4) {
	    date.year((date.year() + '').substr(0, 4));
	  }
	  return date.format(dateFormat);
	};

	//# 
	},{"editors":28,"moment":"moment"}],100:[function(require,module,exports){
	"use strict";
	Handsontable.NumericValidator = function(value, callback) {
	  if (value === null) {
	    value = '';
	  }
	  callback(/^-?\d*(\.|\,)?\d*$/.test(value));
	};

	//# 
	},{}],"SheetClip":[function(require,module,exports){
	"use strict";
	(function(global) {
	  "use strict";
	  function countQuotes(str) {
	    return str.split('"').length - 1;
	  }
	  var SheetClip = {
	    parse: function(str) {
	      var r,
	          rLen,
	          rows,
	          arr = [],
	          a = 0,
	          c,
	          cLen,
	          multiline,
	          last;
	      rows = str.split('\n');
	      if (rows.length > 1 && rows[rows.length - 1] === '') {
	        rows.pop();
	      }
	      for (r = 0, rLen = rows.length; r < rLen; r += 1) {
	        rows[r] = rows[r].split('\t');
	        for (c = 0, cLen = rows[r].length; c < cLen; c += 1) {
	          if (!arr[a]) {
	            arr[a] = [];
	          }
	          if (multiline && c === 0) {
	            last = arr[a].length - 1;
	            arr[a][last] = arr[a][last] + '\n' + rows[r][0];
	            if (multiline && (countQuotes(rows[r][0]) & 1)) {
	              multiline = false;
	              arr[a][last] = arr[a][last].substring(0, arr[a][last].length - 1).replace(/""/g, '"');
	            }
	          } else {
	            if (c === cLen - 1 && rows[r][c].indexOf('"') === 0 && (countQuotes(rows[r][c]) & 1)) {
	              arr[a].push(rows[r][c].substring(1).replace(/""/g, '"'));
	              multiline = true;
	            } else {
	              arr[a].push(rows[r][c].replace(/""/g, '"'));
	              multiline = false;
	            }
	          }
	        }
	        if (!multiline) {
	          a += 1;
	        }
	      }
	      return arr;
	    },
	    stringify: function(arr) {
	      var r,
	          rLen,
	          c,
	          cLen,
	          str = '',
	          val;
	      for (r = 0, rLen = arr.length; r < rLen; r += 1) {
	        cLen = arr[r].length;
	        for (c = 0; c < cLen; c += 1) {
	          if (c > 0) {
	            str += '\t';
	          }
	          val = arr[r][c];
	          if (typeof val === 'string') {
	            if (val.indexOf('\n') > -1) {
	              str += '"' + val.replace(/"/g, '""') + '"';
	            } else {
	              str += val;
	            }
	          } else if (val === null || val === void 0) {
	            str += '';
	          } else {
	            str += val;
	          }
	        }
	        str += '\n';
	      }
	      return str;
	    }
	  };
	  if (typeof exports !== 'undefined') {
	    exports.parse = SheetClip.parse;
	    exports.stringify = SheetClip.stringify;
	  } else {
	    global.SheetClip = SheetClip;
	  }
	}(window));

	//# 
	},{}],"autoResize":[function(require,module,exports){
	"use strict";
	function autoResize() {
	  var defaults = {
	    minHeight: 200,
	    maxHeight: 300,
	    minWidth: 100,
	    maxWidth: 300
	  },
	      el,
	      body = document.body,
	      text = document.createTextNode(''),
	      span = document.createElement('SPAN'),
	      observe = function(element, event, handler) {
	        if (window.attachEvent) {
	          element.attachEvent('on' + event, handler);
	        } else {
	          element.addEventListener(event, handler, false);
	        }
	      },
	      unObserve = function(element, event, handler) {
	        if (window.removeEventListener) {
	          element.removeEventListener(event, handler, false);
	        } else {
	          element.detachEvent('on' + event, handler);
	        }
	      },
	      resize = function(newChar) {
	        var width,
	            scrollHeight;
	        if (!newChar) {
	          newChar = "";
	        } else if (!/^[a-zA-Z \.,\\\/\|0-9]$/.test(newChar)) {
	          newChar = ".";
	        }
	        if (text.textContent !== void 0) {
	          text.textContent = el.value + newChar;
	        } else {
	          text.data = el.value + newChar;
	        }
	        span.style.fontSize = Handsontable.Dom.getComputedStyle(el).fontSize;
	        span.style.fontFamily = Handsontable.Dom.getComputedStyle(el).fontFamily;
	        span.style.whiteSpace = "pre";
	        body.appendChild(span);
	        width = span.clientWidth + 2;
	        body.removeChild(span);
	        el.style.height = defaults.minHeight + 'px';
	        if (defaults.minWidth > width) {
	          el.style.width = defaults.minWidth + 'px';
	        } else if (width > defaults.maxWidth) {
	          el.style.width = defaults.maxWidth + 'px';
	        } else {
	          el.style.width = width + 'px';
	        }
	        scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;
	        if (defaults.minHeight > scrollHeight) {
	          el.style.height = defaults.minHeight + 'px';
	        } else if (defaults.maxHeight < scrollHeight) {
	          el.style.height = defaults.maxHeight + 'px';
	          el.style.overflowY = 'visible';
	        } else {
	          el.style.height = scrollHeight + 'px';
	        }
	      },
	      delayedResize = function() {
	        window.setTimeout(resize, 0);
	      },
	      extendDefaults = function(config) {
	        if (config && config.minHeight) {
	          if (config.minHeight == 'inherit') {
	            defaults.minHeight = el.clientHeight;
	          } else {
	            var minHeight = parseInt(config.minHeight);
	            if (!isNaN(minHeight)) {
	              defaults.minHeight = minHeight;
	            }
	          }
	        }
	        if (config && config.maxHeight) {
	          if (config.maxHeight == 'inherit') {
	            defaults.maxHeight = el.clientHeight;
	          } else {
	            var maxHeight = parseInt(config.maxHeight);
	            if (!isNaN(maxHeight)) {
	              defaults.maxHeight = maxHeight;
	            }
	          }
	        }
	        if (config && config.minWidth) {
	          if (config.minWidth == 'inherit') {
	            defaults.minWidth = el.clientWidth;
	          } else {
	            var minWidth = parseInt(config.minWidth);
	            if (!isNaN(minWidth)) {
	              defaults.minWidth = minWidth;
	            }
	          }
	        }
	        if (config && config.maxWidth) {
	          if (config.maxWidth == 'inherit') {
	            defaults.maxWidth = el.clientWidth;
	          } else {
	            var maxWidth = parseInt(config.maxWidth);
	            if (!isNaN(maxWidth)) {
	              defaults.maxWidth = maxWidth;
	            }
	          }
	        }
	        if (!span.firstChild) {
	          span.className = "autoResize";
	          span.style.display = 'inline-block';
	          span.appendChild(text);
	        }
	      },
	      init = function(el_, config, doObserve) {
	        el = el_;
	        extendDefaults(config);
	        if (el.nodeName == 'TEXTAREA') {
	          el.style.resize = 'none';
	          el.style.overflowY = '';
	          el.style.height = defaults.minHeight + 'px';
	          el.style.minWidth = defaults.minWidth + 'px';
	          el.style.maxWidth = defaults.maxWidth + 'px';
	          el.style.overflowY = 'hidden';
	        }
	        if (doObserve) {
	          observe(el, 'change', resize);
	          observe(el, 'cut', delayedResize);
	          observe(el, 'paste', delayedResize);
	          observe(el, 'drop', delayedResize);
	          observe(el, 'keydown', delayedResize);
	        }
	        resize();
	      };
	  return {
	    init: function(el_, config, doObserve) {
	      init(el_, config, doObserve);
	    },
	    unObserve: function() {
	      unObserve(el, 'change', resize);
	      unObserve(el, 'cut', delayedResize);
	      unObserve(el, 'paste', delayedResize);
	      unObserve(el, 'drop', delayedResize);
	      unObserve(el, 'keydown', delayedResize);
	    },
	    resize: resize
	  };
	}
	if (typeof exports !== 'undefined') {
	  module.exports = autoResize;
	}

	//# 
	},{}],"copyPaste":[function(require,module,exports){
	"use strict";
	var instance;
	function copyPaste() {
	  if (!instance) {
	    instance = new CopyPasteClass();
	  } else if (instance.hasBeenDestroyed()) {
	    instance.init();
	  }
	  instance.refCounter++;
	  return instance;
	}
	if (typeof exports !== 'undefined') {
	  module.exports = copyPaste;
	}
	function CopyPasteClass() {
	  this.refCounter = 0;
	  this.init();
	}
	CopyPasteClass.prototype.init = function() {
	  var style,
	      parent;
	  this.copyCallbacks = [];
	  this.cutCallbacks = [];
	  this.pasteCallbacks = [];
	  parent = document.body;
	  if (document.getElementById('CopyPasteDiv')) {
	    this.elDiv = document.getElementById('CopyPasteDiv');
	    this.elTextarea = this.elDiv.firstChild;
	  } else {
	    this.elDiv = document.createElement('div');
	    this.elDiv.id = 'CopyPasteDiv';
	    style = this.elDiv.style;
	    style.position = 'fixed';
	    style.top = '-10000px';
	    style.left = '-10000px';
	    parent.appendChild(this.elDiv);
	    this.elTextarea = document.createElement('textarea');
	    this.elTextarea.className = 'copyPaste';
	    this.elTextarea.onpaste = function(event) {
	      var clipboardContents,
	          temp;
	      if ('WebkitAppearance' in document.documentElement.style) {
	        clipboardContents = event.clipboardData.getData("Text");
	        if (navigator.userAgent.indexOf('Safari') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {
	          temp = clipboardContents.split('\n');
	          if (temp[temp.length - 1] === '') {
	            temp.pop();
	          }
	          clipboardContents = temp.join('\n');
	        }
	        this.value = clipboardContents;
	        return false;
	      }
	    };
	    style = this.elTextarea.style;
	    style.width = '10000px';
	    style.height = '10000px';
	    style.overflow = 'hidden';
	    this.elDiv.appendChild(this.elTextarea);
	    if (typeof style.opacity !== 'undefined') {
	      style.opacity = 0;
	    }
	  }
	  this.onKeyDownRef = this.onKeyDown.bind(this);
	  document.documentElement.addEventListener('keydown', this.onKeyDownRef, false);
	};
	CopyPasteClass.prototype.onKeyDown = function(event) {
	  var _this = this,
	      isCtrlDown = false;
	  function isActiveElementEditable() {
	    var element = document.activeElement;
	    if (element.shadowRoot && element.shadowRoot.activeElement) {
	      element = element.shadowRoot.activeElement;
	    }
	    return ['INPUT', 'SELECT', 'TEXTAREA'].indexOf(element.nodeName) > -1 || element.contentEditable === 'true';
	  }
	  if (event.metaKey) {
	    isCtrlDown = true;
	  } else if (event.ctrlKey && navigator.userAgent.indexOf('Mac') === -1) {
	    isCtrlDown = true;
	  }
	  if (isCtrlDown) {
	    if (document.activeElement !== this.elTextarea && (this.getSelectionText() !== '' || isActiveElementEditable())) {
	      return;
	    }
	    this.selectNodeText(this.elTextarea);
	    setTimeout(function() {
	      if (document.activeElement !== _this.elTextarea) {
	        _this.selectNodeText(_this.elTextarea);
	      }
	    }, 0);
	  }
	  if (isCtrlDown && (event.keyCode === 67 || event.keyCode === 86 || event.keyCode === 88)) {
	    if (event.keyCode === 88) {
	      setTimeout(function() {
	        _this.triggerCut(event);
	      }, 0);
	    } else if (event.keyCode === 86) {
	      setTimeout(function() {
	        _this.triggerPaste(event);
	      }, 0);
	    }
	  }
	};
	CopyPasteClass.prototype.selectNodeText = function(element) {
	  if (element) {
	    element.select();
	  }
	};
	CopyPasteClass.prototype.getSelectionText = function() {
	  var text = '';
	  if (window.getSelection) {
	    text = window.getSelection().toString();
	  } else if (document.selection && document.selection.type !== 'Control') {
	    text = document.selection.createRange().text;
	  }
	  return text;
	};
	CopyPasteClass.prototype.copyable = function(string) {
	  if (typeof string !== 'string' && string.toString === void 0) {
	    throw new Error('copyable requires string parameter');
	  }
	  this.elTextarea.value = string;
	  this.selectNodeText(this.elTextarea);
	};
	CopyPasteClass.prototype.onCut = function(callback) {
	  this.cutCallbacks.push(callback);
	};
	CopyPasteClass.prototype.onPaste = function(callback) {
	  this.pasteCallbacks.push(callback);
	};
	CopyPasteClass.prototype.removeCallback = function(callback) {
	  var i,
	      len;
	  for (i = 0, len = this.copyCallbacks.length; i < len; i++) {
	    if (this.copyCallbacks[i] === callback) {
	      this.copyCallbacks.splice(i, 1);
	      return true;
	    }
	  }
	  for (i = 0, len = this.cutCallbacks.length; i < len; i++) {
	    if (this.cutCallbacks[i] === callback) {
	      this.cutCallbacks.splice(i, 1);
	      return true;
	    }
	  }
	  for (i = 0, len = this.pasteCallbacks.length; i < len; i++) {
	    if (this.pasteCallbacks[i] === callback) {
	      this.pasteCallbacks.splice(i, 1);
	      return true;
	    }
	  }
	  return false;
	};
	CopyPasteClass.prototype.triggerCut = function(event) {
	  var _this = this;
	  if (_this.cutCallbacks) {
	    setTimeout(function() {
	      for (var i = 0,
	          len = _this.cutCallbacks.length; i < len; i++) {
	        _this.cutCallbacks[i](event);
	      }
	    }, 50);
	  }
	};
	CopyPasteClass.prototype.triggerPaste = function(event, string) {
	  var _this = this;
	  if (_this.pasteCallbacks) {
	    setTimeout(function() {
	      var val = string || _this.elTextarea.value;
	      for (var i = 0,
	          len = _this.pasteCallbacks.length; i < len; i++) {
	        _this.pasteCallbacks[i](val, event);
	      }
	    }, 50);
	  }
	};
	CopyPasteClass.prototype.destroy = function() {
	  if (!this.hasBeenDestroyed() && --this.refCounter === 0) {
	    if (this.elDiv && this.elDiv.parentNode) {
	      this.elDiv.parentNode.removeChild(this.elDiv);
	      this.elDiv = null;
	      this.elTextarea = null;
	    }
	    document.documentElement.removeEventListener('keydown', this.onKeyDownRef);
	    this.onKeyDownRef = null;
	  }
	};
	CopyPasteClass.prototype.hasBeenDestroyed = function() {
	  return !this.refCounter;
	};

	//# 
	},{}],"es6collections":[function(require,module,exports){
	"use strict";
	(function(exports) {
	  'use strict';
	  var i;
	  var defineProperty = Object.defineProperty,
	      is = function(a, b) {
	        return isNaN(a) ? isNaN(b) : a === b;
	      };
	  if (typeof WeakMap == 'undefined') {
	    exports.WeakMap = createCollection({
	      'delete': sharedDelete,
	      clear: sharedClear,
	      get: sharedGet,
	      has: mapHas,
	      set: sharedSet
	    }, true);
	  }
	  if (typeof Map == 'undefined') {
	    exports.Map = createCollection({
	      'delete': sharedDelete,
	      has: mapHas,
	      get: sharedGet,
	      set: sharedSet,
	      keys: sharedKeys,
	      values: sharedValues,
	      entries: mapEntries,
	      forEach: sharedForEach,
	      clear: sharedClear
	    });
	  }
	  if (typeof Set == 'undefined') {
	    exports.Set = createCollection({
	      has: setHas,
	      add: sharedAdd,
	      'delete': sharedDelete,
	      clear: sharedClear,
	      keys: sharedValues,
	      values: sharedValues,
	      entries: setEntries,
	      forEach: sharedForEach
	    });
	  }
	  if (typeof WeakSet == 'undefined') {
	    exports.WeakSet = createCollection({
	      'delete': sharedDelete,
	      add: sharedAdd,
	      clear: sharedClear,
	      has: setHas
	    }, true);
	  }
	  function createCollection(proto, objectOnly) {
	    function Collection(a) {
	      if (!this || this.constructor !== Collection)
	        return new Collection(a);
	      this._keys = [];
	      this._values = [];
	      this._itp = [];
	      this.objectOnly = objectOnly;
	      if (a)
	        init.call(this, a);
	    }
	    if (!objectOnly) {
	      defineProperty(proto, 'size', {get: sharedSize});
	    }
	    proto.constructor = Collection;
	    Collection.prototype = proto;
	    return Collection;
	  }
	  function init(a) {
	    var i;
	    if (this.add)
	      a.forEach(this.add, this);
	    else
	      a.forEach(function(a) {
	        this.set(a[0], a[1]);
	      }, this);
	  }
	  function sharedDelete(key) {
	    if (this.has(key)) {
	      this._keys.splice(i, 1);
	      this._values.splice(i, 1);
	      this._itp.forEach(function(p) {
	        if (i < p[0])
	          p[0]--;
	      });
	    }
	    return -1 < i;
	  }
	  ;
	  function sharedGet(key) {
	    return this.has(key) ? this._values[i] : undefined;
	  }
	  function has(list, key) {
	    if (this.objectOnly && key !== Object(key))
	      throw new TypeError("Invalid value used as weak collection key");
	    if (key != key || key === 0)
	      for (i = list.length; i-- && !is(list[i], key); ) {}
	    else
	      i = list.indexOf(key);
	    return -1 < i;
	  }
	  function setHas(value) {
	    return has.call(this, this._values, value);
	  }
	  function mapHas(value) {
	    return has.call(this, this._keys, value);
	  }
	  function sharedSet(key, value) {
	    this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;
	    return this;
	  }
	  function sharedAdd(value) {
	    if (!this.has(value))
	      this._values.push(value);
	    return this;
	  }
	  function sharedClear() {
	    this._values.length = 0;
	  }
	  function sharedKeys() {
	    return sharedIterator(this._itp, this._keys);
	  }
	  function sharedValues() {
	    return sharedIterator(this._itp, this._values);
	  }
	  function mapEntries() {
	    return sharedIterator(this._itp, this._keys, this._values);
	  }
	  function setEntries() {
	    return sharedIterator(this._itp, this._values, this._values);
	  }
	  function sharedIterator(itp, array, array2) {
	    var p = [0],
	        done = false;
	    itp.push(p);
	    return {next: function() {
	        var v,
	            k = p[0];
	        if (!done && k < array.length) {
	          v = array2 ? [array[k], array2[k]] : array[k];
	          p[0]++;
	        } else {
	          done = true;
	          itp.splice(itp.indexOf(p), 1);
	        }
	        return {
	          done: done,
	          value: v
	        };
	      }};
	  }
	  function sharedSize() {
	    return this._values.length;
	  }
	  function sharedForEach(callback, context) {
	    var it = this.entries();
	    for (; ; ) {
	      var r = it.next();
	      if (r.done)
	        break;
	      callback.call(context, r.value[1], r.value[0], this);
	    }
	  }
	})(typeof exports != 'undefined' && typeof global != 'undefined' ? global : window);

	//# 
	},{}],"jsonpatch":[function(require,module,exports){
	"use strict";
	var jsonpatch;
	(function(jsonpatch) {
	  var objOps = {
	    add: function(obj, key) {
	      obj[key] = this.value;
	      return true;
	    },
	    remove: function(obj, key) {
	      delete obj[key];
	      return true;
	    },
	    replace: function(obj, key) {
	      obj[key] = this.value;
	      return true;
	    },
	    move: function(obj, key, tree) {
	      var temp = {
	        op: "_get",
	        path: this.from
	      };
	      apply(tree, [temp]);
	      apply(tree, [{
	        op: "remove",
	        path: this.from
	      }]);
	      apply(tree, [{
	        op: "add",
	        path: this.path,
	        value: temp.value
	      }]);
	      return true;
	    },
	    copy: function(obj, key, tree) {
	      var temp = {
	        op: "_get",
	        path: this.from
	      };
	      apply(tree, [temp]);
	      apply(tree, [{
	        op: "add",
	        path: this.path,
	        value: temp.value
	      }]);
	      return true;
	    },
	    test: function(obj, key) {
	      return (JSON.stringify(obj[key]) === JSON.stringify(this.value));
	    },
	    _get: function(obj, key) {
	      this.value = obj[key];
	    }
	  };
	  var arrOps = {
	    add: function(arr, i) {
	      arr.splice(i, 0, this.value);
	      return true;
	    },
	    remove: function(arr, i) {
	      arr.splice(i, 1);
	      return true;
	    },
	    replace: function(arr, i) {
	      arr[i] = this.value;
	      return true;
	    },
	    move: objOps.move,
	    copy: objOps.copy,
	    test: objOps.test,
	    _get: objOps._get
	  };
	  var observeOps = {
	    add: function(patches, path) {
	      var patch = {
	        op: "add",
	        path: path + escapePathComponent(this.name),
	        value: this.object[this.name]
	      };
	      patches.push(patch);
	    },
	    'delete': function(patches, path) {
	      var patch = {
	        op: "remove",
	        path: path + escapePathComponent(this.name)
	      };
	      patches.push(patch);
	    },
	    update: function(patches, path) {
	      var patch = {
	        op: "replace",
	        path: path + escapePathComponent(this.name),
	        value: this.object[this.name]
	      };
	      patches.push(patch);
	    }
	  };
	  function escapePathComponent(str) {
	    if (str.indexOf('/') === -1 && str.indexOf('~') === -1) {
	      return str;
	    }
	    return str.replace(/~/g, '~0').replace(/\//g, '~1');
	  }
	  function _getPathRecursive(root, obj) {
	    var found;
	    for (var key in root) {
	      if (root.hasOwnProperty(key)) {
	        if (root[key] === obj) {
	          return escapePathComponent(key) + '/';
	        } else if (typeof root[key] === 'object') {
	          found = _getPathRecursive(root[key], obj);
	          if (found != '') {
	            return escapePathComponent(key) + '/' + found;
	          }
	        }
	      }
	    }
	    return '';
	  }
	  function getPath(root, obj) {
	    if (root === obj) {
	      return '/';
	    }
	    var path = _getPathRecursive(root, obj);
	    if (path === '') {
	      throw new Error("Object not found in root");
	    }
	    return '/' + path;
	  }
	  var beforeDict = [];
	  jsonpatch.intervals;
	  var Mirror = (function() {
	    function Mirror(obj) {
	      this.observers = [];
	      this.obj = obj;
	    }
	    return Mirror;
	  })();
	  var ObserverInfo = (function() {
	    function ObserverInfo(callback, observer) {
	      this.callback = callback;
	      this.observer = observer;
	    }
	    return ObserverInfo;
	  })();
	  function getMirror(obj) {
	    for (var i = 0,
	        ilen = beforeDict.length; i < ilen; i++) {
	      if (beforeDict[i].obj === obj) {
	        return beforeDict[i];
	      }
	    }
	  }
	  function removeMirror(obj) {
	    for (var i = 0,
	        ilen = beforeDict.length; i < ilen; i++) {
	      if (beforeDict[i] === obj) {
	        beforeDict.splice(i, 1);
	      }
	    }
	  }
	  function getObserverFromMirror(mirror, callback) {
	    for (var j = 0,
	        jlen = mirror.observers.length; j < jlen; j++) {
	      if (mirror.observers[j].callback === callback) {
	        return mirror.observers[j].observer;
	      }
	    }
	  }
	  function removeObserverFromMirror(mirror, observer) {
	    for (var j = 0,
	        jlen = mirror.observers.length; j < jlen; j++) {
	      if (mirror.observers[j].observer === observer) {
	        mirror.observers.splice(j, 1);
	        if (!mirror.observers.length) {
	          removeMirror(mirror);
	        }
	        return;
	      }
	    }
	  }
	  function unobserve(root, observer) {
	    generate(observer);
	    if (Object.observe) {
	      _unobserve(observer, root);
	    } else {
	      clearTimeout(observer.next);
	    }
	    var mirror = getMirror(root);
	    removeObserverFromMirror(mirror, observer);
	  }
	  jsonpatch.unobserve = unobserve;
	  function observe(obj, callback) {
	    var patches = [];
	    var root = obj;
	    var observer;
	    var mirror = getMirror(obj);
	    if (!mirror) {
	      mirror = new Mirror(obj);
	      beforeDict.push(mirror);
	    } else {
	      observer = getObserverFromMirror(mirror, callback);
	    }
	    if (observer) {
	      return observer;
	    }
	    if (Object.observe) {
	      observer = function(arr) {
	        _unobserve(observer, obj);
	        _observe(observer, obj);
	        var a = 0,
	            alen = arr.length;
	        while (a < alen) {
	          if (!(arr[a].name === 'length' && _isArray(arr[a].object)) && !(arr[a].name === '__Jasmine_been_here_before__')) {
	            var type = arr[a].type;
	            switch (type) {
	              case 'new':
	                type = 'add';
	                break;
	              case 'deleted':
	                type = 'delete';
	                break;
	              case 'updated':
	                type = 'update';
	                break;
	            }
	            observeOps[type].call(arr[a], patches, getPath(root, arr[a].object));
	          }
	          a++;
	        }
	        if (patches) {
	          if (callback) {
	            callback(patches);
	          }
	        }
	        observer.patches = patches;
	        patches = [];
	      };
	    } else {
	      observer = {};
	      mirror.value = JSON.parse(JSON.stringify(obj));
	      if (callback) {
	        observer.callback = callback;
	        observer.next = null;
	        var intervals = this.intervals || [100, 1000, 10000, 60000];
	        var currentInterval = 0;
	        var dirtyCheck = function() {
	          generate(observer);
	        };
	        var fastCheck = function() {
	          clearTimeout(observer.next);
	          observer.next = setTimeout(function() {
	            dirtyCheck();
	            currentInterval = 0;
	            observer.next = setTimeout(slowCheck, intervals[currentInterval++]);
	          }, 0);
	        };
	        var slowCheck = function() {
	          dirtyCheck();
	          if (currentInterval == intervals.length) {
	            currentInterval = intervals.length - 1;
	          }
	          observer.next = setTimeout(slowCheck, intervals[currentInterval++]);
	        };
	        if (typeof window !== 'undefined') {
	          if (window.addEventListener) {
	            window.addEventListener('mousedown', fastCheck);
	            window.addEventListener('mouseup', fastCheck);
	            window.addEventListener('keydown', fastCheck);
	          } else {
	            window.attachEvent('onmousedown', fastCheck);
	            window.attachEvent('onmouseup', fastCheck);
	            window.attachEvent('onkeydown', fastCheck);
	          }
	        }
	        observer.next = setTimeout(slowCheck, intervals[currentInterval++]);
	      }
	    }
	    observer.patches = patches;
	    observer.object = obj;
	    mirror.observers.push(new ObserverInfo(callback, observer));
	    return _observe(observer, obj);
	  }
	  jsonpatch.observe = observe;
	  function _observe(observer, obj) {
	    if (Object.observe) {
	      Object.observe(obj, observer);
	      for (var key in obj) {
	        if (obj.hasOwnProperty(key)) {
	          var v = obj[key];
	          if (v && typeof(v) === "object") {
	            _observe(observer, v);
	          }
	        }
	      }
	    }
	    return observer;
	  }
	  function _unobserve(observer, obj) {
	    if (Object.observe) {
	      Object.unobserve(obj, observer);
	      for (var key in obj) {
	        if (obj.hasOwnProperty(key)) {
	          var v = obj[key];
	          if (v && typeof(v) === "object") {
	            _unobserve(observer, v);
	          }
	        }
	      }
	    }
	    return observer;
	  }
	  function generate(observer) {
	    if (Object.observe) {
	      Object.deliverChangeRecords(observer);
	    } else {
	      var mirror;
	      for (var i = 0,
	          ilen = beforeDict.length; i < ilen; i++) {
	        if (beforeDict[i].obj === observer.object) {
	          mirror = beforeDict[i];
	          break;
	        }
	      }
	      if (mirror) {
	        _generate(mirror.value, observer.object, observer.patches, "");
	      }
	    }
	    var temp = observer.patches;
	    if (temp.length > 0) {
	      observer.patches = [];
	      if (observer.callback) {
	        observer.callback(temp);
	      }
	    }
	    return temp;
	  }
	  jsonpatch.generate = generate;
	  var _objectKeys;
	  if (Object.keys) {
	    _objectKeys = Object.keys;
	  } else {
	    _objectKeys = function(obj) {
	      var keys = [];
	      for (var o in obj) {
	        if (obj.hasOwnProperty(o)) {
	          keys.push(o);
	        }
	      }
	      return keys;
	    };
	  }
	  function _generate(mirror, obj, patches, path) {
	    var newKeys = _objectKeys(obj);
	    var oldKeys = _objectKeys(mirror);
	    var changed = false;
	    var deleted = false;
	    for (var t = oldKeys.length - 1; t >= 0; t--) {
	      var key = oldKeys[t];
	      var oldVal = mirror[key];
	      if (obj.hasOwnProperty(key)) {
	        var newVal = obj[key];
	        if (oldVal instanceof Object) {
	          _generate(oldVal, newVal, patches, path + "/" + escapePathComponent(key));
	        } else {
	          if (oldVal != newVal) {
	            changed = true;
	            patches.push({
	              op: "replace",
	              path: path + "/" + escapePathComponent(key),
	              value: newVal
	            });
	            mirror[key] = newVal;
	          }
	        }
	      } else {
	        patches.push({
	          op: "remove",
	          path: path + "/" + escapePathComponent(key)
	        });
	        delete mirror[key];
	        deleted = true;
	      }
	    }
	    if (!deleted && newKeys.length == oldKeys.length) {
	      return;
	    }
	    for (var t = 0; t < newKeys.length; t++) {
	      var key = newKeys[t];
	      if (!mirror.hasOwnProperty(key)) {
	        patches.push({
	          op: "add",
	          path: path + "/" + escapePathComponent(key),
	          value: obj[key]
	        });
	        mirror[key] = JSON.parse(JSON.stringify(obj[key]));
	      }
	    }
	  }
	  var _isArray;
	  if (Array.isArray) {
	    _isArray = Array.isArray;
	  } else {
	    _isArray = function(obj) {
	      return obj.push && typeof obj.length === 'number';
	    };
	  }
	  function apply(tree, patches) {
	    var result = false,
	        p = 0,
	        plen = patches.length,
	        patch;
	    while (p < plen) {
	      patch = patches[p];
	      var keys = patch.path.split('/');
	      var obj = tree;
	      var t = 1;
	      var len = keys.length;
	      while (true) {
	        if (_isArray(obj)) {
	          var index = parseInt(keys[t], 10);
	          t++;
	          if (t >= len) {
	            result = arrOps[patch.op].call(patch, obj, index, tree);
	            break;
	          }
	          obj = obj[index];
	        } else {
	          var key = keys[t];
	          if (key.indexOf('~') != -1) {
	            key = key.replace(/~1/g, '/').replace(/~0/g, '~');
	          }
	          t++;
	          if (t >= len) {
	            result = objOps[patch.op].call(patch, obj, key, tree);
	            break;
	          }
	          obj = obj[key];
	        }
	      }
	      p++;
	    }
	    return result;
	  }
	  jsonpatch.apply = apply;
	})(jsonpatch || (jsonpatch = {}));
	if (typeof exports !== "undefined") {
	  exports.apply = jsonpatch.apply;
	  exports.observe = jsonpatch.observe;
	  exports.unobserve = jsonpatch.unobserve;
	  exports.generate = jsonpatch.generate;
	}

	//# 
	},{}],"moment":[function(require,module,exports){
	//! moment.js
	//! version : 2.10.6
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	(function (global, factory) {
	    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (typeof from._isAMomentObject !== 'undefined') {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (typeof from._i !== 'undefined') {
	            to._i = from._i;
	        }
	        if (typeof from._f !== 'undefined') {
	            to._f = from._f;
	        }
	        if (typeof from._l !== 'undefined') {
	            to._l = from._l;
	        }
	        if (typeof from._strict !== 'undefined') {
	            to._strict = from._strict;
	        }
	        if (typeof from._tzm !== 'undefined') {
	            to._tzm = from._tzm;
	        }
	        if (typeof from._isUTC !== 'undefined') {
	            to._isUTC = from._isUTC;
	        }
	        if (typeof from._offset !== 'undefined') {
	            to._offset = from._offset;
	        }
	        if (typeof from._pf !== 'undefined') {
	            to._pf = getParsingFlags(from);
	        }
	        if (typeof from._locale !== 'undefined') {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (typeof val !== 'undefined') {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function Locale() {
	    }

	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && typeof module !== 'undefined' &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                require('./locale/' + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (typeof values === 'undefined') {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, values) {
	        if (values !== null) {
	            values.abbr = name;
	            locales[name] = locales[name] || new Locale();
	            locales[name].set(values);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function get_set__set (mom, unit, value) {
	        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (typeof this[units] === 'function') {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '';
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

	    var regexes = {};

	    function isFunction (sth) {
	        // https://github.com/moment/moment/issues/2325
	        return typeof sth === 'function' &&
	            Object.prototype.toString.call(sth) === '[object Function]';
	    }


	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  matchWord);
	    addRegexToken('MMMM', matchWord);

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m) {
	        return this._months[m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m) {
	        return this._monthsShort[m.month()];
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (firstTime) {
	                warn(msg + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;

	    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
	        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
	        ['YYYY-DDD', /\d{4}-\d{3}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
	        ['HH:mm', /(T| )\d\d:\d\d/],
	        ['HH', /(T| )\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = from_string__isoRegex.exec(string);

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    config._f = isoDates[i][0];
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    // match[6] should be 'T' or space
	                    config._f += (match[6] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(matchOffset)) {
	                config._f += 'Z';
	            }
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', false);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;


	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;
	        if (d < firstDayOfWeek) {
	            d += 7;
	        }

	        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

	        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
	        }
	        return [now.getFullYear(), now.getMonth(), now.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < dow) {
	                    ++week;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }

	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date();
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             return other < this ? this : other;
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            return other > this ? this : other;
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 36e5; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchOffset);
	    addRegexToken('ZZ', matchOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(string) {
	        var matches = ((string || '').match(matchOffset) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(+res._d + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(input);
	            }
	            if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (typeof this._isDSTShifted !== 'undefined') {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return !this._isUTC;
	    }

	    function isUtcOffset () {
	        return this._isUTC;
	    }

	    function isUtc () {
	        return this._isUTC && this._offset === 0;
	    }

	    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = create__isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                d : parseIso(match[4], sign),
	                h : parseIso(match[5], sign),
	                m : parseIso(match[6], sign),
	                s : parseIso(match[7], sign),
	                w : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this > +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return inputMs < +this.clone().startOf(units);
	        }
	    }

	    function isBefore (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this < +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return +this.clone().endOf(units) < inputMs;
	        }
	    }

	    function isBetween (from, to, units) {
	        return this.isAfter(from, units) && this.isBefore(to, units);
	    }

	    function isSame (input, units) {
	        var inputMs;
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this === +input;
	        } else {
	            inputMs = +local__createLocal(input);
	            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
	        }
	    }

	    function diff (input, units, asFloat) {
	        var that = cloneWithOffset(input, this),
	            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
	            delta, output;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        return -(wholeMonthDiff + adjust);
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if ('function' === typeof Date.prototype.toISOString) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return +this._d - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(+this / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(+this) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function weeksInYear(year, dow, doy) {
	        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    // MOMENTS

	    function getSetWeekYear (input) {
	        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getSetISOWeekYear (input) {
	        var year = weekOfYear(this, 1, 4).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    addFormatToken('Q', 0, 0, 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   matchWord);
	    addRegexToken('ddd',  matchWord);
	    addRegexToken('dddd', matchWord);

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
	        var weekday = config._locale.weekdaysParse(input);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m) {
	        return this._weekdays[m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function localeWeekdaysParse (weekdayName) {
	        var i, mom, regex;

	        this._weekdaysParse = this._weekdaysParse || [];

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            if (!this._weekdaysParse[i]) {
	                mom = local__createLocal([2000, 1]).day(i);
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, function () {
	        return this.hours() % 12 || 12;
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add          = add_subtract__add;
	    momentPrototype__proto.calendar     = moment_calendar__calendar;
	    momentPrototype__proto.clone        = clone;
	    momentPrototype__proto.diff         = diff;
	    momentPrototype__proto.endOf        = endOf;
	    momentPrototype__proto.format       = format;
	    momentPrototype__proto.from         = from;
	    momentPrototype__proto.fromNow      = fromNow;
	    momentPrototype__proto.to           = to;
	    momentPrototype__proto.toNow        = toNow;
	    momentPrototype__proto.get          = getSet;
	    momentPrototype__proto.invalidAt    = invalidAt;
	    momentPrototype__proto.isAfter      = isAfter;
	    momentPrototype__proto.isBefore     = isBefore;
	    momentPrototype__proto.isBetween    = isBetween;
	    momentPrototype__proto.isSame       = isSame;
	    momentPrototype__proto.isValid      = moment_valid__isValid;
	    momentPrototype__proto.lang         = lang;
	    momentPrototype__proto.locale       = locale;
	    momentPrototype__proto.localeData   = localeData;
	    momentPrototype__proto.max          = prototypeMax;
	    momentPrototype__proto.min          = prototypeMin;
	    momentPrototype__proto.parsingFlags = parsingFlags;
	    momentPrototype__proto.set          = getSet;
	    momentPrototype__proto.startOf      = startOf;
	    momentPrototype__proto.subtract     = add_subtract__subtract;
	    momentPrototype__proto.toArray      = toArray;
	    momentPrototype__proto.toObject     = toObject;
	    momentPrototype__proto.toDate       = toDate;
	    momentPrototype__proto.toISOString  = moment_format__toISOString;
	    momentPrototype__proto.toJSON       = moment_format__toISOString;
	    momentPrototype__proto.toString     = toString;
	    momentPrototype__proto.unix         = unix;
	    momentPrototype__proto.valueOf      = to_type__valueOf;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return typeof output === 'function' ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (typeof output === 'function') ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (typeof prop === 'function') {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months       =        localeMonths;
	    prototype__proto._months      = defaultLocaleMonths;
	    prototype__proto.monthsShort  =        localeMonthsShort;
	    prototype__proto._monthsShort = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse  =        localeMonthsParse;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function list (format, index, field, count, setter) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, setter);
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < count; i++) {
	            out[i] = lists__get(format, i, field, setter);
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return list(format, index, 'months', 12, 'month');
	    }

	    function lists__listMonthsShort (format, index) {
	        return list(format, index, 'monthsShort', 12, 'month');
	    }

	    function lists__listWeekdays (format, index) {
	        return list(format, index, 'weekdays', 7, 'day');
	    }

	    function lists__listWeekdaysShort (format, index) {
	        return list(format, index, 'weekdaysShort', 7, 'day');
	    }

	    function lists__listWeekdaysMin (format, index) {
	        return list(format, index, 'weekdaysMin', 7, 'day');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes === 1          && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   === 1          && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    === 1          && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  === 1          && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   === 1          && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.10.6';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	},{}],"numeral":[function(require,module,exports){
	"use strict";
	(function() {
	  var numeral,
	      VERSION = '1.5.3',
	      languages = {},
	      currentLanguage = 'en',
	      zeroFormat = null,
	      defaultFormat = '0,0',
	      hasModule = (typeof module !== 'undefined' && module.exports);
	  function Numeral(number) {
	    this._value = number;
	  }
	  function toFixed(value, precision, roundingFunction, optionals) {
	    var power = Math.pow(10, precision),
	        optionalsRegExp,
	        output;
	    output = (roundingFunction(value * power) / power).toFixed(precision);
	    if (optionals) {
	      optionalsRegExp = new RegExp('0{1,' + optionals + '}$');
	      output = output.replace(optionalsRegExp, '');
	    }
	    return output;
	  }
	  function formatNumeral(n, format, roundingFunction) {
	    var output;
	    if (format.indexOf('$') > -1) {
	      output = formatCurrency(n, format, roundingFunction);
	    } else if (format.indexOf('%') > -1) {
	      output = formatPercentage(n, format, roundingFunction);
	    } else if (format.indexOf(':') > -1) {
	      output = formatTime(n, format);
	    } else {
	      output = formatNumber(n._value, format, roundingFunction);
	    }
	    return output;
	  }
	  function unformatNumeral(n, string) {
	    var stringOriginal = string,
	        thousandRegExp,
	        millionRegExp,
	        billionRegExp,
	        trillionRegExp,
	        suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	        bytesMultiplier = false,
	        power;
	    if (string.indexOf(':') > -1) {
	      n._value = unformatTime(string);
	    } else {
	      if (string === zeroFormat) {
	        n._value = 0;
	      } else {
	        if (languages[currentLanguage].delimiters.decimal !== '.') {
	          string = string.replace(/\./g, '').replace(languages[currentLanguage].delimiters.decimal, '.');
	        }
	        thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	        millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	        billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	        trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	        for (power = 0; power <= suffixes.length; power++) {
	          bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;
	          if (bytesMultiplier) {
	            break;
	          }
	        }
	        n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2) ? 1 : -1) * Number(string.replace(/[^0-9\.]+/g, ''));
	        n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;
	      }
	    }
	    return n._value;
	  }
	  function formatCurrency(n, format, roundingFunction) {
	    var symbolIndex = format.indexOf('$'),
	        openParenIndex = format.indexOf('('),
	        minusSignIndex = format.indexOf('-'),
	        space = '',
	        spliceIndex,
	        output;
	    if (format.indexOf(' $') > -1) {
	      space = ' ';
	      format = format.replace(' $', '');
	    } else if (format.indexOf('$ ') > -1) {
	      space = ' ';
	      format = format.replace('$ ', '');
	    } else {
	      format = format.replace('$', '');
	    }
	    output = formatNumber(n._value, format, roundingFunction);
	    if (symbolIndex <= 1) {
	      if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {
	        output = output.split('');
	        spliceIndex = 1;
	        if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex) {
	          spliceIndex = 0;
	        }
	        output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);
	        output = output.join('');
	      } else {
	        output = languages[currentLanguage].currency.symbol + space + output;
	      }
	    } else {
	      if (output.indexOf(')') > -1) {
	        output = output.split('');
	        output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);
	        output = output.join('');
	      } else {
	        output = output + space + languages[currentLanguage].currency.symbol;
	      }
	    }
	    return output;
	  }
	  function formatPercentage(n, format, roundingFunction) {
	    var space = '',
	        output,
	        value = n._value * 100;
	    if (format.indexOf(' %') > -1) {
	      space = ' ';
	      format = format.replace(' %', '');
	    } else {
	      format = format.replace('%', '');
	    }
	    output = formatNumber(value, format, roundingFunction);
	    if (output.indexOf(')') > -1) {
	      output = output.split('');
	      output.splice(-1, 0, space + '%');
	      output = output.join('');
	    } else {
	      output = output + space + '%';
	    }
	    return output;
	  }
	  function formatTime(n) {
	    var hours = Math.floor(n._value / 60 / 60),
	        minutes = Math.floor((n._value - (hours * 60 * 60)) / 60),
	        seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));
	    return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);
	  }
	  function unformatTime(string) {
	    var timeArray = string.split(':'),
	        seconds = 0;
	    if (timeArray.length === 3) {
	      seconds = seconds + (Number(timeArray[0]) * 60 * 60);
	      seconds = seconds + (Number(timeArray[1]) * 60);
	      seconds = seconds + Number(timeArray[2]);
	    } else if (timeArray.length === 2) {
	      seconds = seconds + (Number(timeArray[0]) * 60);
	      seconds = seconds + Number(timeArray[1]);
	    }
	    return Number(seconds);
	  }
	  function formatNumber(value, format, roundingFunction) {
	    var negP = false,
	        signed = false,
	        optDec = false,
	        abbr = '',
	        abbrK = false,
	        abbrM = false,
	        abbrB = false,
	        abbrT = false,
	        abbrForce = false,
	        bytes = '',
	        ord = '',
	        abs = Math.abs(value),
	        suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	        min,
	        max,
	        power,
	        w,
	        precision,
	        thousands,
	        d = '',
	        neg = false;
	    if (value === 0 && zeroFormat !== null) {
	      return zeroFormat;
	    } else {
	      if (format.indexOf('(') > -1) {
	        negP = true;
	        format = format.slice(1, -1);
	      } else if (format.indexOf('+') > -1) {
	        signed = true;
	        format = format.replace(/\+/g, '');
	      }
	      if (format.indexOf('a') > -1) {
	        abbrK = format.indexOf('aK') >= 0;
	        abbrM = format.indexOf('aM') >= 0;
	        abbrB = format.indexOf('aB') >= 0;
	        abbrT = format.indexOf('aT') >= 0;
	        abbrForce = abbrK || abbrM || abbrB || abbrT;
	        if (format.indexOf(' a') > -1) {
	          abbr = ' ';
	          format = format.replace(' a', '');
	        } else {
	          format = format.replace('a', '');
	        }
	        if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {
	          abbr = abbr + languages[currentLanguage].abbreviations.trillion;
	          value = value / Math.pow(10, 12);
	        } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {
	          abbr = abbr + languages[currentLanguage].abbreviations.billion;
	          value = value / Math.pow(10, 9);
	        } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {
	          abbr = abbr + languages[currentLanguage].abbreviations.million;
	          value = value / Math.pow(10, 6);
	        } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {
	          abbr = abbr + languages[currentLanguage].abbreviations.thousand;
	          value = value / Math.pow(10, 3);
	        }
	      }
	      if (format.indexOf('b') > -1) {
	        if (format.indexOf(' b') > -1) {
	          bytes = ' ';
	          format = format.replace(' b', '');
	        } else {
	          format = format.replace('b', '');
	        }
	        for (power = 0; power <= suffixes.length; power++) {
	          min = Math.pow(1024, power);
	          max = Math.pow(1024, power + 1);
	          if (value >= min && value < max) {
	            bytes = bytes + suffixes[power];
	            if (min > 0) {
	              value = value / min;
	            }
	            break;
	          }
	        }
	      }
	      if (format.indexOf('o') > -1) {
	        if (format.indexOf(' o') > -1) {
	          ord = ' ';
	          format = format.replace(' o', '');
	        } else {
	          format = format.replace('o', '');
	        }
	        ord = ord + languages[currentLanguage].ordinal(value);
	      }
	      if (format.indexOf('[.]') > -1) {
	        optDec = true;
	        format = format.replace('[.]', '.');
	      }
	      w = value.toString().split('.')[0];
	      precision = format.split('.')[1];
	      thousands = format.indexOf(',');
	      if (precision) {
	        if (precision.indexOf('[') > -1) {
	          precision = precision.replace(']', '');
	          precision = precision.split('[');
	          d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
	        } else {
	          d = toFixed(value, precision.length, roundingFunction);
	        }
	        w = d.split('.')[0];
	        if (d.split('.')[1].length) {
	          d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];
	        } else {
	          d = '';
	        }
	        if (optDec && Number(d.slice(1)) === 0) {
	          d = '';
	        }
	      } else {
	        w = toFixed(value, null, roundingFunction);
	      }
	      if (w.indexOf('-') > -1) {
	        w = w.slice(1);
	        neg = true;
	      }
	      if (thousands > -1) {
	        w = w.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);
	      }
	      if (format.indexOf('.') === 0) {
	        w = '';
	      }
	      return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');
	    }
	  }
	  numeral = function(input) {
	    if (numeral.isNumeral(input)) {
	      input = input.value();
	    } else if (input === 0 || typeof input === 'undefined') {
	      input = 0;
	    } else if (!Number(input)) {
	      input = numeral.fn.unformat(input);
	    }
	    return new Numeral(Number(input));
	  };
	  numeral.version = VERSION;
	  numeral.isNumeral = function(obj) {
	    return obj instanceof Numeral;
	  };
	  numeral.language = function(key, values) {
	    if (!key) {
	      return currentLanguage;
	    }
	    if (key && !values) {
	      if (!languages[key]) {
	        throw new Error('Unknown language : ' + key);
	      }
	      currentLanguage = key;
	    }
	    if (values || !languages[key]) {
	      loadLanguage(key, values);
	    }
	    return numeral;
	  };
	  numeral.languageData = function(key) {
	    if (!key) {
	      return languages[currentLanguage];
	    }
	    if (!languages[key]) {
	      throw new Error('Unknown language : ' + key);
	    }
	    return languages[key];
	  };
	  numeral.language('en', {
	    delimiters: {
	      thousands: ',',
	      decimal: '.'
	    },
	    abbreviations: {
	      thousand: 'k',
	      million: 'm',
	      billion: 'b',
	      trillion: 't'
	    },
	    ordinal: function(number) {
	      var b = number % 10;
	      return (~~(number % 100 / 10) === 1) ? 'th' : (b === 1) ? 'st' : (b === 2) ? 'nd' : (b === 3) ? 'rd' : 'th';
	    },
	    currency: {symbol: '$'}
	  });
	  numeral.zeroFormat = function(format) {
	    zeroFormat = typeof(format) === 'string' ? format : null;
	  };
	  numeral.defaultFormat = function(format) {
	    defaultFormat = typeof(format) === 'string' ? format : '0.0';
	  };
	  numeral.validate = function(val, culture) {
	    var _decimalSep,
	        _thousandSep,
	        _currSymbol,
	        _valArray,
	        _abbrObj,
	        _thousandRegEx,
	        languageData,
	        temp;
	    if (typeof val !== 'string') {
	      val += '';
	      if (console.warn) {
	        console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);
	      }
	    }
	    val = val.trim();
	    if (val === '') {
	      return false;
	    }
	    val = val.replace(/^[+-]?/, '');
	    try {
	      languageData = numeral.languageData(culture);
	    } catch (e) {
	      languageData = numeral.languageData(numeral.language());
	    }
	    _currSymbol = languageData.currency.symbol;
	    _abbrObj = languageData.abbreviations;
	    _decimalSep = languageData.delimiters.decimal;
	    if (languageData.delimiters.thousands === '.') {
	      _thousandSep = '\\.';
	    } else {
	      _thousandSep = languageData.delimiters.thousands;
	    }
	    temp = val.match(/^[^\d\.\,]+/);
	    if (temp !== null) {
	      val = val.substr(1);
	      if (temp[0] !== _currSymbol) {
	        return false;
	      }
	    }
	    temp = val.match(/[^\d]+$/);
	    if (temp !== null) {
	      val = val.slice(0, -1);
	      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {
	        return false;
	      }
	    }
	    if (!!val.match(/^\d+$/)) {
	      return true;
	    }
	    _thousandRegEx = new RegExp(_thousandSep + '{2}');
	    if (!val.match(/[^\d.,]/g)) {
	      _valArray = val.split(_decimalSep);
	      if (_valArray.length > 2) {
	        return false;
	      } else {
	        if (_valArray.length < 2) {
	          return (!!_valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx));
	        } else {
	          if (_valArray[0] === '') {
	            return (!_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\d+$/));
	          } else if (_valArray[0].length === 1) {
	            return (!!_valArray[0].match(/^\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\d+$/));
	          } else {
	            return (!!_valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\d+$/));
	          }
	        }
	      }
	    }
	    return false;
	  };
	  function loadLanguage(key, values) {
	    languages[key] = values;
	  }
	  if ('function' !== typeof Array.prototype.reduce) {
	    Array.prototype.reduce = function(callback, opt_initialValue) {
	      'use strict';
	      if (null === this || 'undefined' === typeof this) {
	        throw new TypeError('Array.prototype.reduce called on null or undefined');
	      }
	      if ('function' !== typeof callback) {
	        throw new TypeError(callback + ' is not a function');
	      }
	      var index,
	          value,
	          length = this.length >>> 0,
	          isValueSet = false;
	      if (1 < arguments.length) {
	        value = opt_initialValue;
	        isValueSet = true;
	      }
	      for (index = 0; length > index; ++index) {
	        if (this.hasOwnProperty(index)) {
	          if (isValueSet) {
	            value = callback(value, this[index], index, this);
	          } else {
	            value = this[index];
	            isValueSet = true;
	          }
	        }
	      }
	      if (!isValueSet) {
	        throw new TypeError('Reduce of empty array with no initial value');
	      }
	      return value;
	    };
	  }
	  function multiplier(x) {
	    var parts = x.toString().split('.');
	    if (parts.length < 2) {
	      return 1;
	    }
	    return Math.pow(10, parts[1].length);
	  }
	  function correctionFactor() {
	    var args = Array.prototype.slice.call(arguments);
	    return args.reduce(function(prev, next) {
	      var mp = multiplier(prev),
	          mn = multiplier(next);
	      return mp > mn ? mp : mn;
	    }, -Infinity);
	  }
	  numeral.fn = Numeral.prototype = {
	    clone: function() {
	      return numeral(this);
	    },
	    format: function(inputString, roundingFunction) {
	      return formatNumeral(this, inputString ? inputString : defaultFormat, (roundingFunction !== undefined) ? roundingFunction : Math.round);
	    },
	    unformat: function(inputString) {
	      if (Object.prototype.toString.call(inputString) === '[object Number]') {
	        return inputString;
	      }
	      return unformatNumeral(this, inputString ? inputString : defaultFormat);
	    },
	    value: function() {
	      return this._value;
	    },
	    valueOf: function() {
	      return this._value;
	    },
	    set: function(value) {
	      this._value = Number(value);
	      return this;
	    },
	    add: function(value) {
	      var corrFactor = correctionFactor.call(null, this._value, value);
	      function cback(accum, curr, currI, O) {
	        return accum + corrFactor * curr;
	      }
	      this._value = [this._value, value].reduce(cback, 0) / corrFactor;
	      return this;
	    },
	    subtract: function(value) {
	      var corrFactor = correctionFactor.call(null, this._value, value);
	      function cback(accum, curr, currI, O) {
	        return accum - corrFactor * curr;
	      }
	      this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;
	      return this;
	    },
	    multiply: function(value) {
	      function cback(accum, curr, currI, O) {
	        var corrFactor = correctionFactor(accum, curr);
	        return (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);
	      }
	      this._value = [this._value, value].reduce(cback, 1);
	      return this;
	    },
	    divide: function(value) {
	      function cback(accum, curr, currI, O) {
	        var corrFactor = correctionFactor(accum, curr);
	        return (accum * corrFactor) / (curr * corrFactor);
	      }
	      this._value = [this._value, value].reduce(cback);
	      return this;
	    },
	    difference: function(value) {
	      return Math.abs(numeral(this._value).subtract(value).value());
	    }
	  };
	  if (hasModule) {
	    module.exports = numeral;
	  }
	  if (typeof ender === 'undefined') {
	    this['numeral'] = numeral;
	  }
	  if (typeof define === 'function' && define.amd) {
	    define([], function() {
	      return numeral;
	    });
	  }
	}).call(window);

	//# 
	},{}],"pikaday":[function(require,module,exports){
	/*!
	 * Pikaday
	 *
	 * Copyright © 2014 David Bushell | BSD & MIT license | https://github.com/dbushell/Pikaday
	 */

	(function (root, factory)
	{
	    'use strict';

	    var moment;
	    if (typeof exports === 'object') {
	        // CommonJS module
	        // Load moment.js as an optional dependency
	        try { moment = require('moment'); } catch (e) {}
	        module.exports = factory(moment);
	    } else if (typeof define === 'function' && define.amd) {
	        // AMD. Register as an anonymous module.
	        define(function (req)
	        {
	            // Load moment.js as an optional dependency
	            var id = 'moment';
	            try { moment = req(id); } catch (e) {}
	            return factory(moment);
	        });
	    } else {
	        root.Pikaday = factory(root.moment);
	    }
	}(this, function (moment)
	{
	    'use strict';

	    /**
	     * feature detection and helper functions
	     */
	    var hasMoment = typeof moment === 'function',

	    hasEventListeners = !!window.addEventListener,

	    document = window.document,

	    sto = window.setTimeout,

	    addEvent = function(el, e, callback, capture)
	    {
	        if (hasEventListeners) {
	            el.addEventListener(e, callback, !!capture);
	        } else {
	            el.attachEvent('on' + e, callback);
	        }
	    },

	    removeEvent = function(el, e, callback, capture)
	    {
	        if (hasEventListeners) {
	            el.removeEventListener(e, callback, !!capture);
	        } else {
	            el.detachEvent('on' + e, callback);
	        }
	    },

	    fireEvent = function(el, eventName, data)
	    {
	        var ev;

	        if (document.createEvent) {
	            ev = document.createEvent('HTMLEvents');
	            ev.initEvent(eventName, true, false);
	            ev = extend(ev, data);
	            el.dispatchEvent(ev);
	        } else if (document.createEventObject) {
	            ev = document.createEventObject();
	            ev = extend(ev, data);
	            el.fireEvent('on' + eventName, ev);
	        }
	    },

	    trim = function(str)
	    {
	        return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g,'');
	    },

	    hasClass = function(el, cn)
	    {
	        return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1;
	    },

	    addClass = function(el, cn)
	    {
	        if (!hasClass(el, cn)) {
	            el.className = (el.className === '') ? cn : el.className + ' ' + cn;
	        }
	    },

	    removeClass = function(el, cn)
	    {
	        el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '));
	    },

	    isArray = function(obj)
	    {
	        return (/Array/).test(Object.prototype.toString.call(obj));
	    },

	    isDate = function(obj)
	    {
	        return (/Date/).test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime());
	    },

	    isWeekend = function(date)
	    {
	        var day = date.getDay();
	        return day === 0 || day === 6;
	    },

	    isLeapYear = function(year)
	    {
	        // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951
	        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
	    },

	    getDaysInMonth = function(year, month)
	    {
	        return [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
	    },

	    setToStartOfDay = function(date)
	    {
	        if (isDate(date)) date.setHours(0,0,0,0);
	    },

	    compareDates = function(a,b)
	    {
	        // weak date comparison (use setToStartOfDay(date) to ensure correct result)
	        return a.getTime() === b.getTime();
	    },

	    extend = function(to, from, overwrite)
	    {
	        var prop, hasProp;
	        for (prop in from) {
	            hasProp = to[prop] !== undefined;
	            if (hasProp && typeof from[prop] === 'object' && from[prop] !== null && from[prop].nodeName === undefined) {
	                if (isDate(from[prop])) {
	                    if (overwrite) {
	                        to[prop] = new Date(from[prop].getTime());
	                    }
	                }
	                else if (isArray(from[prop])) {
	                    if (overwrite) {
	                        to[prop] = from[prop].slice(0);
	                    }
	                } else {
	                    to[prop] = extend({}, from[prop], overwrite);
	                }
	            } else if (overwrite || !hasProp) {
	                to[prop] = from[prop];
	            }
	        }
	        return to;
	    },

	    adjustCalendar = function(calendar) {
	        if (calendar.month < 0) {
	            calendar.year -= Math.ceil(Math.abs(calendar.month)/12);
	            calendar.month += 12;
	        }
	        if (calendar.month > 11) {
	            calendar.year += Math.floor(Math.abs(calendar.month)/12);
	            calendar.month -= 12;
	        }
	        return calendar;
	    },

	    /**
	     * defaults and localisation
	     */
	    defaults = {

	        // bind the picker to a form field
	        field: null,

	        // automatically show/hide the picker on `field` focus (default `true` if `field` is set)
	        bound: undefined,

	        // position of the datepicker, relative to the field (default to bottom & left)
	        // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)
	        position: 'bottom left',

	        // automatically fit in the viewport even if it means repositioning from the position option
	        reposition: true,

	        // the default output format for `.toString()` and `field` value
	        format: 'YYYY-MM-DD',

	        // the initial date to view when first opened
	        defaultDate: null,

	        // make the `defaultDate` the initial selected value
	        setDefaultDate: false,

	        // first day of week (0: Sunday, 1: Monday etc)
	        firstDay: 0,

	        // the minimum/earliest date that can be selected
	        minDate: null,
	        // the maximum/latest date that can be selected
	        maxDate: null,

	        // number of years either side, or array of upper/lower range
	        yearRange: 10,

	        // show week numbers at head of row
	        showWeekNumber: false,

	        // used internally (don't config outside)
	        minYear: 0,
	        maxYear: 9999,
	        minMonth: undefined,
	        maxMonth: undefined,

	        startRange: null,
	        endRange: null,

	        isRTL: false,

	        // Additional text to append to the year in the calendar title
	        yearSuffix: '',

	        // Render the month after year in the calendar title
	        showMonthAfterYear: false,

	        // how many months are visible
	        numberOfMonths: 1,

	        // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)
	        // only used for the first display or when a selected date is not visible
	        mainCalendar: 'left',

	        // Specify a DOM element to render the calendar in
	        container: undefined,

	        // internationalization
	        i18n: {
	            previousMonth : 'Previous Month',
	            nextMonth     : 'Next Month',
	            months        : ['January','February','March','April','May','June','July','August','September','October','November','December'],
	            weekdays      : ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],
	            weekdaysShort : ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']
	        },

	        // Theme Classname
	        theme: null,

	        // callback function
	        onSelect: null,
	        onOpen: null,
	        onClose: null,
	        onDraw: null
	    },


	    /**
	     * templating functions to abstract HTML rendering
	     */
	    renderDayName = function(opts, day, abbr)
	    {
	        day += opts.firstDay;
	        while (day >= 7) {
	            day -= 7;
	        }
	        return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day];
	    },

	    renderDay = function(opts)
	    {
	        if (opts.isEmpty) {
	            return '<td class="is-empty"></td>';
	        }
	        var arr = [];
	        if (opts.isDisabled) {
	            arr.push('is-disabled');
	        }
	        if (opts.isToday) {
	            arr.push('is-today');
	        }
	        if (opts.isSelected) {
	            arr.push('is-selected');
	        }
	        if (opts.isInRange) {
	            arr.push('is-inrange');
	        }
	        if (opts.isStartRange) {
	            arr.push('is-startrange');
	        }
	        if (opts.isEndRange) {
	            arr.push('is-endrange');
	        }
	        return '<td data-day="' + opts.day + '" class="' + arr.join(' ') + '">' +
	                 '<button class="pika-button pika-day" type="button" ' +
	                    'data-pika-year="' + opts.year + '" data-pika-month="' + opts.month + '" data-pika-day="' + opts.day + '">' +
	                        opts.day +
	                 '</button>' +
	               '</td>';
	    },

	    renderWeek = function (d, m, y) {
	        // Lifted from http://javascript.about.com/library/blweekyear.htm, lightly modified.
	        var onejan = new Date(y, 0, 1),
	            weekNum = Math.ceil((((new Date(y, m, d) - onejan) / 86400000) + onejan.getDay()+1)/7);
	        return '<td class="pika-week">' + weekNum + '</td>';
	    },

	    renderRow = function(days, isRTL)
	    {
	        return '<tr>' + (isRTL ? days.reverse() : days).join('') + '</tr>';
	    },

	    renderBody = function(rows)
	    {
	        return '<tbody>' + rows.join('') + '</tbody>';
	    },

	    renderHead = function(opts)
	    {
	        var i, arr = [];
	        if (opts.showWeekNumber) {
	            arr.push('<th></th>');
	        }
	        for (i = 0; i < 7; i++) {
	            arr.push('<th scope="col"><abbr title="' + renderDayName(opts, i) + '">' + renderDayName(opts, i, true) + '</abbr></th>');
	        }
	        return '<thead>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</thead>';
	    },

	    renderTitle = function(instance, c, year, month, refYear)
	    {
	        var i, j, arr,
	            opts = instance._o,
	            isMinYear = year === opts.minYear,
	            isMaxYear = year === opts.maxYear,
	            html = '<div class="pika-title">',
	            monthHtml,
	            yearHtml,
	            prev = true,
	            next = true;

	        for (arr = [], i = 0; i < 12; i++) {
	            arr.push('<option value="' + (year === refYear ? i - c : 12 + i - c) + '"' +
	                (i === month ? ' selected': '') +
	                ((isMinYear && i < opts.minMonth) || (isMaxYear && i > opts.maxMonth) ? 'disabled' : '') + '>' +
	                opts.i18n.months[i] + '</option>');
	        }
	        monthHtml = '<div class="pika-label">' + opts.i18n.months[month] + '<select class="pika-select pika-select-month" tabindex="-1">' + arr.join('') + '</select></div>';

	        if (isArray(opts.yearRange)) {
	            i = opts.yearRange[0];
	            j = opts.yearRange[1] + 1;
	        } else {
	            i = year - opts.yearRange;
	            j = 1 + year + opts.yearRange;
	        }

	        for (arr = []; i < j && i <= opts.maxYear; i++) {
	            if (i >= opts.minYear) {
	                arr.push('<option value="' + i + '"' + (i === year ? ' selected': '') + '>' + (i) + '</option>');
	            }
	        }
	        yearHtml = '<div class="pika-label">' + year + opts.yearSuffix + '<select class="pika-select pika-select-year" tabindex="-1">' + arr.join('') + '</select></div>';

	        if (opts.showMonthAfterYear) {
	            html += yearHtml + monthHtml;
	        } else {
	            html += monthHtml + yearHtml;
	        }

	        if (isMinYear && (month === 0 || opts.minMonth >= month)) {
	            prev = false;
	        }

	        if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {
	            next = false;
	        }

	        if (c === 0) {
	            html += '<button class="pika-prev' + (prev ? '' : ' is-disabled') + '" type="button">' + opts.i18n.previousMonth + '</button>';
	        }
	        if (c === (instance._o.numberOfMonths - 1) ) {
	            html += '<button class="pika-next' + (next ? '' : ' is-disabled') + '" type="button">' + opts.i18n.nextMonth + '</button>';
	        }

	        return html += '</div>';
	    },

	    renderTable = function(opts, data)
	    {
	        return '<table cellpadding="0" cellspacing="0" class="pika-table">' + renderHead(opts) + renderBody(data) + '</table>';
	    },


	    /**
	     * Pikaday constructor
	     */
	    Pikaday = function(options)
	    {
	        var self = this,
	            opts = self.config(options);

	        self._onMouseDown = function(e)
	        {
	            if (!self._v) {
	                return;
	            }
	            e = e || window.event;
	            var target = e.target || e.srcElement;
	            if (!target) {
	                return;
	            }

	            if (!hasClass(target.parentNode, 'is-disabled')) {
	                if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty')) {
	                    self.setDate(new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day')));
	                    if (opts.bound) {
	                        sto(function() {
	                            self.hide();
	                            if (opts.field) {
	                                opts.field.blur();
	                            }
	                        }, 100);
	                    }
	                    return;
	                }
	                else if (hasClass(target, 'pika-prev')) {
	                    self.prevMonth();
	                }
	                else if (hasClass(target, 'pika-next')) {
	                    self.nextMonth();
	                }
	            }
	            if (!hasClass(target, 'pika-select')) {
	                if (e.preventDefault) {
	                    e.preventDefault();
	                } else {
	                    e.returnValue = false;
	                    return false;
	                }
	            } else {
	                self._c = true;
	            }
	        };

	        self._onChange = function(e)
	        {
	            e = e || window.event;
	            var target = e.target || e.srcElement;
	            if (!target) {
	                return;
	            }
	            if (hasClass(target, 'pika-select-month')) {
	                self.gotoMonth(target.value);
	            }
	            else if (hasClass(target, 'pika-select-year')) {
	                self.gotoYear(target.value);
	            }
	        };

	        self._onInputChange = function(e)
	        {
	            var date;

	            if (e.firedBy === self) {
	                return;
	            }
	            if (hasMoment) {
	                date = moment(opts.field.value, opts.format);
	                date = (date && date.isValid()) ? date.toDate() : null;
	            }
	            else {
	                date = new Date(Date.parse(opts.field.value));
	            }
	            if (isDate(date)) {
	              self.setDate(date);
	            }
	            if (!self._v) {
	                self.show();
	            }
	        };

	        self._onInputFocus = function()
	        {
	            self.show();
	        };

	        self._onInputClick = function()
	        {
	            self.show();
	        };

	        self._onInputBlur = function()
	        {
	            // IE allows pika div to gain focus; catch blur the input field
	            var pEl = document.activeElement;
	            do {
	                if (hasClass(pEl, 'pika-single')) {
	                    return;
	                }
	            }
	            while ((pEl = pEl.parentNode));

	            if (!self._c) {
	                self._b = sto(function() {
	                    self.hide();
	                }, 50);
	            }
	            self._c = false;
	        };

	        self._onClick = function(e)
	        {
	            e = e || window.event;
	            var target = e.target || e.srcElement,
	                pEl = target;
	            if (!target) {
	                return;
	            }
	            if (!hasEventListeners && hasClass(target, 'pika-select')) {
	                if (!target.onchange) {
	                    target.setAttribute('onchange', 'return;');
	                    addEvent(target, 'change', self._onChange);
	                }
	            }
	            do {
	                if (hasClass(pEl, 'pika-single') || pEl === opts.trigger) {
	                    return;
	                }
	            }
	            while ((pEl = pEl.parentNode));
	            if (self._v && target !== opts.trigger && pEl !== opts.trigger) {
	                self.hide();
	            }
	        };

	        self.el = document.createElement('div');
	        self.el.className = 'pika-single' + (opts.isRTL ? ' is-rtl' : '') + (opts.theme ? ' ' + opts.theme : '');

	        addEvent(self.el, 'ontouchend' in document ? 'touchend' : 'mousedown', self._onMouseDown, true);
	        addEvent(self.el, 'change', self._onChange);

	        if (opts.field) {
	            if (opts.container) {
	                opts.container.appendChild(self.el);
	            } else if (opts.bound) {
	                document.body.appendChild(self.el);
	            } else {
	                opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling);
	            }
	            addEvent(opts.field, 'change', self._onInputChange);

	            if (!opts.defaultDate) {
	                if (hasMoment && opts.field.value) {
	                    opts.defaultDate = moment(opts.field.value, opts.format).toDate();
	                } else {
	                    opts.defaultDate = new Date(Date.parse(opts.field.value));
	                }
	                opts.setDefaultDate = true;
	            }
	        }

	        var defDate = opts.defaultDate;

	        if (isDate(defDate)) {
	            if (opts.setDefaultDate) {
	                self.setDate(defDate, true);
	            } else {
	                self.gotoDate(defDate);
	            }
	        } else {
	            self.gotoDate(new Date());
	        }

	        if (opts.bound) {
	            this.hide();
	            self.el.className += ' is-bound';
	            addEvent(opts.trigger, 'click', self._onInputClick);
	            addEvent(opts.trigger, 'focus', self._onInputFocus);
	            addEvent(opts.trigger, 'blur', self._onInputBlur);
	        } else {
	            this.show();
	        }
	    };


	    /**
	     * public Pikaday API
	     */
	    Pikaday.prototype = {


	        /**
	         * configure functionality
	         */
	        config: function(options)
	        {
	            if (!this._o) {
	                this._o = extend({}, defaults, true);
	            }

	            var opts = extend(this._o, options, true);

	            opts.isRTL = !!opts.isRTL;

	            opts.field = (opts.field && opts.field.nodeName) ? opts.field : null;

	            opts.theme = (typeof opts.theme) === 'string' && opts.theme ? opts.theme : null;

	            opts.bound = !!(opts.bound !== undefined ? opts.field && opts.bound : opts.field);

	            opts.trigger = (opts.trigger && opts.trigger.nodeName) ? opts.trigger : opts.field;

	            opts.disableWeekends = !!opts.disableWeekends;

	            opts.disableDayFn = (typeof opts.disableDayFn) === 'function' ? opts.disableDayFn : null;

	            var nom = parseInt(opts.numberOfMonths, 10) || 1;
	            opts.numberOfMonths = nom > 4 ? 4 : nom;

	            if (!isDate(opts.minDate)) {
	                opts.minDate = false;
	            }
	            if (!isDate(opts.maxDate)) {
	                opts.maxDate = false;
	            }
	            if ((opts.minDate && opts.maxDate) && opts.maxDate < opts.minDate) {
	                opts.maxDate = opts.minDate = false;
	            }
	            if (opts.minDate) {
	                this.setMinDate(opts.minDate);
	            }
	            if (opts.maxDate) {
	                setToStartOfDay(opts.maxDate);
	                opts.maxYear  = opts.maxDate.getFullYear();
	                opts.maxMonth = opts.maxDate.getMonth();
	            }

	            if (isArray(opts.yearRange)) {
	                var fallback = new Date().getFullYear() - 10;
	                opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback;
	                opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback;
	            } else {
	                opts.yearRange = Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange;
	                if (opts.yearRange > 100) {
	                    opts.yearRange = 100;
	                }
	            }

	            return opts;
	        },

	        /**
	         * return a formatted string of the current selection (using Moment.js if available)
	         */
	        toString: function(format)
	        {
	            return !isDate(this._d) ? '' : hasMoment ? moment(this._d).format(format || this._o.format) : this._d.toDateString();
	        },

	        /**
	         * return a Moment.js object of the current selection (if available)
	         */
	        getMoment: function()
	        {
	            return hasMoment ? moment(this._d) : null;
	        },

	        /**
	         * set the current selection from a Moment.js object (if available)
	         */
	        setMoment: function(date, preventOnSelect)
	        {
	            if (hasMoment && moment.isMoment(date)) {
	                this.setDate(date.toDate(), preventOnSelect);
	            }
	        },

	        /**
	         * return a Date object of the current selection
	         */
	        getDate: function()
	        {
	            return isDate(this._d) ? new Date(this._d.getTime()) : null;
	        },

	        /**
	         * set the current selection
	         */
	        setDate: function(date, preventOnSelect)
	        {
	            if (!date) {
	                this._d = null;

	                if (this._o.field) {
	                    this._o.field.value = '';
	                    fireEvent(this._o.field, 'change', { firedBy: this });
	                }

	                return this.draw();
	            }
	            if (typeof date === 'string') {
	                date = new Date(Date.parse(date));
	            }
	            if (!isDate(date)) {
	                return;
	            }

	            var min = this._o.minDate,
	                max = this._o.maxDate;

	            if (isDate(min) && date < min) {
	                date = min;
	            } else if (isDate(max) && date > max) {
	                date = max;
	            }

	            this._d = new Date(date.getTime());
	            setToStartOfDay(this._d);
	            this.gotoDate(this._d);

	            if (this._o.field) {
	                this._o.field.value = this.toString();
	                fireEvent(this._o.field, 'change', { firedBy: this });
	            }
	            if (!preventOnSelect && typeof this._o.onSelect === 'function') {
	                this._o.onSelect.call(this, this.getDate());
	            }
	        },

	        /**
	         * change view to a specific date
	         */
	        gotoDate: function(date)
	        {
	            var newCalendar = true;

	            if (!isDate(date)) {
	                return;
	            }

	            if (this.calendars) {
	                var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),
	                    lastVisibleDate = new Date(this.calendars[this.calendars.length-1].year, this.calendars[this.calendars.length-1].month, 1),
	                    visibleDate = date.getTime();
	                // get the end of the month
	                lastVisibleDate.setMonth(lastVisibleDate.getMonth()+1);
	                lastVisibleDate.setDate(lastVisibleDate.getDate()-1);
	                newCalendar = (visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate);
	            }

	            if (newCalendar) {
	                this.calendars = [{
	                    month: date.getMonth(),
	                    year: date.getFullYear()
	                }];
	                if (this._o.mainCalendar === 'right') {
	                    this.calendars[0].month += 1 - this._o.numberOfMonths;
	                }
	            }

	            this.adjustCalendars();
	        },

	        adjustCalendars: function() {
	            this.calendars[0] = adjustCalendar(this.calendars[0]);
	            for (var c = 1; c < this._o.numberOfMonths; c++) {
	                this.calendars[c] = adjustCalendar({
	                    month: this.calendars[0].month + c,
	                    year: this.calendars[0].year
	                });
	            }
	            this.draw();
	        },

	        gotoToday: function()
	        {
	            this.gotoDate(new Date());
	        },

	        /**
	         * change view to a specific month (zero-index, e.g. 0: January)
	         */
	        gotoMonth: function(month)
	        {
	            if (!isNaN(month)) {
	                this.calendars[0].month = parseInt(month, 10);
	                this.adjustCalendars();
	            }
	        },

	        nextMonth: function()
	        {
	            this.calendars[0].month++;
	            this.adjustCalendars();
	        },

	        prevMonth: function()
	        {
	            this.calendars[0].month--;
	            this.adjustCalendars();
	        },

	        /**
	         * change view to a specific full year (e.g. "2012")
	         */
	        gotoYear: function(year)
	        {
	            if (!isNaN(year)) {
	                this.calendars[0].year = parseInt(year, 10);
	                this.adjustCalendars();
	            }
	        },

	        /**
	         * change the minDate
	         */
	        setMinDate: function(value)
	        {
	            setToStartOfDay(value);
	            this._o.minDate = value;
	            this._o.minYear  = value.getFullYear();
	            this._o.minMonth = value.getMonth();
	        },

	        /**
	         * change the maxDate
	         */
	        setMaxDate: function(value)
	        {
	            this._o.maxDate = value;
	        },

	        setStartRange: function(value)
	        {
	            this._o.startRange = value;
	        },

	        setEndRange: function(value)
	        {
	            this._o.endRange = value;
	        },

	        /**
	         * refresh the HTML
	         */
	        draw: function(force)
	        {
	            if (!this._v && !force) {
	                return;
	            }
	            var opts = this._o,
	                minYear = opts.minYear,
	                maxYear = opts.maxYear,
	                minMonth = opts.minMonth,
	                maxMonth = opts.maxMonth,
	                html = '';

	            if (this._y <= minYear) {
	                this._y = minYear;
	                if (!isNaN(minMonth) && this._m < minMonth) {
	                    this._m = minMonth;
	                }
	            }
	            if (this._y >= maxYear) {
	                this._y = maxYear;
	                if (!isNaN(maxMonth) && this._m > maxMonth) {
	                    this._m = maxMonth;
	                }
	            }

	            for (var c = 0; c < opts.numberOfMonths; c++) {
	                html += '<div class="pika-lendar">' + renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year) + this.render(this.calendars[c].year, this.calendars[c].month) + '</div>';
	            }

	            this.el.innerHTML = html;

	            if (opts.bound) {
	                if(opts.field.type !== 'hidden') {
	                    sto(function() {
	                        opts.trigger.focus();
	                    }, 1);
	                }
	            }

	            if (typeof this._o.onDraw === 'function') {
	                var self = this;
	                sto(function() {
	                    self._o.onDraw.call(self);
	                }, 0);
	            }
	        },

	        adjustPosition: function()
	        {
	            var field, pEl, width, height, viewportWidth, viewportHeight, scrollTop, left, top, clientRect;
	            
	            if (this._o.container) return;
	            
	            this.el.style.position = 'absolute';
	            
	            field = this._o.trigger;
	            pEl = field;
	            width = this.el.offsetWidth;
	            height = this.el.offsetHeight;
	            viewportWidth = window.innerWidth || document.documentElement.clientWidth;
	            viewportHeight = window.innerHeight || document.documentElement.clientHeight;
	            scrollTop = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;

	            if (typeof field.getBoundingClientRect === 'function') {
	                clientRect = field.getBoundingClientRect();
	                left = clientRect.left + window.pageXOffset;
	                top = clientRect.bottom + window.pageYOffset;
	            } else {
	                left = pEl.offsetLeft;
	                top  = pEl.offsetTop + pEl.offsetHeight;
	                while((pEl = pEl.offsetParent)) {
	                    left += pEl.offsetLeft;
	                    top  += pEl.offsetTop;
	                }
	            }

	            // default position is bottom & left
	            if ((this._o.reposition && left + width > viewportWidth) ||
	                (
	                    this._o.position.indexOf('right') > -1 &&
	                    left - width + field.offsetWidth > 0
	                )
	            ) {
	                left = left - width + field.offsetWidth;
	            }
	            if ((this._o.reposition && top + height > viewportHeight + scrollTop) ||
	                (
	                    this._o.position.indexOf('top') > -1 &&
	                    top - height - field.offsetHeight > 0
	                )
	            ) {
	                top = top - height - field.offsetHeight;
	            }

	            this.el.style.left = left + 'px';
	            this.el.style.top = top + 'px';
	        },

	        /**
	         * render HTML for a particular month
	         */
	        render: function(year, month)
	        {
	            var opts   = this._o,
	                now    = new Date(),
	                days   = getDaysInMonth(year, month),
	                before = new Date(year, month, 1).getDay(),
	                data   = [],
	                row    = [];
	            setToStartOfDay(now);
	            if (opts.firstDay > 0) {
	                before -= opts.firstDay;
	                if (before < 0) {
	                    before += 7;
	                }
	            }
	            var cells = days + before,
	                after = cells;
	            while(after > 7) {
	                after -= 7;
	            }
	            cells += 7 - after;
	            for (var i = 0, r = 0; i < cells; i++)
	            {
	                var dayConfig,
	                    day = new Date(year, month, 1 + (i - before)),
	                    isSelected = isDate(this._d) ? compareDates(day, this._d) : false,
	                    isToday = compareDates(day, now),
	                    isEmpty = i < before || i >= (days + before),
	                    isStartRange = opts.startRange && compareDates(opts.startRange, day),
	                    isEndRange = opts.endRange && compareDates(opts.endRange, day),
	                    isInRange = opts.startRange && opts.endRange && opts.startRange < day && day < opts.endRange,
	                    isDisabled = (opts.minDate && day < opts.minDate) ||
	                                 (opts.maxDate && day > opts.maxDate) ||
	                                 (opts.disableWeekends && isWeekend(day)) ||
	                                 (opts.disableDayFn && opts.disableDayFn(day)),
	                    dayConfig = {
	                        day: 1 + (i - before),
	                        month: month,
	                        year: year,
	                        isSelected: isSelected,
	                        isToday: isToday,
	                        isDisabled: isDisabled,
	                        isEmpty: isEmpty,
	                        isStartRange: isStartRange,
	                        isEndRange: isEndRange,
	                        isInRange: isInRange
	                    };

	                row.push(renderDay(dayConfig));

	                if (++r === 7) {
	                    if (opts.showWeekNumber) {
	                        row.unshift(renderWeek(i - before, month, year));
	                    }
	                    data.push(renderRow(row, opts.isRTL));
	                    row = [];
	                    r = 0;
	                }
	            }
	            return renderTable(opts, data);
	        },

	        isVisible: function()
	        {
	            return this._v;
	        },

	        show: function()
	        {
	            if (!this._v) {
	                removeClass(this.el, 'is-hidden');
	                this._v = true;
	                this.draw();
	                if (this._o.bound) {
	                    addEvent(document, 'click', this._onClick);
	                    this.adjustPosition();
	                }
	                if (typeof this._o.onOpen === 'function') {
	                    this._o.onOpen.call(this);
	                }
	            }
	        },

	        hide: function()
	        {
	            var v = this._v;
	            if (v !== false) {
	                if (this._o.bound) {
	                    removeEvent(document, 'click', this._onClick);
	                }
	                this.el.style.position = 'static'; // reset
	                this.el.style.left = 'auto';
	                this.el.style.top = 'auto';
	                addClass(this.el, 'is-hidden');
	                this._v = false;
	                if (v !== undefined && typeof this._o.onClose === 'function') {
	                    this._o.onClose.call(this);
	                }
	            }
	        },

	        /**
	         * GAME OVER
	         */
	        destroy: function()
	        {
	            this.hide();
	            removeEvent(this.el, 'mousedown', this._onMouseDown, true);
	            removeEvent(this.el, 'change', this._onChange);
	            if (this._o.field) {
	                removeEvent(this._o.field, 'change', this._onInputChange);
	                if (this._o.bound) {
	                    removeEvent(this._o.trigger, 'click', this._onInputClick);
	                    removeEvent(this._o.trigger, 'focus', this._onInputFocus);
	                    removeEvent(this._o.trigger, 'blur', this._onInputBlur);
	                }
	            }
	            if (this.el.parentNode) {
	                this.el.parentNode.removeChild(this.el);
	            }
	        }

	    };

	    return Pikaday;

	}));

	},{"moment":"moment"}],"zeroclipboard":[function(require,module,exports){
	/*!
	 * ZeroClipboard
	 * The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface.
	 * Copyright (c) 2009-2014 Jon Rohan, James M. Greene
	 * Licensed MIT
	 * http://zeroclipboard.org/
	 * v2.2.0
	 */
	(function(window, undefined) {
	  "use strict";
	  /**
	 * Store references to critically important global functions that may be
	 * overridden on certain web pages.
	 */
	  var _window = window, _document = _window.document, _navigator = _window.navigator, _setTimeout = _window.setTimeout, _clearTimeout = _window.clearTimeout, _setInterval = _window.setInterval, _clearInterval = _window.clearInterval, _getComputedStyle = _window.getComputedStyle, _encodeURIComponent = _window.encodeURIComponent, _ActiveXObject = _window.ActiveXObject, _Error = _window.Error, _parseInt = _window.Number.parseInt || _window.parseInt, _parseFloat = _window.Number.parseFloat || _window.parseFloat, _isNaN = _window.Number.isNaN || _window.isNaN, _now = _window.Date.now, _keys = _window.Object.keys, _defineProperty = _window.Object.defineProperty, _hasOwn = _window.Object.prototype.hasOwnProperty, _slice = _window.Array.prototype.slice, _unwrap = function() {
	    var unwrapper = function(el) {
	      return el;
	    };
	    if (typeof _window.wrap === "function" && typeof _window.unwrap === "function") {
	      try {
	        var div = _document.createElement("div");
	        var unwrappedDiv = _window.unwrap(div);
	        if (div.nodeType === 1 && unwrappedDiv && unwrappedDiv.nodeType === 1) {
	          unwrapper = _window.unwrap;
	        }
	      } catch (e) {}
	    }
	    return unwrapper;
	  }();
	  /**
	 * Convert an `arguments` object into an Array.
	 *
	 * @returns The arguments as an Array
	 * @private
	 */
	  var _args = function(argumentsObj) {
	    return _slice.call(argumentsObj, 0);
	  };
	  /**
	 * Shallow-copy the owned, enumerable properties of one object over to another, similar to jQuery's `$.extend`.
	 *
	 * @returns The target object, augmented
	 * @private
	 */
	  var _extend = function() {
	    var i, len, arg, prop, src, copy, args = _args(arguments), target = args[0] || {};
	    for (i = 1, len = args.length; i < len; i++) {
	      if ((arg = args[i]) != null) {
	        for (prop in arg) {
	          if (_hasOwn.call(arg, prop)) {
	            src = target[prop];
	            copy = arg[prop];
	            if (target !== copy && copy !== undefined) {
	              target[prop] = copy;
	            }
	          }
	        }
	      }
	    }
	    return target;
	  };
	  /**
	 * Return a deep copy of the source object or array.
	 *
	 * @returns Object or Array
	 * @private
	 */
	  var _deepCopy = function(source) {
	    var copy, i, len, prop;
	    if (typeof source !== "object" || source == null || typeof source.nodeType === "number") {
	      copy = source;
	    } else if (typeof source.length === "number") {
	      copy = [];
	      for (i = 0, len = source.length; i < len; i++) {
	        if (_hasOwn.call(source, i)) {
	          copy[i] = _deepCopy(source[i]);
	        }
	      }
	    } else {
	      copy = {};
	      for (prop in source) {
	        if (_hasOwn.call(source, prop)) {
	          copy[prop] = _deepCopy(source[prop]);
	        }
	      }
	    }
	    return copy;
	  };
	  /**
	 * Makes a shallow copy of `obj` (like `_extend`) but filters its properties based on a list of `keys` to keep.
	 * The inverse of `_omit`, mostly. The big difference is that these properties do NOT need to be enumerable to
	 * be kept.
	 *
	 * @returns A new filtered object.
	 * @private
	 */
	  var _pick = function(obj, keys) {
	    var newObj = {};
	    for (var i = 0, len = keys.length; i < len; i++) {
	      if (keys[i] in obj) {
	        newObj[keys[i]] = obj[keys[i]];
	      }
	    }
	    return newObj;
	  };
	  /**
	 * Makes a shallow copy of `obj` (like `_extend`) but filters its properties based on a list of `keys` to omit.
	 * The inverse of `_pick`.
	 *
	 * @returns A new filtered object.
	 * @private
	 */
	  var _omit = function(obj, keys) {
	    var newObj = {};
	    for (var prop in obj) {
	      if (keys.indexOf(prop) === -1) {
	        newObj[prop] = obj[prop];
	      }
	    }
	    return newObj;
	  };
	  /**
	 * Remove all owned, enumerable properties from an object.
	 *
	 * @returns The original object without its owned, enumerable properties.
	 * @private
	 */
	  var _deleteOwnProperties = function(obj) {
	    if (obj) {
	      for (var prop in obj) {
	        if (_hasOwn.call(obj, prop)) {
	          delete obj[prop];
	        }
	      }
	    }
	    return obj;
	  };
	  /**
	 * Determine if an element is contained within another element.
	 *
	 * @returns Boolean
	 * @private
	 */
	  var _containedBy = function(el, ancestorEl) {
	    if (el && el.nodeType === 1 && el.ownerDocument && ancestorEl && (ancestorEl.nodeType === 1 && ancestorEl.ownerDocument && ancestorEl.ownerDocument === el.ownerDocument || ancestorEl.nodeType === 9 && !ancestorEl.ownerDocument && ancestorEl === el.ownerDocument)) {
	      do {
	        if (el === ancestorEl) {
	          return true;
	        }
	        el = el.parentNode;
	      } while (el);
	    }
	    return false;
	  };
	  /**
	 * Get the URL path's parent directory.
	 *
	 * @returns String or `undefined`
	 * @private
	 */
	  var _getDirPathOfUrl = function(url) {
	    var dir;
	    if (typeof url === "string" && url) {
	      dir = url.split("#")[0].split("?")[0];
	      dir = url.slice(0, url.lastIndexOf("/") + 1);
	    }
	    return dir;
	  };
	  /**
	 * Get the current script's URL by throwing an `Error` and analyzing it.
	 *
	 * @returns String or `undefined`
	 * @private
	 */
	  var _getCurrentScriptUrlFromErrorStack = function(stack) {
	    var url, matches;
	    if (typeof stack === "string" && stack) {
	      matches = stack.match(/^(?:|[^:@]*@|.+\)@(?=http[s]?|file)|.+?\s+(?: at |@)(?:[^:\(]+ )*[\(]?)((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/);
	      if (matches && matches[1]) {
	        url = matches[1];
	      } else {
	        matches = stack.match(/\)@((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/);
	        if (matches && matches[1]) {
	          url = matches[1];
	        }
	      }
	    }
	    return url;
	  };
	  /**
	 * Get the current script's URL by throwing an `Error` and analyzing it.
	 *
	 * @returns String or `undefined`
	 * @private
	 */
	  var _getCurrentScriptUrlFromError = function() {
	    var url, err;
	    try {
	      throw new _Error();
	    } catch (e) {
	      err = e;
	    }
	    if (err) {
	      url = err.sourceURL || err.fileName || _getCurrentScriptUrlFromErrorStack(err.stack);
	    }
	    return url;
	  };
	  /**
	 * Get the current script's URL.
	 *
	 * @returns String or `undefined`
	 * @private
	 */
	  var _getCurrentScriptUrl = function() {
	    var jsPath, scripts, i;
	    if (_document.currentScript && (jsPath = _document.currentScript.src)) {
	      return jsPath;
	    }
	    scripts = _document.getElementsByTagName("script");
	    if (scripts.length === 1) {
	      return scripts[0].src || undefined;
	    }
	    if ("readyState" in scripts[0]) {
	      for (i = scripts.length; i--; ) {
	        if (scripts[i].readyState === "interactive" && (jsPath = scripts[i].src)) {
	          return jsPath;
	        }
	      }
	    }
	    if (_document.readyState === "loading" && (jsPath = scripts[scripts.length - 1].src)) {
	      return jsPath;
	    }
	    if (jsPath = _getCurrentScriptUrlFromError()) {
	      return jsPath;
	    }
	    return undefined;
	  };
	  /**
	 * Get the unanimous parent directory of ALL script tags.
	 * If any script tags are either (a) inline or (b) from differing parent
	 * directories, this method must return `undefined`.
	 *
	 * @returns String or `undefined`
	 * @private
	 */
	  var _getUnanimousScriptParentDir = function() {
	    var i, jsDir, jsPath, scripts = _document.getElementsByTagName("script");
	    for (i = scripts.length; i--; ) {
	      if (!(jsPath = scripts[i].src)) {
	        jsDir = null;
	        break;
	      }
	      jsPath = _getDirPathOfUrl(jsPath);
	      if (jsDir == null) {
	        jsDir = jsPath;
	      } else if (jsDir !== jsPath) {
	        jsDir = null;
	        break;
	      }
	    }
	    return jsDir || undefined;
	  };
	  /**
	 * Get the presumed location of the "ZeroClipboard.swf" file, based on the location
	 * of the executing JavaScript file (e.g. "ZeroClipboard.js", etc.).
	 *
	 * @returns String
	 * @private
	 */
	  var _getDefaultSwfPath = function() {
	    var jsDir = _getDirPathOfUrl(_getCurrentScriptUrl()) || _getUnanimousScriptParentDir() || "";
	    return jsDir + "ZeroClipboard.swf";
	  };
	  /**
	 * Keep track of if the page is framed (in an `iframe`). This can never change.
	 * @private
	 */
	  var _pageIsFramed = function() {
	    return window.opener == null && (!!window.top && window != window.top || !!window.parent && window != window.parent);
	  }();
	  /**
	 * Keep track of the state of the Flash object.
	 * @private
	 */
	  var _flashState = {
	    bridge: null,
	    version: "0.0.0",
	    pluginType: "unknown",
	    disabled: null,
	    outdated: null,
	    sandboxed: null,
	    unavailable: null,
	    degraded: null,
	    deactivated: null,
	    overdue: null,
	    ready: null
	  };
	  /**
	 * The minimum Flash Player version required to use ZeroClipboard completely.
	 * @readonly
	 * @private
	 */
	  var _minimumFlashVersion = "11.0.0";
	  /**
	 * The ZeroClipboard library version number, as reported by Flash, at the time the SWF was compiled.
	 */
	  var _zcSwfVersion;
	  /**
	 * Keep track of all event listener registrations.
	 * @private
	 */
	  var _handlers = {};
	  /**
	 * Keep track of the currently activated element.
	 * @private
	 */
	  var _currentElement;
	  /**
	 * Keep track of the element that was activated when a `copy` process started.
	 * @private
	 */
	  var _copyTarget;
	  /**
	 * Keep track of data for the pending clipboard transaction.
	 * @private
	 */
	  var _clipData = {};
	  /**
	 * Keep track of data formats for the pending clipboard transaction.
	 * @private
	 */
	  var _clipDataFormatMap = null;
	  /**
	 * Keep track of the Flash availability check timeout.
	 * @private
	 */
	  var _flashCheckTimeout = 0;
	  /**
	 * Keep track of SWF network errors interval polling.
	 * @private
	 */
	  var _swfFallbackCheckInterval = 0;
	  /**
	 * The `message` store for events
	 * @private
	 */
	  var _eventMessages = {
	    ready: "Flash communication is established",
	    error: {
	      "flash-disabled": "Flash is disabled or not installed. May also be attempting to run Flash in a sandboxed iframe, which is impossible.",
	      "flash-outdated": "Flash is too outdated to support ZeroClipboard",
	      "flash-sandboxed": "Attempting to run Flash in a sandboxed iframe, which is impossible",
	      "flash-unavailable": "Flash is unable to communicate bidirectionally with JavaScript",
	      "flash-degraded": "Flash is unable to preserve data fidelity when communicating with JavaScript",
	      "flash-deactivated": "Flash is too outdated for your browser and/or is configured as click-to-activate.\nThis may also mean that the ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity.\nMay also be attempting to run Flash in a sandboxed iframe, which is impossible.",
	      "flash-overdue": "Flash communication was established but NOT within the acceptable time limit",
	      "version-mismatch": "ZeroClipboard JS version number does not match ZeroClipboard SWF version number",
	      "clipboard-error": "At least one error was thrown while ZeroClipboard was attempting to inject your data into the clipboard",
	      "config-mismatch": "ZeroClipboard configuration does not match Flash's reality",
	      "swf-not-found": "The ZeroClipboard SWF object could not be loaded, so please check your `swfPath` configuration and/or network connectivity"
	    }
	  };
	  /**
	 * The `name`s of `error` events that can only occur is Flash has at least
	 * been able to load the SWF successfully.
	 * @private
	 */
	  var _errorsThatOnlyOccurAfterFlashLoads = [ "flash-unavailable", "flash-degraded", "flash-overdue", "version-mismatch", "config-mismatch", "clipboard-error" ];
	  /**
	 * The `name`s of `error` events that should likely result in the `_flashState`
	 * variable's property values being updated.
	 * @private
	 */
	  var _flashStateErrorNames = [ "flash-disabled", "flash-outdated", "flash-sandboxed", "flash-unavailable", "flash-degraded", "flash-deactivated", "flash-overdue" ];
	  /**
	 * A RegExp to match the `name` property of `error` events related to Flash.
	 * @private
	 */
	  var _flashStateErrorNameMatchingRegex = new RegExp("^flash-(" + _flashStateErrorNames.map(function(errorName) {
	    return errorName.replace(/^flash-/, "");
	  }).join("|") + ")$");
	  /**
	 * A RegExp to match the `name` property of `error` events related to Flash,
	 * which is enabled.
	 * @private
	 */
	  var _flashStateEnabledErrorNameMatchingRegex = new RegExp("^flash-(" + _flashStateErrorNames.slice(1).map(function(errorName) {
	    return errorName.replace(/^flash-/, "");
	  }).join("|") + ")$");
	  /**
	 * ZeroClipboard configuration defaults for the Core module.
	 * @private
	 */
	  var _globalConfig = {
	    swfPath: _getDefaultSwfPath(),
	    trustedDomains: window.location.host ? [ window.location.host ] : [],
	    cacheBust: true,
	    forceEnhancedClipboard: false,
	    flashLoadTimeout: 3e4,
	    autoActivate: true,
	    bubbleEvents: true,
	    containerId: "global-zeroclipboard-html-bridge",
	    containerClass: "global-zeroclipboard-container",
	    swfObjectId: "global-zeroclipboard-flash-bridge",
	    hoverClass: "zeroclipboard-is-hover",
	    activeClass: "zeroclipboard-is-active",
	    forceHandCursor: false,
	    title: null,
	    zIndex: 999999999
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.config`.
	 * @private
	 */
	  var _config = function(options) {
	    if (typeof options === "object" && options !== null) {
	      for (var prop in options) {
	        if (_hasOwn.call(options, prop)) {
	          if (/^(?:forceHandCursor|title|zIndex|bubbleEvents)$/.test(prop)) {
	            _globalConfig[prop] = options[prop];
	          } else if (_flashState.bridge == null) {
	            if (prop === "containerId" || prop === "swfObjectId") {
	              if (_isValidHtml4Id(options[prop])) {
	                _globalConfig[prop] = options[prop];
	              } else {
	                throw new Error("The specified `" + prop + "` value is not valid as an HTML4 Element ID");
	              }
	            } else {
	              _globalConfig[prop] = options[prop];
	            }
	          }
	        }
	      }
	    }
	    if (typeof options === "string" && options) {
	      if (_hasOwn.call(_globalConfig, options)) {
	        return _globalConfig[options];
	      }
	      return;
	    }
	    return _deepCopy(_globalConfig);
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.state`.
	 * @private
	 */
	  var _state = function() {
	    _detectSandbox();
	    return {
	      browser: _pick(_navigator, [ "userAgent", "platform", "appName" ]),
	      flash: _omit(_flashState, [ "bridge" ]),
	      zeroclipboard: {
	        version: ZeroClipboard.version,
	        config: ZeroClipboard.config()
	      }
	    };
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.isFlashUnusable`.
	 * @private
	 */
	  var _isFlashUnusable = function() {
	    return !!(_flashState.disabled || _flashState.outdated || _flashState.sandboxed || _flashState.unavailable || _flashState.degraded || _flashState.deactivated);
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.on`.
	 * @private
	 */
	  var _on = function(eventType, listener) {
	    var i, len, events, added = {};
	    if (typeof eventType === "string" && eventType) {
	      events = eventType.toLowerCase().split(/\s+/);
	    } else if (typeof eventType === "object" && eventType && typeof listener === "undefined") {
	      for (i in eventType) {
	        if (_hasOwn.call(eventType, i) && typeof i === "string" && i && typeof eventType[i] === "function") {
	          ZeroClipboard.on(i, eventType[i]);
	        }
	      }
	    }
	    if (events && events.length) {
	      for (i = 0, len = events.length; i < len; i++) {
	        eventType = events[i].replace(/^on/, "");
	        added[eventType] = true;
	        if (!_handlers[eventType]) {
	          _handlers[eventType] = [];
	        }
	        _handlers[eventType].push(listener);
	      }
	      if (added.ready && _flashState.ready) {
	        ZeroClipboard.emit({
	          type: "ready"
	        });
	      }
	      if (added.error) {
	        for (i = 0, len = _flashStateErrorNames.length; i < len; i++) {
	          if (_flashState[_flashStateErrorNames[i].replace(/^flash-/, "")] === true) {
	            ZeroClipboard.emit({
	              type: "error",
	              name: _flashStateErrorNames[i]
	            });
	            break;
	          }
	        }
	        if (_zcSwfVersion !== undefined && ZeroClipboard.version !== _zcSwfVersion) {
	          ZeroClipboard.emit({
	            type: "error",
	            name: "version-mismatch",
	            jsVersion: ZeroClipboard.version,
	            swfVersion: _zcSwfVersion
	          });
	        }
	      }
	    }
	    return ZeroClipboard;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.off`.
	 * @private
	 */
	  var _off = function(eventType, listener) {
	    var i, len, foundIndex, events, perEventHandlers;
	    if (arguments.length === 0) {
	      events = _keys(_handlers);
	    } else if (typeof eventType === "string" && eventType) {
	      events = eventType.split(/\s+/);
	    } else if (typeof eventType === "object" && eventType && typeof listener === "undefined") {
	      for (i in eventType) {
	        if (_hasOwn.call(eventType, i) && typeof i === "string" && i && typeof eventType[i] === "function") {
	          ZeroClipboard.off(i, eventType[i]);
	        }
	      }
	    }
	    if (events && events.length) {
	      for (i = 0, len = events.length; i < len; i++) {
	        eventType = events[i].toLowerCase().replace(/^on/, "");
	        perEventHandlers = _handlers[eventType];
	        if (perEventHandlers && perEventHandlers.length) {
	          if (listener) {
	            foundIndex = perEventHandlers.indexOf(listener);
	            while (foundIndex !== -1) {
	              perEventHandlers.splice(foundIndex, 1);
	              foundIndex = perEventHandlers.indexOf(listener, foundIndex);
	            }
	          } else {
	            perEventHandlers.length = 0;
	          }
	        }
	      }
	    }
	    return ZeroClipboard;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.handlers`.
	 * @private
	 */
	  var _listeners = function(eventType) {
	    var copy;
	    if (typeof eventType === "string" && eventType) {
	      copy = _deepCopy(_handlers[eventType]) || null;
	    } else {
	      copy = _deepCopy(_handlers);
	    }
	    return copy;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.emit`.
	 * @private
	 */
	  var _emit = function(event) {
	    var eventCopy, returnVal, tmp;
	    event = _createEvent(event);
	    if (!event) {
	      return;
	    }
	    if (_preprocessEvent(event)) {
	      return;
	    }
	    if (event.type === "ready" && _flashState.overdue === true) {
	      return ZeroClipboard.emit({
	        type: "error",
	        name: "flash-overdue"
	      });
	    }
	    eventCopy = _extend({}, event);
	    _dispatchCallbacks.call(this, eventCopy);
	    if (event.type === "copy") {
	      tmp = _mapClipDataToFlash(_clipData);
	      returnVal = tmp.data;
	      _clipDataFormatMap = tmp.formatMap;
	    }
	    return returnVal;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.create`.
	 * @private
	 */
	  var _create = function() {
	    var previousState = _flashState.sandboxed;
	    _detectSandbox();
	    if (typeof _flashState.ready !== "boolean") {
	      _flashState.ready = false;
	    }
	    if (_flashState.sandboxed !== previousState && _flashState.sandboxed === true) {
	      _flashState.ready = false;
	      ZeroClipboard.emit({
	        type: "error",
	        name: "flash-sandboxed"
	      });
	    } else if (!ZeroClipboard.isFlashUnusable() && _flashState.bridge === null) {
	      var maxWait = _globalConfig.flashLoadTimeout;
	      if (typeof maxWait === "number" && maxWait >= 0) {
	        _flashCheckTimeout = _setTimeout(function() {
	          if (typeof _flashState.deactivated !== "boolean") {
	            _flashState.deactivated = true;
	          }
	          if (_flashState.deactivated === true) {
	            ZeroClipboard.emit({
	              type: "error",
	              name: "flash-deactivated"
	            });
	          }
	        }, maxWait);
	      }
	      _flashState.overdue = false;
	      _embedSwf();
	    }
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.destroy`.
	 * @private
	 */
	  var _destroy = function() {
	    ZeroClipboard.clearData();
	    ZeroClipboard.blur();
	    ZeroClipboard.emit("destroy");
	    _unembedSwf();
	    ZeroClipboard.off();
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.setData`.
	 * @private
	 */
	  var _setData = function(format, data) {
	    var dataObj;
	    if (typeof format === "object" && format && typeof data === "undefined") {
	      dataObj = format;
	      ZeroClipboard.clearData();
	    } else if (typeof format === "string" && format) {
	      dataObj = {};
	      dataObj[format] = data;
	    } else {
	      return;
	    }
	    for (var dataFormat in dataObj) {
	      if (typeof dataFormat === "string" && dataFormat && _hasOwn.call(dataObj, dataFormat) && typeof dataObj[dataFormat] === "string" && dataObj[dataFormat]) {
	        _clipData[dataFormat] = dataObj[dataFormat];
	      }
	    }
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.clearData`.
	 * @private
	 */
	  var _clearData = function(format) {
	    if (typeof format === "undefined") {
	      _deleteOwnProperties(_clipData);
	      _clipDataFormatMap = null;
	    } else if (typeof format === "string" && _hasOwn.call(_clipData, format)) {
	      delete _clipData[format];
	    }
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.getData`.
	 * @private
	 */
	  var _getData = function(format) {
	    if (typeof format === "undefined") {
	      return _deepCopy(_clipData);
	    } else if (typeof format === "string" && _hasOwn.call(_clipData, format)) {
	      return _clipData[format];
	    }
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.focus`/`ZeroClipboard.activate`.
	 * @private
	 */
	  var _focus = function(element) {
	    if (!(element && element.nodeType === 1)) {
	      return;
	    }
	    if (_currentElement) {
	      _removeClass(_currentElement, _globalConfig.activeClass);
	      if (_currentElement !== element) {
	        _removeClass(_currentElement, _globalConfig.hoverClass);
	      }
	    }
	    _currentElement = element;
	    _addClass(element, _globalConfig.hoverClass);
	    var newTitle = element.getAttribute("title") || _globalConfig.title;
	    if (typeof newTitle === "string" && newTitle) {
	      var htmlBridge = _getHtmlBridge(_flashState.bridge);
	      if (htmlBridge) {
	        htmlBridge.setAttribute("title", newTitle);
	      }
	    }
	    var useHandCursor = _globalConfig.forceHandCursor === true || _getStyle(element, "cursor") === "pointer";
	    _setHandCursor(useHandCursor);
	    _reposition();
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.blur`/`ZeroClipboard.deactivate`.
	 * @private
	 */
	  var _blur = function() {
	    var htmlBridge = _getHtmlBridge(_flashState.bridge);
	    if (htmlBridge) {
	      htmlBridge.removeAttribute("title");
	      htmlBridge.style.left = "0px";
	      htmlBridge.style.top = "-9999px";
	      htmlBridge.style.width = "1px";
	      htmlBridge.style.height = "1px";
	    }
	    if (_currentElement) {
	      _removeClass(_currentElement, _globalConfig.hoverClass);
	      _removeClass(_currentElement, _globalConfig.activeClass);
	      _currentElement = null;
	    }
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.activeElement`.
	 * @private
	 */
	  var _activeElement = function() {
	    return _currentElement || null;
	  };
	  /**
	 * Check if a value is a valid HTML4 `ID` or `Name` token.
	 * @private
	 */
	  var _isValidHtml4Id = function(id) {
	    return typeof id === "string" && id && /^[A-Za-z][A-Za-z0-9_:\-\.]*$/.test(id);
	  };
	  /**
	 * Create or update an `event` object, based on the `eventType`.
	 * @private
	 */
	  var _createEvent = function(event) {
	    var eventType;
	    if (typeof event === "string" && event) {
	      eventType = event;
	      event = {};
	    } else if (typeof event === "object" && event && typeof event.type === "string" && event.type) {
	      eventType = event.type;
	    }
	    if (!eventType) {
	      return;
	    }
	    eventType = eventType.toLowerCase();
	    if (!event.target && (/^(copy|aftercopy|_click)$/.test(eventType) || eventType === "error" && event.name === "clipboard-error")) {
	      event.target = _copyTarget;
	    }
	    _extend(event, {
	      type: eventType,
	      target: event.target || _currentElement || null,
	      relatedTarget: event.relatedTarget || null,
	      currentTarget: _flashState && _flashState.bridge || null,
	      timeStamp: event.timeStamp || _now() || null
	    });
	    var msg = _eventMessages[event.type];
	    if (event.type === "error" && event.name && msg) {
	      msg = msg[event.name];
	    }
	    if (msg) {
	      event.message = msg;
	    }
	    if (event.type === "ready") {
	      _extend(event, {
	        target: null,
	        version: _flashState.version
	      });
	    }
	    if (event.type === "error") {
	      if (_flashStateErrorNameMatchingRegex.test(event.name)) {
	        _extend(event, {
	          target: null,
	          minimumVersion: _minimumFlashVersion
	        });
	      }
	      if (_flashStateEnabledErrorNameMatchingRegex.test(event.name)) {
	        _extend(event, {
	          version: _flashState.version
	        });
	      }
	    }
	    if (event.type === "copy") {
	      event.clipboardData = {
	        setData: ZeroClipboard.setData,
	        clearData: ZeroClipboard.clearData
	      };
	    }
	    if (event.type === "aftercopy") {
	      event = _mapClipResultsFromFlash(event, _clipDataFormatMap);
	    }
	    if (event.target && !event.relatedTarget) {
	      event.relatedTarget = _getRelatedTarget(event.target);
	    }
	    return _addMouseData(event);
	  };
	  /**
	 * Get a relatedTarget from the target's `data-clipboard-target` attribute
	 * @private
	 */
	  var _getRelatedTarget = function(targetEl) {
	    var relatedTargetId = targetEl && targetEl.getAttribute && targetEl.getAttribute("data-clipboard-target");
	    return relatedTargetId ? _document.getElementById(relatedTargetId) : null;
	  };
	  /**
	 * Add element and position data to `MouseEvent` instances
	 * @private
	 */
	  var _addMouseData = function(event) {
	    if (event && /^_(?:click|mouse(?:over|out|down|up|move))$/.test(event.type)) {
	      var srcElement = event.target;
	      var fromElement = event.type === "_mouseover" && event.relatedTarget ? event.relatedTarget : undefined;
	      var toElement = event.type === "_mouseout" && event.relatedTarget ? event.relatedTarget : undefined;
	      var pos = _getElementPosition(srcElement);
	      var screenLeft = _window.screenLeft || _window.screenX || 0;
	      var screenTop = _window.screenTop || _window.screenY || 0;
	      var scrollLeft = _document.body.scrollLeft + _document.documentElement.scrollLeft;
	      var scrollTop = _document.body.scrollTop + _document.documentElement.scrollTop;
	      var pageX = pos.left + (typeof event._stageX === "number" ? event._stageX : 0);
	      var pageY = pos.top + (typeof event._stageY === "number" ? event._stageY : 0);
	      var clientX = pageX - scrollLeft;
	      var clientY = pageY - scrollTop;
	      var screenX = screenLeft + clientX;
	      var screenY = screenTop + clientY;
	      var moveX = typeof event.movementX === "number" ? event.movementX : 0;
	      var moveY = typeof event.movementY === "number" ? event.movementY : 0;
	      delete event._stageX;
	      delete event._stageY;
	      _extend(event, {
	        srcElement: srcElement,
	        fromElement: fromElement,
	        toElement: toElement,
	        screenX: screenX,
	        screenY: screenY,
	        pageX: pageX,
	        pageY: pageY,
	        clientX: clientX,
	        clientY: clientY,
	        x: clientX,
	        y: clientY,
	        movementX: moveX,
	        movementY: moveY,
	        offsetX: 0,
	        offsetY: 0,
	        layerX: 0,
	        layerY: 0
	      });
	    }
	    return event;
	  };
	  /**
	 * Determine if an event's registered handlers should be execute synchronously or asynchronously.
	 *
	 * @returns {boolean}
	 * @private
	 */
	  var _shouldPerformAsync = function(event) {
	    var eventType = event && typeof event.type === "string" && event.type || "";
	    return !/^(?:(?:before)?copy|destroy)$/.test(eventType);
	  };
	  /**
	 * Control if a callback should be executed asynchronously or not.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _dispatchCallback = function(func, context, args, async) {
	    if (async) {
	      _setTimeout(function() {
	        func.apply(context, args);
	      }, 0);
	    } else {
	      func.apply(context, args);
	    }
	  };
	  /**
	 * Handle the actual dispatching of events to client instances.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _dispatchCallbacks = function(event) {
	    if (!(typeof event === "object" && event && event.type)) {
	      return;
	    }
	    var async = _shouldPerformAsync(event);
	    var wildcardTypeHandlers = _handlers["*"] || [];
	    var specificTypeHandlers = _handlers[event.type] || [];
	    var handlers = wildcardTypeHandlers.concat(specificTypeHandlers);
	    if (handlers && handlers.length) {
	      var i, len, func, context, eventCopy, originalContext = this;
	      for (i = 0, len = handlers.length; i < len; i++) {
	        func = handlers[i];
	        context = originalContext;
	        if (typeof func === "string" && typeof _window[func] === "function") {
	          func = _window[func];
	        }
	        if (typeof func === "object" && func && typeof func.handleEvent === "function") {
	          context = func;
	          func = func.handleEvent;
	        }
	        if (typeof func === "function") {
	          eventCopy = _extend({}, event);
	          _dispatchCallback(func, context, [ eventCopy ], async);
	        }
	      }
	    }
	    return this;
	  };
	  /**
	 * Check an `error` event's `name` property to see if Flash has
	 * already loaded, which rules out possible `iframe` sandboxing.
	 * @private
	 */
	  var _getSandboxStatusFromErrorEvent = function(event) {
	    var isSandboxed = null;
	    if (_pageIsFramed === false || event && event.type === "error" && event.name && _errorsThatOnlyOccurAfterFlashLoads.indexOf(event.name) !== -1) {
	      isSandboxed = false;
	    }
	    return isSandboxed;
	  };
	  /**
	 * Preprocess any special behaviors, reactions, or state changes after receiving this event.
	 * Executes only once per event emitted, NOT once per client.
	 * @private
	 */
	  var _preprocessEvent = function(event) {
	    var element = event.target || _currentElement || null;
	    var sourceIsSwf = event._source === "swf";
	    delete event._source;
	    switch (event.type) {
	     case "error":
	      var isSandboxed = event.name === "flash-sandboxed" || _getSandboxStatusFromErrorEvent(event);
	      if (typeof isSandboxed === "boolean") {
	        _flashState.sandboxed = isSandboxed;
	      }
	      if (_flashStateErrorNames.indexOf(event.name) !== -1) {
	        _extend(_flashState, {
	          disabled: event.name === "flash-disabled",
	          outdated: event.name === "flash-outdated",
	          unavailable: event.name === "flash-unavailable",
	          degraded: event.name === "flash-degraded",
	          deactivated: event.name === "flash-deactivated",
	          overdue: event.name === "flash-overdue",
	          ready: false
	        });
	      } else if (event.name === "version-mismatch") {
	        _zcSwfVersion = event.swfVersion;
	        _extend(_flashState, {
	          disabled: false,
	          outdated: false,
	          unavailable: false,
	          degraded: false,
	          deactivated: false,
	          overdue: false,
	          ready: false
	        });
	      }
	      _clearTimeoutsAndPolling();
	      break;

	     case "ready":
	      _zcSwfVersion = event.swfVersion;
	      var wasDeactivated = _flashState.deactivated === true;
	      _extend(_flashState, {
	        disabled: false,
	        outdated: false,
	        sandboxed: false,
	        unavailable: false,
	        degraded: false,
	        deactivated: false,
	        overdue: wasDeactivated,
	        ready: !wasDeactivated
	      });
	      _clearTimeoutsAndPolling();
	      break;

	     case "beforecopy":
	      _copyTarget = element;
	      break;

	     case "copy":
	      var textContent, htmlContent, targetEl = event.relatedTarget;
	      if (!(_clipData["text/html"] || _clipData["text/plain"]) && targetEl && (htmlContent = targetEl.value || targetEl.outerHTML || targetEl.innerHTML) && (textContent = targetEl.value || targetEl.textContent || targetEl.innerText)) {
	        event.clipboardData.clearData();
	        event.clipboardData.setData("text/plain", textContent);
	        if (htmlContent !== textContent) {
	          event.clipboardData.setData("text/html", htmlContent);
	        }
	      } else if (!_clipData["text/plain"] && event.target && (textContent = event.target.getAttribute("data-clipboard-text"))) {
	        event.clipboardData.clearData();
	        event.clipboardData.setData("text/plain", textContent);
	      }
	      break;

	     case "aftercopy":
	      _queueEmitClipboardErrors(event);
	      ZeroClipboard.clearData();
	      if (element && element !== _safeActiveElement() && element.focus) {
	        element.focus();
	      }
	      break;

	     case "_mouseover":
	      ZeroClipboard.focus(element);
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        if (element && element !== event.relatedTarget && !_containedBy(event.relatedTarget, element)) {
	          _fireMouseEvent(_extend({}, event, {
	            type: "mouseenter",
	            bubbles: false,
	            cancelable: false
	          }));
	        }
	        _fireMouseEvent(_extend({}, event, {
	          type: "mouseover"
	        }));
	      }
	      break;

	     case "_mouseout":
	      ZeroClipboard.blur();
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        if (element && element !== event.relatedTarget && !_containedBy(event.relatedTarget, element)) {
	          _fireMouseEvent(_extend({}, event, {
	            type: "mouseleave",
	            bubbles: false,
	            cancelable: false
	          }));
	        }
	        _fireMouseEvent(_extend({}, event, {
	          type: "mouseout"
	        }));
	      }
	      break;

	     case "_mousedown":
	      _addClass(element, _globalConfig.activeClass);
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        _fireMouseEvent(_extend({}, event, {
	          type: event.type.slice(1)
	        }));
	      }
	      break;

	     case "_mouseup":
	      _removeClass(element, _globalConfig.activeClass);
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        _fireMouseEvent(_extend({}, event, {
	          type: event.type.slice(1)
	        }));
	      }
	      break;

	     case "_click":
	      _copyTarget = null;
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        _fireMouseEvent(_extend({}, event, {
	          type: event.type.slice(1)
	        }));
	      }
	      break;

	     case "_mousemove":
	      if (_globalConfig.bubbleEvents === true && sourceIsSwf) {
	        _fireMouseEvent(_extend({}, event, {
	          type: event.type.slice(1)
	        }));
	      }
	      break;
	    }
	    if (/^_(?:click|mouse(?:over|out|down|up|move))$/.test(event.type)) {
	      return true;
	    }
	  };
	  /**
	 * Check an "aftercopy" event for clipboard errors and emit a corresponding "error" event.
	 * @private
	 */
	  var _queueEmitClipboardErrors = function(aftercopyEvent) {
	    if (aftercopyEvent.errors && aftercopyEvent.errors.length > 0) {
	      var errorEvent = _deepCopy(aftercopyEvent);
	      _extend(errorEvent, {
	        type: "error",
	        name: "clipboard-error"
	      });
	      delete errorEvent.success;
	      _setTimeout(function() {
	        ZeroClipboard.emit(errorEvent);
	      }, 0);
	    }
	  };
	  /**
	 * Dispatch a synthetic MouseEvent.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _fireMouseEvent = function(event) {
	    if (!(event && typeof event.type === "string" && event)) {
	      return;
	    }
	    var e, target = event.target || null, doc = target && target.ownerDocument || _document, defaults = {
	      view: doc.defaultView || _window,
	      canBubble: true,
	      cancelable: true,
	      detail: event.type === "click" ? 1 : 0,
	      button: typeof event.which === "number" ? event.which - 1 : typeof event.button === "number" ? event.button : doc.createEvent ? 0 : 1
	    }, args = _extend(defaults, event);
	    if (!target) {
	      return;
	    }
	    if (doc.createEvent && target.dispatchEvent) {
	      args = [ args.type, args.canBubble, args.cancelable, args.view, args.detail, args.screenX, args.screenY, args.clientX, args.clientY, args.ctrlKey, args.altKey, args.shiftKey, args.metaKey, args.button, args.relatedTarget ];
	      e = doc.createEvent("MouseEvents");
	      if (e.initMouseEvent) {
	        e.initMouseEvent.apply(e, args);
	        e._source = "js";
	        target.dispatchEvent(e);
	      }
	    }
	  };
	  /**
	 * Continuously poll the DOM until either:
	 *  (a) the fallback content becomes visible, or
	 *  (b) we receive an event from SWF (handled elsewhere)
	 *
	 * IMPORTANT:
	 * This is NOT a necessary check but it can result in significantly faster
	 * detection of bad `swfPath` configuration and/or network/server issues [in
	 * supported browsers] than waiting for the entire `flashLoadTimeout` duration
	 * to elapse before detecting that the SWF cannot be loaded. The detection
	 * duration can be anywhere from 10-30 times faster [in supported browsers] by
	 * using this approach.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _watchForSwfFallbackContent = function() {
	    var maxWait = _globalConfig.flashLoadTimeout;
	    if (typeof maxWait === "number" && maxWait >= 0) {
	      var pollWait = Math.min(1e3, maxWait / 10);
	      var fallbackContentId = _globalConfig.swfObjectId + "_fallbackContent";
	      _swfFallbackCheckInterval = _setInterval(function() {
	        var el = _document.getElementById(fallbackContentId);
	        if (_isElementVisible(el)) {
	          _clearTimeoutsAndPolling();
	          _flashState.deactivated = null;
	          ZeroClipboard.emit({
	            type: "error",
	            name: "swf-not-found"
	          });
	        }
	      }, pollWait);
	    }
	  };
	  /**
	 * Create the HTML bridge element to embed the Flash object into.
	 * @private
	 */
	  var _createHtmlBridge = function() {
	    var container = _document.createElement("div");
	    container.id = _globalConfig.containerId;
	    container.className = _globalConfig.containerClass;
	    container.style.position = "absolute";
	    container.style.left = "0px";
	    container.style.top = "-9999px";
	    container.style.width = "1px";
	    container.style.height = "1px";
	    container.style.zIndex = "" + _getSafeZIndex(_globalConfig.zIndex);
	    return container;
	  };
	  /**
	 * Get the HTML element container that wraps the Flash bridge object/element.
	 * @private
	 */
	  var _getHtmlBridge = function(flashBridge) {
	    var htmlBridge = flashBridge && flashBridge.parentNode;
	    while (htmlBridge && htmlBridge.nodeName === "OBJECT" && htmlBridge.parentNode) {
	      htmlBridge = htmlBridge.parentNode;
	    }
	    return htmlBridge || null;
	  };
	  /**
	 * Create the SWF object.
	 *
	 * @returns The SWF object reference.
	 * @private
	 */
	  var _embedSwf = function() {
	    var len, flashBridge = _flashState.bridge, container = _getHtmlBridge(flashBridge);
	    if (!flashBridge) {
	      var allowScriptAccess = _determineScriptAccess(_window.location.host, _globalConfig);
	      var allowNetworking = allowScriptAccess === "never" ? "none" : "all";
	      var flashvars = _vars(_extend({
	        jsVersion: ZeroClipboard.version
	      }, _globalConfig));
	      var swfUrl = _globalConfig.swfPath + _cacheBust(_globalConfig.swfPath, _globalConfig);
	      container = _createHtmlBridge();
	      var divToBeReplaced = _document.createElement("div");
	      container.appendChild(divToBeReplaced);
	      _document.body.appendChild(container);
	      var tmpDiv = _document.createElement("div");
	      var usingActiveX = _flashState.pluginType === "activex";
	      tmpDiv.innerHTML = '<object id="' + _globalConfig.swfObjectId + '" name="' + _globalConfig.swfObjectId + '" ' + 'width="100%" height="100%" ' + (usingActiveX ? 'classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"' : 'type="application/x-shockwave-flash" data="' + swfUrl + '"') + ">" + (usingActiveX ? '<param name="movie" value="' + swfUrl + '"/>' : "") + '<param name="allowScriptAccess" value="' + allowScriptAccess + '"/>' + '<param name="allowNetworking" value="' + allowNetworking + '"/>' + '<param name="menu" value="false"/>' + '<param name="wmode" value="transparent"/>' + '<param name="flashvars" value="' + flashvars + '"/>' + '<div id="' + _globalConfig.swfObjectId + '_fallbackContent">&nbsp;</div>' + "</object>";
	      flashBridge = tmpDiv.firstChild;
	      tmpDiv = null;
	      _unwrap(flashBridge).ZeroClipboard = ZeroClipboard;
	      container.replaceChild(flashBridge, divToBeReplaced);
	      _watchForSwfFallbackContent();
	    }
	    if (!flashBridge) {
	      flashBridge = _document[_globalConfig.swfObjectId];
	      if (flashBridge && (len = flashBridge.length)) {
	        flashBridge = flashBridge[len - 1];
	      }
	      if (!flashBridge && container) {
	        flashBridge = container.firstChild;
	      }
	    }
	    _flashState.bridge = flashBridge || null;
	    return flashBridge;
	  };
	  /**
	 * Destroy the SWF object.
	 * @private
	 */
	  var _unembedSwf = function() {
	    var flashBridge = _flashState.bridge;
	    if (flashBridge) {
	      var htmlBridge = _getHtmlBridge(flashBridge);
	      if (htmlBridge) {
	        if (_flashState.pluginType === "activex" && "readyState" in flashBridge) {
	          flashBridge.style.display = "none";
	          (function removeSwfFromIE() {
	            if (flashBridge.readyState === 4) {
	              for (var prop in flashBridge) {
	                if (typeof flashBridge[prop] === "function") {
	                  flashBridge[prop] = null;
	                }
	              }
	              if (flashBridge.parentNode) {
	                flashBridge.parentNode.removeChild(flashBridge);
	              }
	              if (htmlBridge.parentNode) {
	                htmlBridge.parentNode.removeChild(htmlBridge);
	              }
	            } else {
	              _setTimeout(removeSwfFromIE, 10);
	            }
	          })();
	        } else {
	          if (flashBridge.parentNode) {
	            flashBridge.parentNode.removeChild(flashBridge);
	          }
	          if (htmlBridge.parentNode) {
	            htmlBridge.parentNode.removeChild(htmlBridge);
	          }
	        }
	      }
	      _clearTimeoutsAndPolling();
	      _flashState.ready = null;
	      _flashState.bridge = null;
	      _flashState.deactivated = null;
	      _zcSwfVersion = undefined;
	    }
	  };
	  /**
	 * Map the data format names of the "clipData" to Flash-friendly names.
	 *
	 * @returns A new transformed object.
	 * @private
	 */
	  var _mapClipDataToFlash = function(clipData) {
	    var newClipData = {}, formatMap = {};
	    if (!(typeof clipData === "object" && clipData)) {
	      return;
	    }
	    for (var dataFormat in clipData) {
	      if (dataFormat && _hasOwn.call(clipData, dataFormat) && typeof clipData[dataFormat] === "string" && clipData[dataFormat]) {
	        switch (dataFormat.toLowerCase()) {
	         case "text/plain":
	         case "text":
	         case "air:text":
	         case "flash:text":
	          newClipData.text = clipData[dataFormat];
	          formatMap.text = dataFormat;
	          break;

	         case "text/html":
	         case "html":
	         case "air:html":
	         case "flash:html":
	          newClipData.html = clipData[dataFormat];
	          formatMap.html = dataFormat;
	          break;

	         case "application/rtf":
	         case "text/rtf":
	         case "rtf":
	         case "richtext":
	         case "air:rtf":
	         case "flash:rtf":
	          newClipData.rtf = clipData[dataFormat];
	          formatMap.rtf = dataFormat;
	          break;

	         default:
	          break;
	        }
	      }
	    }
	    return {
	      data: newClipData,
	      formatMap: formatMap
	    };
	  };
	  /**
	 * Map the data format names from Flash-friendly names back to their original "clipData" names (via a format mapping).
	 *
	 * @returns A new transformed object.
	 * @private
	 */
	  var _mapClipResultsFromFlash = function(clipResults, formatMap) {
	    if (!(typeof clipResults === "object" && clipResults && typeof formatMap === "object" && formatMap)) {
	      return clipResults;
	    }
	    var newResults = {};
	    for (var prop in clipResults) {
	      if (_hasOwn.call(clipResults, prop)) {
	        if (prop === "errors") {
	          newResults[prop] = clipResults[prop] ? clipResults[prop].slice() : [];
	          for (var i = 0, len = newResults[prop].length; i < len; i++) {
	            newResults[prop][i].format = formatMap[newResults[prop][i].format];
	          }
	        } else if (prop !== "success" && prop !== "data") {
	          newResults[prop] = clipResults[prop];
	        } else {
	          newResults[prop] = {};
	          var tmpHash = clipResults[prop];
	          for (var dataFormat in tmpHash) {
	            if (dataFormat && _hasOwn.call(tmpHash, dataFormat) && _hasOwn.call(formatMap, dataFormat)) {
	              newResults[prop][formatMap[dataFormat]] = tmpHash[dataFormat];
	            }
	          }
	        }
	      }
	    }
	    return newResults;
	  };
	  /**
	 * Will look at a path, and will create a "?noCache={time}" or "&noCache={time}"
	 * query param string to return. Does NOT append that string to the original path.
	 * This is useful because ExternalInterface often breaks when a Flash SWF is cached.
	 *
	 * @returns The `noCache` query param with necessary "?"/"&" prefix.
	 * @private
	 */
	  var _cacheBust = function(path, options) {
	    var cacheBust = options == null || options && options.cacheBust === true;
	    if (cacheBust) {
	      return (path.indexOf("?") === -1 ? "?" : "&") + "noCache=" + _now();
	    } else {
	      return "";
	    }
	  };
	  /**
	 * Creates a query string for the FlashVars param.
	 * Does NOT include the cache-busting query param.
	 *
	 * @returns FlashVars query string
	 * @private
	 */
	  var _vars = function(options) {
	    var i, len, domain, domains, str = "", trustedOriginsExpanded = [];
	    if (options.trustedDomains) {
	      if (typeof options.trustedDomains === "string") {
	        domains = [ options.trustedDomains ];
	      } else if (typeof options.trustedDomains === "object" && "length" in options.trustedDomains) {
	        domains = options.trustedDomains;
	      }
	    }
	    if (domains && domains.length) {
	      for (i = 0, len = domains.length; i < len; i++) {
	        if (_hasOwn.call(domains, i) && domains[i] && typeof domains[i] === "string") {
	          domain = _extractDomain(domains[i]);
	          if (!domain) {
	            continue;
	          }
	          if (domain === "*") {
	            trustedOriginsExpanded.length = 0;
	            trustedOriginsExpanded.push(domain);
	            break;
	          }
	          trustedOriginsExpanded.push.apply(trustedOriginsExpanded, [ domain, "//" + domain, _window.location.protocol + "//" + domain ]);
	        }
	      }
	    }
	    if (trustedOriginsExpanded.length) {
	      str += "trustedOrigins=" + _encodeURIComponent(trustedOriginsExpanded.join(","));
	    }
	    if (options.forceEnhancedClipboard === true) {
	      str += (str ? "&" : "") + "forceEnhancedClipboard=true";
	    }
	    if (typeof options.swfObjectId === "string" && options.swfObjectId) {
	      str += (str ? "&" : "") + "swfObjectId=" + _encodeURIComponent(options.swfObjectId);
	    }
	    if (typeof options.jsVersion === "string" && options.jsVersion) {
	      str += (str ? "&" : "") + "jsVersion=" + _encodeURIComponent(options.jsVersion);
	    }
	    return str;
	  };
	  /**
	 * Extract the domain (e.g. "github.com") from an origin (e.g. "https://github.com") or
	 * URL (e.g. "https://github.com/zeroclipboard/zeroclipboard/").
	 *
	 * @returns the domain
	 * @private
	 */
	  var _extractDomain = function(originOrUrl) {
	    if (originOrUrl == null || originOrUrl === "") {
	      return null;
	    }
	    originOrUrl = originOrUrl.replace(/^\s+|\s+$/g, "");
	    if (originOrUrl === "") {
	      return null;
	    }
	    var protocolIndex = originOrUrl.indexOf("//");
	    originOrUrl = protocolIndex === -1 ? originOrUrl : originOrUrl.slice(protocolIndex + 2);
	    var pathIndex = originOrUrl.indexOf("/");
	    originOrUrl = pathIndex === -1 ? originOrUrl : protocolIndex === -1 || pathIndex === 0 ? null : originOrUrl.slice(0, pathIndex);
	    if (originOrUrl && originOrUrl.slice(-4).toLowerCase() === ".swf") {
	      return null;
	    }
	    return originOrUrl || null;
	  };
	  /**
	 * Set `allowScriptAccess` based on `trustedDomains` and `window.location.host` vs. `swfPath`.
	 *
	 * @returns The appropriate script access level.
	 * @private
	 */
	  var _determineScriptAccess = function() {
	    var _extractAllDomains = function(origins) {
	      var i, len, tmp, resultsArray = [];
	      if (typeof origins === "string") {
	        origins = [ origins ];
	      }
	      if (!(typeof origins === "object" && origins && typeof origins.length === "number")) {
	        return resultsArray;
	      }
	      for (i = 0, len = origins.length; i < len; i++) {
	        if (_hasOwn.call(origins, i) && (tmp = _extractDomain(origins[i]))) {
	          if (tmp === "*") {
	            resultsArray.length = 0;
	            resultsArray.push("*");
	            break;
	          }
	          if (resultsArray.indexOf(tmp) === -1) {
	            resultsArray.push(tmp);
	          }
	        }
	      }
	      return resultsArray;
	    };
	    return function(currentDomain, configOptions) {
	      var swfDomain = _extractDomain(configOptions.swfPath);
	      if (swfDomain === null) {
	        swfDomain = currentDomain;
	      }
	      var trustedDomains = _extractAllDomains(configOptions.trustedDomains);
	      var len = trustedDomains.length;
	      if (len > 0) {
	        if (len === 1 && trustedDomains[0] === "*") {
	          return "always";
	        }
	        if (trustedDomains.indexOf(currentDomain) !== -1) {
	          if (len === 1 && currentDomain === swfDomain) {
	            return "sameDomain";
	          }
	          return "always";
	        }
	      }
	      return "never";
	    };
	  }();
	  /**
	 * Get the currently active/focused DOM element.
	 *
	 * @returns the currently active/focused element, or `null`
	 * @private
	 */
	  var _safeActiveElement = function() {
	    try {
	      return _document.activeElement;
	    } catch (err) {
	      return null;
	    }
	  };
	  /**
	 * Add a class to an element, if it doesn't already have it.
	 *
	 * @returns The element, with its new class added.
	 * @private
	 */
	  var _addClass = function(element, value) {
	    var c, cl, className, classNames = [];
	    if (typeof value === "string" && value) {
	      classNames = value.split(/\s+/);
	    }
	    if (element && element.nodeType === 1 && classNames.length > 0) {
	      if (element.classList) {
	        for (c = 0, cl = classNames.length; c < cl; c++) {
	          element.classList.add(classNames[c]);
	        }
	      } else if (element.hasOwnProperty("className")) {
	        className = " " + element.className + " ";
	        for (c = 0, cl = classNames.length; c < cl; c++) {
	          if (className.indexOf(" " + classNames[c] + " ") === -1) {
	            className += classNames[c] + " ";
	          }
	        }
	        element.className = className.replace(/^\s+|\s+$/g, "");
	      }
	    }
	    return element;
	  };
	  /**
	 * Remove a class from an element, if it has it.
	 *
	 * @returns The element, with its class removed.
	 * @private
	 */
	  var _removeClass = function(element, value) {
	    var c, cl, className, classNames = [];
	    if (typeof value === "string" && value) {
	      classNames = value.split(/\s+/);
	    }
	    if (element && element.nodeType === 1 && classNames.length > 0) {
	      if (element.classList && element.classList.length > 0) {
	        for (c = 0, cl = classNames.length; c < cl; c++) {
	          element.classList.remove(classNames[c]);
	        }
	      } else if (element.className) {
	        className = (" " + element.className + " ").replace(/[\r\n\t]/g, " ");
	        for (c = 0, cl = classNames.length; c < cl; c++) {
	          className = className.replace(" " + classNames[c] + " ", " ");
	        }
	        element.className = className.replace(/^\s+|\s+$/g, "");
	      }
	    }
	    return element;
	  };
	  /**
	 * Attempt to interpret the element's CSS styling. If `prop` is `"cursor"`,
	 * then we assume that it should be a hand ("pointer") cursor if the element
	 * is an anchor element ("a" tag).
	 *
	 * @returns The computed style property.
	 * @private
	 */
	  var _getStyle = function(el, prop) {
	    var value = _getComputedStyle(el, null).getPropertyValue(prop);
	    if (prop === "cursor") {
	      if (!value || value === "auto") {
	        if (el.nodeName === "A") {
	          return "pointer";
	        }
	      }
	    }
	    return value;
	  };
	  /**
	 * Get the absolutely positioned coordinates of a DOM element.
	 *
	 * @returns Object containing the element's position, width, and height.
	 * @private
	 */
	  var _getElementPosition = function(el) {
	    var pos = {
	      left: 0,
	      top: 0,
	      width: 0,
	      height: 0
	    };
	    if (el.getBoundingClientRect) {
	      var elRect = el.getBoundingClientRect();
	      var pageXOffset = _window.pageXOffset;
	      var pageYOffset = _window.pageYOffset;
	      var leftBorderWidth = _document.documentElement.clientLeft || 0;
	      var topBorderWidth = _document.documentElement.clientTop || 0;
	      var leftBodyOffset = 0;
	      var topBodyOffset = 0;
	      if (_getStyle(_document.body, "position") === "relative") {
	        var bodyRect = _document.body.getBoundingClientRect();
	        var htmlRect = _document.documentElement.getBoundingClientRect();
	        leftBodyOffset = bodyRect.left - htmlRect.left || 0;
	        topBodyOffset = bodyRect.top - htmlRect.top || 0;
	      }
	      pos.left = elRect.left + pageXOffset - leftBorderWidth - leftBodyOffset;
	      pos.top = elRect.top + pageYOffset - topBorderWidth - topBodyOffset;
	      pos.width = "width" in elRect ? elRect.width : elRect.right - elRect.left;
	      pos.height = "height" in elRect ? elRect.height : elRect.bottom - elRect.top;
	    }
	    return pos;
	  };
	  /**
	 * Determine is an element is visible somewhere within the document (page).
	 *
	 * @returns Boolean
	 * @private
	 */
	  var _isElementVisible = function(el) {
	    if (!el) {
	      return false;
	    }
	    var styles = _getComputedStyle(el, null);
	    var hasCssHeight = _parseFloat(styles.height) > 0;
	    var hasCssWidth = _parseFloat(styles.width) > 0;
	    var hasCssTop = _parseFloat(styles.top) >= 0;
	    var hasCssLeft = _parseFloat(styles.left) >= 0;
	    var cssKnows = hasCssHeight && hasCssWidth && hasCssTop && hasCssLeft;
	    var rect = cssKnows ? null : _getElementPosition(el);
	    var isVisible = styles.display !== "none" && styles.visibility !== "collapse" && (cssKnows || !!rect && (hasCssHeight || rect.height > 0) && (hasCssWidth || rect.width > 0) && (hasCssTop || rect.top >= 0) && (hasCssLeft || rect.left >= 0));
	    return isVisible;
	  };
	  /**
	 * Clear all existing timeouts and interval polling delegates.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _clearTimeoutsAndPolling = function() {
	    _clearTimeout(_flashCheckTimeout);
	    _flashCheckTimeout = 0;
	    _clearInterval(_swfFallbackCheckInterval);
	    _swfFallbackCheckInterval = 0;
	  };
	  /**
	 * Reposition the Flash object to cover the currently activated element.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _reposition = function() {
	    var htmlBridge;
	    if (_currentElement && (htmlBridge = _getHtmlBridge(_flashState.bridge))) {
	      var pos = _getElementPosition(_currentElement);
	      _extend(htmlBridge.style, {
	        width: pos.width + "px",
	        height: pos.height + "px",
	        top: pos.top + "px",
	        left: pos.left + "px",
	        zIndex: "" + _getSafeZIndex(_globalConfig.zIndex)
	      });
	    }
	  };
	  /**
	 * Sends a signal to the Flash object to display the hand cursor if `true`.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _setHandCursor = function(enabled) {
	    if (_flashState.ready === true) {
	      if (_flashState.bridge && typeof _flashState.bridge.setHandCursor === "function") {
	        _flashState.bridge.setHandCursor(enabled);
	      } else {
	        _flashState.ready = false;
	      }
	    }
	  };
	  /**
	 * Get a safe value for `zIndex`
	 *
	 * @returns an integer, or "auto"
	 * @private
	 */
	  var _getSafeZIndex = function(val) {
	    if (/^(?:auto|inherit)$/.test(val)) {
	      return val;
	    }
	    var zIndex;
	    if (typeof val === "number" && !_isNaN(val)) {
	      zIndex = val;
	    } else if (typeof val === "string") {
	      zIndex = _getSafeZIndex(_parseInt(val, 10));
	    }
	    return typeof zIndex === "number" ? zIndex : "auto";
	  };
	  /**
	 * Attempt to detect if ZeroClipboard is executing inside of a sandboxed iframe.
	 * If it is, Flash Player cannot be used, so ZeroClipboard is dead in the water.
	 *
	 * @see {@link http://lists.w3.org/Archives/Public/public-whatwg-archive/2014Dec/0002.html}
	 * @see {@link https://github.com/zeroclipboard/zeroclipboard/issues/511}
	 * @see {@link http://zeroclipboard.org/test-iframes.html}
	 *
	 * @returns `true` (is sandboxed), `false` (is not sandboxed), or `null` (uncertain) 
	 * @private
	 */
	  var _detectSandbox = function(doNotReassessFlashSupport) {
	    var effectiveScriptOrigin, frame, frameError, previousState = _flashState.sandboxed, isSandboxed = null;
	    doNotReassessFlashSupport = doNotReassessFlashSupport === true;
	    if (_pageIsFramed === false) {
	      isSandboxed = false;
	    } else {
	      try {
	        frame = window.frameElement || null;
	      } catch (e) {
	        frameError = {
	          name: e.name,
	          message: e.message
	        };
	      }
	      if (frame && frame.nodeType === 1 && frame.nodeName === "IFRAME") {
	        try {
	          isSandboxed = frame.hasAttribute("sandbox");
	        } catch (e) {
	          isSandboxed = null;
	        }
	      } else {
	        try {
	          effectiveScriptOrigin = document.domain || null;
	        } catch (e) {
	          effectiveScriptOrigin = null;
	        }
	        if (effectiveScriptOrigin === null || frameError && frameError.name === "SecurityError" && /(^|[\s\(\[@])sandbox(es|ed|ing|[\s\.,!\)\]@]|$)/.test(frameError.message.toLowerCase())) {
	          isSandboxed = true;
	        }
	      }
	    }
	    _flashState.sandboxed = isSandboxed;
	    if (previousState !== isSandboxed && !doNotReassessFlashSupport) {
	      _detectFlashSupport(_ActiveXObject);
	    }
	    return isSandboxed;
	  };
	  /**
	 * Detect the Flash Player status, version, and plugin type.
	 *
	 * @see {@link https://code.google.com/p/doctype-mirror/wiki/ArticleDetectFlash#The_code}
	 * @see {@link http://stackoverflow.com/questions/12866060/detecting-pepper-ppapi-flash-with-javascript}
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _detectFlashSupport = function(ActiveXObject) {
	    var plugin, ax, mimeType, hasFlash = false, isActiveX = false, isPPAPI = false, flashVersion = "";
	    /**
	   * Derived from Apple's suggested sniffer.
	   * @param {String} desc e.g. "Shockwave Flash 7.0 r61"
	   * @returns {String} "7.0.61"
	   * @private
	   */
	    function parseFlashVersion(desc) {
	      var matches = desc.match(/[\d]+/g);
	      matches.length = 3;
	      return matches.join(".");
	    }
	    function isPepperFlash(flashPlayerFileName) {
	      return !!flashPlayerFileName && (flashPlayerFileName = flashPlayerFileName.toLowerCase()) && (/^(pepflashplayer\.dll|libpepflashplayer\.so|pepperflashplayer\.plugin)$/.test(flashPlayerFileName) || flashPlayerFileName.slice(-13) === "chrome.plugin");
	    }
	    function inspectPlugin(plugin) {
	      if (plugin) {
	        hasFlash = true;
	        if (plugin.version) {
	          flashVersion = parseFlashVersion(plugin.version);
	        }
	        if (!flashVersion && plugin.description) {
	          flashVersion = parseFlashVersion(plugin.description);
	        }
	        if (plugin.filename) {
	          isPPAPI = isPepperFlash(plugin.filename);
	        }
	      }
	    }
	    if (_navigator.plugins && _navigator.plugins.length) {
	      plugin = _navigator.plugins["Shockwave Flash"];
	      inspectPlugin(plugin);
	      if (_navigator.plugins["Shockwave Flash 2.0"]) {
	        hasFlash = true;
	        flashVersion = "2.0.0.11";
	      }
	    } else if (_navigator.mimeTypes && _navigator.mimeTypes.length) {
	      mimeType = _navigator.mimeTypes["application/x-shockwave-flash"];
	      plugin = mimeType && mimeType.enabledPlugin;
	      inspectPlugin(plugin);
	    } else if (typeof ActiveXObject !== "undefined") {
	      isActiveX = true;
	      try {
	        ax = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
	        hasFlash = true;
	        flashVersion = parseFlashVersion(ax.GetVariable("$version"));
	      } catch (e1) {
	        try {
	          ax = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");
	          hasFlash = true;
	          flashVersion = "6.0.21";
	        } catch (e2) {
	          try {
	            ax = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
	            hasFlash = true;
	            flashVersion = parseFlashVersion(ax.GetVariable("$version"));
	          } catch (e3) {
	            isActiveX = false;
	          }
	        }
	      }
	    }
	    _flashState.disabled = hasFlash !== true;
	    _flashState.outdated = flashVersion && _parseFloat(flashVersion) < _parseFloat(_minimumFlashVersion);
	    _flashState.version = flashVersion || "0.0.0";
	    _flashState.pluginType = isPPAPI ? "pepper" : isActiveX ? "activex" : hasFlash ? "netscape" : "unknown";
	  };
	  /**
	 * Invoke the Flash detection algorithms immediately upon inclusion so we're not waiting later.
	 */
	  _detectFlashSupport(_ActiveXObject);
	  /**
	 * Always assess the `sandboxed` state of the page at important Flash-related moments.
	 */
	  _detectSandbox(true);
	  /**
	 * A shell constructor for `ZeroClipboard` client instances.
	 *
	 * @constructor
	 */
	  var ZeroClipboard = function() {
	    if (!(this instanceof ZeroClipboard)) {
	      return new ZeroClipboard();
	    }
	    if (typeof ZeroClipboard._createClient === "function") {
	      ZeroClipboard._createClient.apply(this, _args(arguments));
	    }
	  };
	  /**
	 * The ZeroClipboard library's version number.
	 *
	 * @static
	 * @readonly
	 * @property {string}
	 */
	  _defineProperty(ZeroClipboard, "version", {
	    value: "2.2.0",
	    writable: false,
	    configurable: true,
	    enumerable: true
	  });
	  /**
	 * Update or get a copy of the ZeroClipboard global configuration.
	 * Returns a copy of the current/updated configuration.
	 *
	 * @returns Object
	 * @static
	 */
	  ZeroClipboard.config = function() {
	    return _config.apply(this, _args(arguments));
	  };
	  /**
	 * Diagnostic method that describes the state of the browser, Flash Player, and ZeroClipboard.
	 *
	 * @returns Object
	 * @static
	 */
	  ZeroClipboard.state = function() {
	    return _state.apply(this, _args(arguments));
	  };
	  /**
	 * Check if Flash is unusable for any reason: disabled, outdated, deactivated, etc.
	 *
	 * @returns Boolean
	 * @static
	 */
	  ZeroClipboard.isFlashUnusable = function() {
	    return _isFlashUnusable.apply(this, _args(arguments));
	  };
	  /**
	 * Register an event listener.
	 *
	 * @returns `ZeroClipboard`
	 * @static
	 */
	  ZeroClipboard.on = function() {
	    return _on.apply(this, _args(arguments));
	  };
	  /**
	 * Unregister an event listener.
	 * If no `listener` function/object is provided, it will unregister all listeners for the provided `eventType`.
	 * If no `eventType` is provided, it will unregister all listeners for every event type.
	 *
	 * @returns `ZeroClipboard`
	 * @static
	 */
	  ZeroClipboard.off = function() {
	    return _off.apply(this, _args(arguments));
	  };
	  /**
	 * Retrieve event listeners for an `eventType`.
	 * If no `eventType` is provided, it will retrieve all listeners for every event type.
	 *
	 * @returns array of listeners for the `eventType`; if no `eventType`, then a map/hash object of listeners for all event types; or `null`
	 */
	  ZeroClipboard.handlers = function() {
	    return _listeners.apply(this, _args(arguments));
	  };
	  /**
	 * Event emission receiver from the Flash object, forwarding to any registered JavaScript event listeners.
	 *
	 * @returns For the "copy" event, returns the Flash-friendly "clipData" object; otherwise `undefined`.
	 * @static
	 */
	  ZeroClipboard.emit = function() {
	    return _emit.apply(this, _args(arguments));
	  };
	  /**
	 * Create and embed the Flash object.
	 *
	 * @returns The Flash object
	 * @static
	 */
	  ZeroClipboard.create = function() {
	    return _create.apply(this, _args(arguments));
	  };
	  /**
	 * Self-destruct and clean up everything, including the embedded Flash object.
	 *
	 * @returns `undefined`
	 * @static
	 */
	  ZeroClipboard.destroy = function() {
	    return _destroy.apply(this, _args(arguments));
	  };
	  /**
	 * Set the pending data for clipboard injection.
	 *
	 * @returns `undefined`
	 * @static
	 */
	  ZeroClipboard.setData = function() {
	    return _setData.apply(this, _args(arguments));
	  };
	  /**
	 * Clear the pending data for clipboard injection.
	 * If no `format` is provided, all pending data formats will be cleared.
	 *
	 * @returns `undefined`
	 * @static
	 */
	  ZeroClipboard.clearData = function() {
	    return _clearData.apply(this, _args(arguments));
	  };
	  /**
	 * Get a copy of the pending data for clipboard injection.
	 * If no `format` is provided, a copy of ALL pending data formats will be returned.
	 *
	 * @returns `String` or `Object`
	 * @static
	 */
	  ZeroClipboard.getData = function() {
	    return _getData.apply(this, _args(arguments));
	  };
	  /**
	 * Sets the current HTML object that the Flash object should overlay. This will put the global
	 * Flash object on top of the current element; depending on the setup, this may also set the
	 * pending clipboard text data as well as the Flash object's wrapping element's title attribute
	 * based on the underlying HTML element and ZeroClipboard configuration.
	 *
	 * @returns `undefined`
	 * @static
	 */
	  ZeroClipboard.focus = ZeroClipboard.activate = function() {
	    return _focus.apply(this, _args(arguments));
	  };
	  /**
	 * Un-overlays the Flash object. This will put the global Flash object off-screen; depending on
	 * the setup, this may also unset the Flash object's wrapping element's title attribute based on
	 * the underlying HTML element and ZeroClipboard configuration.
	 *
	 * @returns `undefined`
	 * @static
	 */
	  ZeroClipboard.blur = ZeroClipboard.deactivate = function() {
	    return _blur.apply(this, _args(arguments));
	  };
	  /**
	 * Returns the currently focused/"activated" HTML element that the Flash object is wrapping.
	 *
	 * @returns `HTMLElement` or `null`
	 * @static
	 */
	  ZeroClipboard.activeElement = function() {
	    return _activeElement.apply(this, _args(arguments));
	  };
	  /**
	 * Keep track of the ZeroClipboard client instance counter.
	 */
	  var _clientIdCounter = 0;
	  /**
	 * Keep track of the state of the client instances.
	 *
	 * Entry structure:
	 *   _clientMeta[client.id] = {
	 *     instance: client,
	 *     elements: [],
	 *     handlers: {}
	 *   };
	 */
	  var _clientMeta = {};
	  /**
	 * Keep track of the ZeroClipboard clipped elements counter.
	 */
	  var _elementIdCounter = 0;
	  /**
	 * Keep track of the state of the clipped element relationships to clients.
	 *
	 * Entry structure:
	 *   _elementMeta[element.zcClippingId] = [client1.id, client2.id];
	 */
	  var _elementMeta = {};
	  /**
	 * Keep track of the state of the mouse event handlers for clipped elements.
	 *
	 * Entry structure:
	 *   _mouseHandlers[element.zcClippingId] = {
	 *     mouseover:  function(event) {},
	 *     mouseout:   function(event) {},
	 *     mouseenter: function(event) {},
	 *     mouseleave: function(event) {},
	 *     mousemove:  function(event) {}
	 *   };
	 */
	  var _mouseHandlers = {};
	  /**
	 * Extending the ZeroClipboard configuration defaults for the Client module.
	 */
	  _extend(_globalConfig, {
	    autoActivate: true
	  });
	  /**
	 * The real constructor for `ZeroClipboard` client instances.
	 * @private
	 */
	  var _clientConstructor = function(elements) {
	    var client = this;
	    client.id = "" + _clientIdCounter++;
	    _clientMeta[client.id] = {
	      instance: client,
	      elements: [],
	      handlers: {}
	    };
	    if (elements) {
	      client.clip(elements);
	    }
	    ZeroClipboard.on("*", function(event) {
	      return client.emit(event);
	    });
	    ZeroClipboard.on("destroy", function() {
	      client.destroy();
	    });
	    ZeroClipboard.create();
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.on`.
	 * @private
	 */
	  var _clientOn = function(eventType, listener) {
	    var i, len, events, added = {}, meta = _clientMeta[this.id], handlers = meta && meta.handlers;
	    if (!meta) {
	      throw new Error("Attempted to add new listener(s) to a destroyed ZeroClipboard client instance");
	    }
	    if (typeof eventType === "string" && eventType) {
	      events = eventType.toLowerCase().split(/\s+/);
	    } else if (typeof eventType === "object" && eventType && typeof listener === "undefined") {
	      for (i in eventType) {
	        if (_hasOwn.call(eventType, i) && typeof i === "string" && i && typeof eventType[i] === "function") {
	          this.on(i, eventType[i]);
	        }
	      }
	    }
	    if (events && events.length) {
	      for (i = 0, len = events.length; i < len; i++) {
	        eventType = events[i].replace(/^on/, "");
	        added[eventType] = true;
	        if (!handlers[eventType]) {
	          handlers[eventType] = [];
	        }
	        handlers[eventType].push(listener);
	      }
	      if (added.ready && _flashState.ready) {
	        this.emit({
	          type: "ready",
	          client: this
	        });
	      }
	      if (added.error) {
	        for (i = 0, len = _flashStateErrorNames.length; i < len; i++) {
	          if (_flashState[_flashStateErrorNames[i].replace(/^flash-/, "")]) {
	            this.emit({
	              type: "error",
	              name: _flashStateErrorNames[i],
	              client: this
	            });
	            break;
	          }
	        }
	        if (_zcSwfVersion !== undefined && ZeroClipboard.version !== _zcSwfVersion) {
	          this.emit({
	            type: "error",
	            name: "version-mismatch",
	            jsVersion: ZeroClipboard.version,
	            swfVersion: _zcSwfVersion
	          });
	        }
	      }
	    }
	    return this;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.off`.
	 * @private
	 */
	  var _clientOff = function(eventType, listener) {
	    var i, len, foundIndex, events, perEventHandlers, meta = _clientMeta[this.id], handlers = meta && meta.handlers;
	    if (!handlers) {
	      return this;
	    }
	    if (arguments.length === 0) {
	      events = _keys(handlers);
	    } else if (typeof eventType === "string" && eventType) {
	      events = eventType.split(/\s+/);
	    } else if (typeof eventType === "object" && eventType && typeof listener === "undefined") {
	      for (i in eventType) {
	        if (_hasOwn.call(eventType, i) && typeof i === "string" && i && typeof eventType[i] === "function") {
	          this.off(i, eventType[i]);
	        }
	      }
	    }
	    if (events && events.length) {
	      for (i = 0, len = events.length; i < len; i++) {
	        eventType = events[i].toLowerCase().replace(/^on/, "");
	        perEventHandlers = handlers[eventType];
	        if (perEventHandlers && perEventHandlers.length) {
	          if (listener) {
	            foundIndex = perEventHandlers.indexOf(listener);
	            while (foundIndex !== -1) {
	              perEventHandlers.splice(foundIndex, 1);
	              foundIndex = perEventHandlers.indexOf(listener, foundIndex);
	            }
	          } else {
	            perEventHandlers.length = 0;
	          }
	        }
	      }
	    }
	    return this;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.handlers`.
	 * @private
	 */
	  var _clientListeners = function(eventType) {
	    var copy = null, handlers = _clientMeta[this.id] && _clientMeta[this.id].handlers;
	    if (handlers) {
	      if (typeof eventType === "string" && eventType) {
	        copy = handlers[eventType] ? handlers[eventType].slice(0) : [];
	      } else {
	        copy = _deepCopy(handlers);
	      }
	    }
	    return copy;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.emit`.
	 * @private
	 */
	  var _clientEmit = function(event) {
	    if (_clientShouldEmit.call(this, event)) {
	      if (typeof event === "object" && event && typeof event.type === "string" && event.type) {
	        event = _extend({}, event);
	      }
	      var eventCopy = _extend({}, _createEvent(event), {
	        client: this
	      });
	      _clientDispatchCallbacks.call(this, eventCopy);
	    }
	    return this;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.clip`.
	 * @private
	 */
	  var _clientClip = function(elements) {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to clip element(s) to a destroyed ZeroClipboard client instance");
	    }
	    elements = _prepClip(elements);
	    for (var i = 0; i < elements.length; i++) {
	      if (_hasOwn.call(elements, i) && elements[i] && elements[i].nodeType === 1) {
	        if (!elements[i].zcClippingId) {
	          elements[i].zcClippingId = "zcClippingId_" + _elementIdCounter++;
	          _elementMeta[elements[i].zcClippingId] = [ this.id ];
	          if (_globalConfig.autoActivate === true) {
	            _addMouseHandlers(elements[i]);
	          }
	        } else if (_elementMeta[elements[i].zcClippingId].indexOf(this.id) === -1) {
	          _elementMeta[elements[i].zcClippingId].push(this.id);
	        }
	        var clippedElements = _clientMeta[this.id] && _clientMeta[this.id].elements;
	        if (clippedElements.indexOf(elements[i]) === -1) {
	          clippedElements.push(elements[i]);
	        }
	      }
	    }
	    return this;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.unclip`.
	 * @private
	 */
	  var _clientUnclip = function(elements) {
	    var meta = _clientMeta[this.id];
	    if (!meta) {
	      return this;
	    }
	    var clippedElements = meta.elements;
	    var arrayIndex;
	    if (typeof elements === "undefined") {
	      elements = clippedElements.slice(0);
	    } else {
	      elements = _prepClip(elements);
	    }
	    for (var i = elements.length; i--; ) {
	      if (_hasOwn.call(elements, i) && elements[i] && elements[i].nodeType === 1) {
	        arrayIndex = 0;
	        while ((arrayIndex = clippedElements.indexOf(elements[i], arrayIndex)) !== -1) {
	          clippedElements.splice(arrayIndex, 1);
	        }
	        var clientIds = _elementMeta[elements[i].zcClippingId];
	        if (clientIds) {
	          arrayIndex = 0;
	          while ((arrayIndex = clientIds.indexOf(this.id, arrayIndex)) !== -1) {
	            clientIds.splice(arrayIndex, 1);
	          }
	          if (clientIds.length === 0) {
	            if (_globalConfig.autoActivate === true) {
	              _removeMouseHandlers(elements[i]);
	            }
	            delete elements[i].zcClippingId;
	          }
	        }
	      }
	    }
	    return this;
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.elements`.
	 * @private
	 */
	  var _clientElements = function() {
	    var meta = _clientMeta[this.id];
	    return meta && meta.elements ? meta.elements.slice(0) : [];
	  };
	  /**
	 * The underlying implementation of `ZeroClipboard.Client.prototype.destroy`.
	 * @private
	 */
	  var _clientDestroy = function() {
	    if (!_clientMeta[this.id]) {
	      return;
	    }
	    this.unclip();
	    this.off();
	    delete _clientMeta[this.id];
	  };
	  /**
	 * Inspect an Event to see if the Client (`this`) should honor it for emission.
	 * @private
	 */
	  var _clientShouldEmit = function(event) {
	    if (!(event && event.type)) {
	      return false;
	    }
	    if (event.client && event.client !== this) {
	      return false;
	    }
	    var meta = _clientMeta[this.id];
	    var clippedEls = meta && meta.elements;
	    var hasClippedEls = !!clippedEls && clippedEls.length > 0;
	    var goodTarget = !event.target || hasClippedEls && clippedEls.indexOf(event.target) !== -1;
	    var goodRelTarget = event.relatedTarget && hasClippedEls && clippedEls.indexOf(event.relatedTarget) !== -1;
	    var goodClient = event.client && event.client === this;
	    if (!meta || !(goodTarget || goodRelTarget || goodClient)) {
	      return false;
	    }
	    return true;
	  };
	  /**
	 * Handle the actual dispatching of events to a client instance.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _clientDispatchCallbacks = function(event) {
	    var meta = _clientMeta[this.id];
	    if (!(typeof event === "object" && event && event.type && meta)) {
	      return;
	    }
	    var async = _shouldPerformAsync(event);
	    var wildcardTypeHandlers = meta && meta.handlers["*"] || [];
	    var specificTypeHandlers = meta && meta.handlers[event.type] || [];
	    var handlers = wildcardTypeHandlers.concat(specificTypeHandlers);
	    if (handlers && handlers.length) {
	      var i, len, func, context, eventCopy, originalContext = this;
	      for (i = 0, len = handlers.length; i < len; i++) {
	        func = handlers[i];
	        context = originalContext;
	        if (typeof func === "string" && typeof _window[func] === "function") {
	          func = _window[func];
	        }
	        if (typeof func === "object" && func && typeof func.handleEvent === "function") {
	          context = func;
	          func = func.handleEvent;
	        }
	        if (typeof func === "function") {
	          eventCopy = _extend({}, event);
	          _dispatchCallback(func, context, [ eventCopy ], async);
	        }
	      }
	    }
	  };
	  /**
	 * Prepares the elements for clipping/unclipping.
	 *
	 * @returns An Array of elements.
	 * @private
	 */
	  var _prepClip = function(elements) {
	    if (typeof elements === "string") {
	      elements = [];
	    }
	    return typeof elements.length !== "number" ? [ elements ] : elements;
	  };
	  /**
	 * Add a `mouseover` handler function for a clipped element.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _addMouseHandlers = function(element) {
	    if (!(element && element.nodeType === 1)) {
	      return;
	    }
	    var _suppressMouseEvents = function(event) {
	      if (!(event || (event = _window.event))) {
	        return;
	      }
	      if (event._source !== "js") {
	        event.stopImmediatePropagation();
	        event.preventDefault();
	      }
	      delete event._source;
	    };
	    var _elementMouseOver = function(event) {
	      if (!(event || (event = _window.event))) {
	        return;
	      }
	      _suppressMouseEvents(event);
	      ZeroClipboard.focus(element);
	    };
	    element.addEventListener("mouseover", _elementMouseOver, false);
	    element.addEventListener("mouseout", _suppressMouseEvents, false);
	    element.addEventListener("mouseenter", _suppressMouseEvents, false);
	    element.addEventListener("mouseleave", _suppressMouseEvents, false);
	    element.addEventListener("mousemove", _suppressMouseEvents, false);
	    _mouseHandlers[element.zcClippingId] = {
	      mouseover: _elementMouseOver,
	      mouseout: _suppressMouseEvents,
	      mouseenter: _suppressMouseEvents,
	      mouseleave: _suppressMouseEvents,
	      mousemove: _suppressMouseEvents
	    };
	  };
	  /**
	 * Remove a `mouseover` handler function for a clipped element.
	 *
	 * @returns `undefined`
	 * @private
	 */
	  var _removeMouseHandlers = function(element) {
	    if (!(element && element.nodeType === 1)) {
	      return;
	    }
	    var mouseHandlers = _mouseHandlers[element.zcClippingId];
	    if (!(typeof mouseHandlers === "object" && mouseHandlers)) {
	      return;
	    }
	    var key, val, mouseEvents = [ "move", "leave", "enter", "out", "over" ];
	    for (var i = 0, len = mouseEvents.length; i < len; i++) {
	      key = "mouse" + mouseEvents[i];
	      val = mouseHandlers[key];
	      if (typeof val === "function") {
	        element.removeEventListener(key, val, false);
	      }
	    }
	    delete _mouseHandlers[element.zcClippingId];
	  };
	  /**
	 * Creates a new ZeroClipboard client instance.
	 * Optionally, auto-`clip` an element or collection of elements.
	 *
	 * @constructor
	 */
	  ZeroClipboard._createClient = function() {
	    _clientConstructor.apply(this, _args(arguments));
	  };
	  /**
	 * Register an event listener to the client.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.on = function() {
	    return _clientOn.apply(this, _args(arguments));
	  };
	  /**
	 * Unregister an event handler from the client.
	 * If no `listener` function/object is provided, it will unregister all handlers for the provided `eventType`.
	 * If no `eventType` is provided, it will unregister all handlers for every event type.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.off = function() {
	    return _clientOff.apply(this, _args(arguments));
	  };
	  /**
	 * Retrieve event listeners for an `eventType` from the client.
	 * If no `eventType` is provided, it will retrieve all listeners for every event type.
	 *
	 * @returns array of listeners for the `eventType`; if no `eventType`, then a map/hash object of listeners for all event types; or `null`
	 */
	  ZeroClipboard.prototype.handlers = function() {
	    return _clientListeners.apply(this, _args(arguments));
	  };
	  /**
	 * Event emission receiver from the Flash object for this client's registered JavaScript event listeners.
	 *
	 * @returns For the "copy" event, returns the Flash-friendly "clipData" object; otherwise `undefined`.
	 */
	  ZeroClipboard.prototype.emit = function() {
	    return _clientEmit.apply(this, _args(arguments));
	  };
	  /**
	 * Register clipboard actions for new element(s) to the client.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.clip = function() {
	    return _clientClip.apply(this, _args(arguments));
	  };
	  /**
	 * Unregister the clipboard actions of previously registered element(s) on the page.
	 * If no elements are provided, ALL registered elements will be unregistered.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.unclip = function() {
	    return _clientUnclip.apply(this, _args(arguments));
	  };
	  /**
	 * Get all of the elements to which this client is clipped.
	 *
	 * @returns array of clipped elements
	 */
	  ZeroClipboard.prototype.elements = function() {
	    return _clientElements.apply(this, _args(arguments));
	  };
	  /**
	 * Self-destruct and clean up everything for a single client.
	 * This will NOT destroy the embedded Flash object.
	 *
	 * @returns `undefined`
	 */
	  ZeroClipboard.prototype.destroy = function() {
	    return _clientDestroy.apply(this, _args(arguments));
	  };
	  /**
	 * Stores the pending plain text to inject into the clipboard.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.setText = function(text) {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    ZeroClipboard.setData("text/plain", text);
	    return this;
	  };
	  /**
	 * Stores the pending HTML text to inject into the clipboard.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.setHtml = function(html) {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    ZeroClipboard.setData("text/html", html);
	    return this;
	  };
	  /**
	 * Stores the pending rich text (RTF) to inject into the clipboard.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.setRichText = function(richText) {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    ZeroClipboard.setData("application/rtf", richText);
	    return this;
	  };
	  /**
	 * Stores the pending data to inject into the clipboard.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.setData = function() {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to set pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    ZeroClipboard.setData.apply(this, _args(arguments));
	    return this;
	  };
	  /**
	 * Clears the pending data to inject into the clipboard.
	 * If no `format` is provided, all pending data formats will be cleared.
	 *
	 * @returns `this`
	 */
	  ZeroClipboard.prototype.clearData = function() {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to clear pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    ZeroClipboard.clearData.apply(this, _args(arguments));
	    return this;
	  };
	  /**
	 * Gets a copy of the pending data to inject into the clipboard.
	 * If no `format` is provided, a copy of ALL pending data formats will be returned.
	 *
	 * @returns `String` or `Object`
	 */
	  ZeroClipboard.prototype.getData = function() {
	    if (!_clientMeta[this.id]) {
	      throw new Error("Attempted to get pending clipboard data from a destroyed ZeroClipboard client instance");
	    }
	    return ZeroClipboard.getData.apply(this, _args(arguments));
	  };
	  if (typeof define === "function" && define.amd) {
	    define(function() {
	      return ZeroClipboard;
	    });
	  } else if (typeof module === "object" && module && typeof module.exports === "object" && module.exports) {
	    module.exports = ZeroClipboard;
	  } else {
	    window.ZeroClipboard = ZeroClipboard;
	  }
	})(function() {
	  return this || window;
	}());
	},{}]},{},[23,57,59,58,60,81,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,98,99,100,88,89,90,91,92,93,30,34,31,32,39,33,35,36,37,38])("zeroclipboard")
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(45), (function() { return this; }())))

/***/ },
/* 45 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 46 */,
/* 47 */,
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var NodesCollection, RelationsCollection, VisualizationEdit, VisualizationGraph, VisualizationTableNodes, VisualizationTableRelations,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

	NodesCollection = __webpack_require__(2);

	RelationsCollection = __webpack_require__(4);

	VisualizationGraph = __webpack_require__(53);

	VisualizationTableNodes = __webpack_require__(54);

	VisualizationTableRelations = __webpack_require__(55);

	VisualizationEdit = (function() {
	  VisualizationEdit.prototype.id = null;

	  VisualizationEdit.prototype.nodes = null;

	  VisualizationEdit.prototype.visualizationGraph = null;

	  VisualizationEdit.prototype.visualizationTableNodes = null;

	  VisualizationEdit.prototype.visualizationTableRelations = null;

	  VisualizationEdit.prototype.$tableSelector = null;

	  function VisualizationEdit(_id) {
	    this.resize = bind(this.resize, this);
	    this.updateTable = bind(this.updateTable, this);
	    console.log('setup visualization', _id);
	    this.id = _id;
	    this.nodes = new NodesCollection();
	    this.relations = new RelationsCollection();
	    this.visualizationTableNodes = new VisualizationTableNodes({
	      collection: this.nodes
	    });
	    this.visualizationTableRelations = new VisualizationTableRelations({
	      collection: this.relations
	    });
	    this.visualizationGraph = new VisualizationGraph({
	      collection: {
	        nodes: this.nodes,
	        relations: this.relations
	      }
	    });
	    this.$tableSelector = $('#visualization-table-selector .btn').click(this.updateTable);
	  }

	  VisualizationEdit.prototype.setupAffix = function() {
	    return $('.visualization-graph').affix({
	      offset: {
	        top: 50
	      }
	    });
	  };

	  VisualizationEdit.prototype.updateTable = function(e) {
	    e.preventDefault();
	    if ($(e.target).hasClass('active')) {
	      return;
	    }
	    console.log('updateTable', e);
	    this.$tableSelector.filter('.active').removeClass('active btn-primary').addClass('btn-default');
	    $(e.target).addClass('active btn-primary');
	    if ($(e.target).attr('href') === '#nodes') {
	      this.visualizationTableRelations.hide();
	      return this.visualizationTableNodes.show();
	    } else {
	      this.visualizationTableNodes.hide();
	      return this.visualizationTableRelations.show();
	    }
	  };

	  VisualizationEdit.prototype.resize = function() {
	    var graphHeight, windowHeight;
	    console.log('resize!');
	    windowHeight = $(window).height();
	    graphHeight = windowHeight - 50 - 64 - 64;
	    this.visualizationGraph.$el.height(graphHeight);
	    this.visualizationGraph.resize();
	    $('.visualization-table').css('top', graphHeight + 64);
	    return $('.footer').css('top', graphHeight + 64);
	  };

	  VisualizationEdit.prototype.render = function() {
	    this.setupAffix();
	    this.resize();
	    this.nodes.fetch({
	      url: '/api/visualizations/' + this.id + '/nodes/'
	    });
	    return this.relations.fetch({
	      url: '/api/visualizations/' + this.id + '/relations/'
	    });
	  };

	  return VisualizationEdit;

	})();

	module.exports = VisualizationEdit;


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var VisualizationGraphCanvas, d3,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	d3 = __webpack_require__(8);

	VisualizationGraphCanvas = (function(superClass) {
	  extend(VisualizationGraphCanvas, superClass);

	  function VisualizationGraphCanvas() {
	    this.onTick = bind(this.onTick, this);
	    this.onNodeDoubleClick = bind(this.onNodeDoubleClick, this);
	    this.onNodeClick = bind(this.onNodeClick, this);
	    this.onNodeOut = bind(this.onNodeOut, this);
	    this.onNodeOver = bind(this.onNodeOver, this);
	    this.onNodeDragEnd = bind(this.onNodeDragEnd, this);
	    this.onNodeDragStart = bind(this.onNodeDragStart, this);
	    this.onCanvasDragEnd = bind(this.onCanvasDragEnd, this);
	    this.onCanvasDragStart = bind(this.onCanvasDragStart, this);
	    this.onCanvasDrag = bind(this.onCanvasDrag, this);
	    this.toogleNodesWithoutRelation = bind(this.toogleNodesWithoutRelation, this);
	    this.toogleLabels = bind(this.toogleLabels, this);
	    this.removeNodeRelations = bind(this.removeNodeRelations, this);
	    return VisualizationGraphCanvas.__super__.constructor.apply(this, arguments);
	  }

	  VisualizationGraphCanvas.prototype.NODES_SIZE = 8;

	  VisualizationGraphCanvas.prototype.svg = null;

	  VisualizationGraphCanvas.prototype.container = null;

	  VisualizationGraphCanvas.prototype.color = null;

	  VisualizationGraphCanvas.prototype.data = null;

	  VisualizationGraphCanvas.prototype.data_nodes = [];

	  VisualizationGraphCanvas.prototype.data_nodes_map = d3.map();

	  VisualizationGraphCanvas.prototype.data_relations = [];

	  VisualizationGraphCanvas.prototype.data_current_nodes = [];

	  VisualizationGraphCanvas.prototype.data_current_relations = [];

	  VisualizationGraphCanvas.prototype.nodes_cont = null;

	  VisualizationGraphCanvas.prototype.relations_cont = null;

	  VisualizationGraphCanvas.prototype.labels_cont = null;

	  VisualizationGraphCanvas.prototype.nodes = null;

	  VisualizationGraphCanvas.prototype.relations = null;

	  VisualizationGraphCanvas.prototype.labels = null;

	  VisualizationGraphCanvas.prototype.force = null;

	  VisualizationGraphCanvas.prototype.forceDrag = null;

	  VisualizationGraphCanvas.prototype.linkedByIndex = {};

	  VisualizationGraphCanvas.prototype.viewport = {
	    width: 0,
	    height: 0,
	    center: {
	      x: 0,
	      y: 0
	    },
	    origin: {
	      x: 0,
	      y: 0
	    },
	    x: 0,
	    y: 0,
	    dx: 0,
	    dy: 0,
	    drag: {
	      x: 0,
	      y: 0
	    },
	    scale: 1
	  };

	  VisualizationGraphCanvas.prototype.initialize = function(options) {
	    console.log('initialize canvas');
	    this.data = options.data;
	    this.initializaData();
	    this.viewport.width = this.$el.width();
	    this.viewport.height = this.$el.height();
	    this.viewport.center.x = this.viewport.width * 0.5;
	    this.viewport.center.y = this.viewport.height * 0.5;
	    this.color = d3.scale.category20();
	    this.force = d3.layout.force().charge(-120).linkDistance(90).size([this.viewport.width, this.viewport.height]).on('tick', this.onTick);
	    this.forceDrag = this.force.drag().on('dragstart', this.onNodeDragStart).on('dragend', this.onNodeDragEnd);
	    this.svg = d3.select(this.$el.get(0)).append('svg:svg').attr('width', this.viewport.width).attr('height', this.viewport.height).call(d3.behavior.drag().on('drag', this.onCanvasDrag).on('dragstart', this.onCanvasDragStart).on('dragend', this.onCanvasDragEnd));
	    this.container = this.svg.append('g');
	    this.relations_cont = this.container.append('g').attr('class', 'relations-cont');
	    this.nodes_cont = this.container.append('g').attr('class', 'nodes-cont');
	    this.labels_cont = this.container.append('g').attr('class', 'labels-cont');
	    this.rescale();
	    return this.render();
	  };

	  VisualizationGraphCanvas.prototype.initializaData = function() {
	    this.data.nodes.forEach((function(_this) {
	      return function(d) {
	        _this.data_nodes_map.set(d.id, d);
	        _this.data_nodes.push(d);
	        if (d.visible) {
	          return _this.data_current_nodes.push(d);
	        }
	      };
	    })(this));
	    this.data.relations.forEach((function(_this) {
	      return function(d) {
	        d.source = _this.data_nodes_map.get(d.source_id);
	        d.target = _this.data_nodes_map.get(d.target_id);
	        _this.data_relations.push(d);
	        if (d.source.visible && d.target.visible) {
	          _this.data_current_relations.push(d);
	        }
	        return _this.linkedByIndex[d.source_id + ',' + d.target_id] = true;
	      };
	    })(this));
	    console.log('current nodes', this.data_current_nodes);
	    return console.log('current relations', this.data_current_relations);
	  };

	  VisualizationGraphCanvas.prototype.render = function() {
	    console.log('render canvas');
	    this.nodes = this.nodes_cont.selectAll('.node');
	    this.relations = this.relations_cont.selectAll('.relation');
	    this.labels = this.labels_cont.selectAll('.text');
	    return this.updateLayout();
	  };

	  VisualizationGraphCanvas.prototype.updateLayout = function() {
	    console.log('updateLayout');
	    this.updateRelations();
	    this.updateNodes();
	    this.updateLabels();
	    return this.updateForce();
	  };

	  VisualizationGraphCanvas.prototype.updateNodes = function() {
	    this.nodes = this.nodes.data(this.data_current_nodes);
	    this.nodes.enter().append('g').attr('class', 'node').call(this.forceDrag).on('mouseover', this.onNodeOver).on('mouseout', this.onNodeOut).on('click', this.onNodeClick).on('dblclick', this.onNodeDoubleClick).append('circle').attr('class', 'node-circle').attr('r', this.NODES_SIZE).style('fill', (function(_this) {
	      return function(d) {
	        return _this.color(d.node_type);
	      };
	    })(this));
	    return this.nodes.exit().remove();
	  };

	  VisualizationGraphCanvas.prototype.updateRelations = function() {
	    this.relations = this.relations.data(this.data_current_relations);
	    this.relations.enter().append('line').attr('class', 'relation');
	    return this.relations.exit().remove();
	  };

	  VisualizationGraphCanvas.prototype.updateLabels = function() {
	    this.labels = this.labels.data(this.data_current_nodes);
	    this.labels.enter().append('text').attr('class', 'label').attr('dx', this.NODES_SIZE + 6).attr('dy', '.35em');
	    this.labels.text(function(d) {
	      return d.name;
	    });
	    return this.labels.exit().remove();
	  };

	  VisualizationGraphCanvas.prototype.updateForce = function() {
	    return this.force.nodes(this.data_current_nodes).links(this.data_current_relations).start();
	  };

	  VisualizationGraphCanvas.prototype.addNodeData = function(node) {
	    return this.data_current_nodes.push(node);
	  };

	  VisualizationGraphCanvas.prototype.removeNodeData = function(node) {
	    return this.data_current_nodes = this.data_current_nodes.filter((function(_this) {
	      return function(d) {
	        return d.id !== node.id;
	      };
	    })(this));
	  };

	  VisualizationGraphCanvas.prototype.addRelationData = function(relation) {
	    return this.data_current_relations.push(relation);
	  };

	  VisualizationGraphCanvas.prototype.removeRelationData = function(relation) {
	    var index;
	    index = this.data_current_relations.indexOf(relation);
	    if (index >= 0) {
	      return this.data_current_relations.splice(index, 1);
	    }
	  };

	  VisualizationGraphCanvas.prototype.addNode = function(node) {
	    return this.addNodeData(node);
	  };

	  VisualizationGraphCanvas.prototype.removeNode = function(node) {
	    this.removeNodeData(node);
	    return this.removeNodeRelations(node);
	  };

	  VisualizationGraphCanvas.prototype.removeNodeRelations = function(node) {
	    return this.data_current_relations = this.data_current_relations.filter((function(_this) {
	      return function(d) {
	        return d.source.id !== node.id && d.target.id !== node.id;
	      };
	    })(this));
	  };

	  VisualizationGraphCanvas.prototype.addRelation = function(relation) {
	    return this.addRelationData(relation);
	  };

	  VisualizationGraphCanvas.prototype.removeRelation = function(relation) {
	    return this.removeRelationData(relation);
	  };

	  VisualizationGraphCanvas.prototype.showNode = function(node) {
	    this.addNodeData(node);
	    return this.data_relations.forEach((function(_this) {
	      return function(relation) {
	        if ((relation.source.id === node.id && relation.target.visible) || (relation.target.id === node.id && relation.source.visible)) {
	          return _this.addRelationData(relation);
	        }
	      };
	    })(this));
	  };

	  VisualizationGraphCanvas.prototype.hideNode = function(node) {
	    return this.removeNode(node);
	  };

	  VisualizationGraphCanvas.prototype.updateNodeName = function(node, value) {
	    var index;
	    index = this.data_nodes.indexOf(node);
	    if (index >= 0) {
	      this.data_nodes[index].name = value;
	    }
	    return this.updateLabels();
	  };

	  VisualizationGraphCanvas.prototype.updateNodeDescription = function(node, value) {
	    var index;
	    index = this.data_nodes.indexOf(node);
	    if (index >= 0) {
	      return this.data_nodes[index].description = value;
	    }
	  };

	  VisualizationGraphCanvas.prototype.resize = function() {
	    this.viewport.width = this.$el.width();
	    this.viewport.height = this.$el.height();
	    this.viewport.origin.x = (this.viewport.width * 0.5) - this.viewport.center.x;
	    this.viewport.origin.y = (this.viewport.height * 0.5) - this.viewport.center.y;
	    this.svg.attr('width', this.viewport.width);
	    this.svg.attr('height', this.viewport.height);
	    this.rescale();
	    return this.force.size([this.viewport.width, this.viewport.height]);
	  };

	  VisualizationGraphCanvas.prototype.rescale = function() {
	    return this.container.attr('transform', 'translate(' + (this.viewport.origin.x + this.viewport.x) + ',' + (this.viewport.origin.y + this.viewport.y) + ')scale(' + this.viewport.scale + ')');
	  };

	  VisualizationGraphCanvas.prototype.toogleLabels = function(value) {
	    return this.labels.classed('hide', value);
	  };

	  VisualizationGraphCanvas.prototype.toogleNodesWithoutRelation = function(value) {
	    if (value) {
	      this.data_current_nodes.forEach((function(_this) {
	        return function(d) {
	          if (!_this.hasNodeRelations(d)) {
	            return _this.removeNode(d);
	          }
	        };
	      })(this));
	    } else {
	      this.data_nodes.forEach((function(_this) {
	        return function(d) {
	          if (!_this.hasNodeRelations(d)) {
	            return _this.addNode(d);
	          }
	        };
	      })(this));
	    }
	    return this.updateLayout();
	  };

	  VisualizationGraphCanvas.prototype.updateForceLayoutParameter = function(param, value) {
	    this.force.stop();
	    if (param === 'linkDistance') {
	      this.force.linkDistance(value);
	    } else if (param === 'linkStrength') {
	      this.force.linkStrength(value);
	    } else if (param === 'friction') {
	      this.force.friction(value);
	    } else if (param === 'charge') {
	      this.force.charge(value);
	    } else if (param === 'theta') {
	      this.force.theta(value);
	    } else if (param === 'gravity') {
	      this.force.gravity(value);
	    }
	    return this.force.start();
	  };

	  VisualizationGraphCanvas.prototype.zoomIn = function() {
	    return console.log('zoomin');
	  };

	  VisualizationGraphCanvas.prototype.zoomOut = function() {
	    return console.log('zoomout');
	  };

	  VisualizationGraphCanvas.prototype.toogleFullscreen = function() {
	    return console.log('fullscreen');
	  };

	  VisualizationGraphCanvas.prototype.onCanvasDrag = function() {
	    this.viewport.x += d3.event.dx;
	    this.viewport.y += d3.event.dy;
	    this.viewport.dx += d3.event.dx;
	    this.viewport.dy += d3.event.dy;
	    this.rescale();
	    return d3.event.sourceEvent.stopPropagation();
	  };

	  VisualizationGraphCanvas.prototype.onCanvasDragStart = function() {
	    return this.svg.style('cursor', 'move');
	  };

	  VisualizationGraphCanvas.prototype.onCanvasDragEnd = function() {
	    if (this.viewport.dx === 0 && this.viewport.dy === 0) {
	      return;
	    }
	    this.viewport.dx = this.viewport.dy = 0;
	    return this.svg.style('cursor', 'default');
	  };

	  VisualizationGraphCanvas.prototype.onNodeDragStart = function(d) {
	    d3.event.sourceEvent.stopPropagation();
	    this.viewport.drag.x = d.x;
	    return this.viewport.drag.y = d.y;
	  };

	  VisualizationGraphCanvas.prototype.onNodeDragEnd = function(d) {
	    d3.event.sourceEvent.stopPropagation();
	    if (this.viewport.drag.x === d.x && this.viewport.drag.y === d.y) {
	      return;
	    }
	    return d.fixed = true;
	  };

	  VisualizationGraphCanvas.prototype.onNodeOver = function(d) {
	    this.nodes.classed('weaken', true);
	    this.nodes.classed('highlighted', (function(_this) {
	      return function(o) {
	        return _this.areNodesRelated(d, o);
	      };
	    })(this));
	    this.labels.classed('weaken', true);
	    this.labels.classed('highlighted', (function(_this) {
	      return function(o) {
	        return _this.areNodesRelated(d, o);
	      };
	    })(this));
	    this.relations.classed('weaken', true);
	    return this.relations.classed('highlighted', (function(_this) {
	      return function(o) {
	        return o.source.index === d.index || o.target.index === d.index;
	      };
	    })(this));
	  };

	  VisualizationGraphCanvas.prototype.onNodeOut = function(d) {
	    this.nodes.classed('weaken', false);
	    this.nodes.classed('highlighted', false);
	    this.labels.classed('weaken', false);
	    this.labels.classed('highlighted', false);
	    this.relations.classed('weaken', false);
	    return this.relations.classed('highlighted', false);
	  };

	  VisualizationGraphCanvas.prototype.onNodeClick = function(d) {
	    if (d3.event.defaultPrevented) {
	      return;
	    }
	    return Backbone.trigger('visualization.node.showInfo', {
	      node: d
	    });
	  };

	  VisualizationGraphCanvas.prototype.onNodeDoubleClick = function(d) {
	    return d.fixed = false;
	  };

	  VisualizationGraphCanvas.prototype.onTick = function() {
	    this.relations.attr('x1', function(d) {
	      return d.source.x;
	    }).attr('y1', function(d) {
	      return d.source.y;
	    }).attr('x2', function(d) {
	      return d.target.x;
	    }).attr('y2', function(d) {
	      return d.target.y;
	    });
	    this.nodes.attr('transform', function(d) {
	      return 'translate(' + d.x + ',' + d.y + ')';
	    });
	    return this.labels.attr('transform', function(d) {
	      return 'translate(' + d.x + ',' + d.y + ')';
	    });
	  };

	  VisualizationGraphCanvas.prototype.areNodesRelated = function(a, b) {
	    return this.linkedByIndex[a.id + ',' + b.id] || this.linkedByIndex[b.id + ',' + a.id] || a.id === b.id;
	  };

	  VisualizationGraphCanvas.prototype.hasNodeRelations = function(node) {
	    return this.data_current_relations.some(function(d) {
	      return d.source.id === node.id || d.target.id === node.id;
	    });
	  };

	  VisualizationGraphCanvas.prototype.getNodeRelations = function(node) {
	    var arr;
	    arr = [];
	    this.data_current_relations.forEach(function(d) {
	      if (d.source.id === node.id || d.target.id === node.id) {
	        return arr.push(d);
	      }
	    });
	    return arr;
	  };

	  return VisualizationGraphCanvas;

	})(Backbone.View);

	module.exports = VisualizationGraphCanvas;


/***/ },
/* 50 */
/***/ function(module, exports) {

	var VisualizationGraphConfiguration,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	VisualizationGraphConfiguration = (function(superClass) {
	  extend(VisualizationGraphConfiguration, superClass);

	  function VisualizationGraphConfiguration() {
	    this.onToogleNoRelations = bind(this.onToogleNoRelations, this);
	    this.onToogleLabels = bind(this.onToogleLabels, this);
	    this.onChangeValue = bind(this.onChangeValue, this);
	    return VisualizationGraphConfiguration.__super__.constructor.apply(this, arguments);
	  }

	  VisualizationGraphConfiguration.prototype.el = '.visualization-graph-panel-configuration';

	  VisualizationGraphConfiguration.prototype.onChangeValue = function(e) {
	    return Backbone.trigger('visualization.config.updateParam', {
	      name: $(e.target).attr('name'),
	      value: $(e.target).val()
	    });
	  };

	  VisualizationGraphConfiguration.prototype.onToogleLabels = function(e) {
	    return Backbone.trigger('visualization.config.toogleLabels', {
	      value: $(e.target).prop('checked')
	    });
	  };

	  VisualizationGraphConfiguration.prototype.onToogleNoRelations = function(e) {
	    return Backbone.trigger('visualization.config.toogleNodesWithoutRelation', {
	      value: $(e.target).prop('checked')
	    });
	  };

	  VisualizationGraphConfiguration.prototype.initialize = function() {
	    return this.render();
	  };

	  VisualizationGraphConfiguration.prototype.render = function() {
	    this.$el.find('#hideLabels').change(this.onToogleLabels);
	    this.$el.find('#hideNoRelations').change(this.onToogleNoRelations);
	    this.$el.find('#linkdistante').change(this.onChangeValue);
	    this.$el.find('#linkstrengh').change(this.onChangeValue);
	    this.$el.find('#friction').change(this.onChangeValue);
	    this.$el.find('#charge').change(this.onChangeValue);
	    this.$el.find('#theta').change(this.onChangeValue);
	    this.$el.find('#gravity').change(this.onChangeValue);
	    return this;
	  };

	  return VisualizationGraphConfiguration;

	})(Backbone.View);

	module.exports = VisualizationGraphConfiguration;


/***/ },
/* 51 */
/***/ function(module, exports) {

	var VisualizationGraphNavigation,
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	VisualizationGraphNavigation = (function(superClass) {
	  extend(VisualizationGraphNavigation, superClass);

	  function VisualizationGraphNavigation() {
	    return VisualizationGraphNavigation.__super__.constructor.apply(this, arguments);
	  }

	  VisualizationGraphNavigation.prototype.el = '.visualization-graph-menu-navigation';

	  VisualizationGraphNavigation.prototype.initialize = function() {
	    return this.render();
	  };

	  VisualizationGraphNavigation.prototype.render = function() {
	    this.$el.find('.zoomin').click(function() {
	      return Backbone.trigger('visualization.navigation.zoomin');
	    });
	    this.$el.find('.zoomout').click(function() {
	      return Backbone.trigger('visualization.navigation.zoomout');
	    });
	    this.$el.find('.fullscreen').click(function() {
	      return Backbone.trigger('visualization.navigation.fullscreen');
	    });
	    return this;
	  };

	  return VisualizationGraphNavigation;

	})(Backbone.View);

	module.exports = VisualizationGraphNavigation;


/***/ },
/* 52 */
/***/ function(module, exports) {

	var VisualizationTableBase,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	VisualizationTableBase = (function(superClass) {
	  extend(VisualizationTableBase, superClass);

	  VisualizationTableBase.prototype.table = null;

	  VisualizationTableBase.prototype.table_options = null;

	  function VisualizationTableBase(collection) {
	    this.collection = collection;
	    this.render = bind(this.render, this);
	    this.onTableCreateRow = bind(this.onTableCreateRow, this);
	    this.onTableRemoveRow = bind(this.onTableRemoveRow, this);
	    this.onCollectionSync = bind(this.onCollectionSync, this);
	    VisualizationTableBase.__super__.constructor.call(this, this.collection);
	    this.table_options = {
	      contextMenu: ['row_below', 'remove_row', 'undo', 'redo'],
	      height: 360,
	      stretchH: 'all',
	      columnSorting: true
	    };
	  }

	  VisualizationTableBase.prototype.destroy = function() {
	    this.undelegateEvents();
	    this.$el.removeData().unbind();
	    this.remove();
	    return Backbone.View.prototype.remove.call(this);
	  };

	  VisualizationTableBase.prototype.initialize = function() {
	    return this.collection.once('sync', this.onCollectionSync, this);
	  };

	  VisualizationTableBase.prototype.onCollectionSync = function() {
	    return this.table_options.data = this.collection.toJSON();
	  };

	  VisualizationTableBase.prototype.setupTable = function() {
	    this.table_options.afterRemoveRow = this.onTableRemoveRow;
	    this.table_options.afterCreateRow = this.onTableCreateRow;
	    return this.table = new Handsontable(this.$el.get(0), this.table_options);
	  };

	  VisualizationTableBase.prototype.onTableRemoveRow = function(index, amount) {
	    var model, results;
	    console.log(index, amount);
	    results = [];
	    while (amount > 0) {
	      model = this.collection.at(index);
	      model.destroy();
	      results.push(amount--);
	    }
	    return results;
	  };

	  VisualizationTableBase.prototype.onTableCreateRow = function(index, amount) {
	    var model;
	    console.log('onTableCreateRow');
	    console.log(index, amount);
	    model = this.collection.create({});
	    return console.log(model, model.get('id'));
	  };

	  VisualizationTableBase.prototype.show = function() {
	    this.$el.removeClass('hide');
	    return this.table.render();
	  };

	  VisualizationTableBase.prototype.hide = function() {
	    return this.$el.addClass('hide');
	  };

	  VisualizationTableBase.prototype.render = function() {
	    return this;
	  };

	  return VisualizationTableBase;

	})(Backbone.View);

	module.exports = VisualizationTableBase;


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var VisualizationGraph, VisualizationGraphCanvas, VisualizationGraphConfiguration, VisualizationGraphInfo, VisualizationGraphNavigation,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	VisualizationGraphCanvas = __webpack_require__(49);

	VisualizationGraphConfiguration = __webpack_require__(50);

	VisualizationGraphNavigation = __webpack_require__(51);

	VisualizationGraphInfo = __webpack_require__(11);

	VisualizationGraph = (function(superClass) {
	  extend(VisualizationGraph, superClass);

	  function VisualizationGraph() {
	    this.onCollectionChange = bind(this.onCollectionChange, this);
	    this.onRelationsSync = bind(this.onRelationsSync, this);
	    this.onNodesSync = bind(this.onNodesSync, this);
	    return VisualizationGraph.__super__.constructor.apply(this, arguments);
	  }

	  VisualizationGraph.prototype.el = '.visualization-graph-component';

	  VisualizationGraph.prototype.nodesSync = false;

	  VisualizationGraph.prototype.relationsSync = false;

	  VisualizationGraph.prototype.visualizationGraphCanvas = null;

	  VisualizationGraph.prototype.visualizationGraphConfiguration = null;

	  VisualizationGraph.prototype.visualizationGraphNavigation = null;

	  VisualizationGraph.prototype.initialize = function() {
	    console.log('initialize Graph', this.collection);
	    this.collection.nodes.once('sync', this.onNodesSync, this);
	    this.collection.relations.once('sync', this.onRelationsSync, this);
	    $('.visualization-graph-menu-actions .configure').click(this.onShowPanelConfigure);
	    return $('.visualization-graph-panel-configuration .close').click(this.onHidePanelConfigure);
	  };

	  VisualizationGraph.prototype.onShowPanelConfigure = function() {
	    return $('.visualization-graph-panel-configuration').addClass('active');
	  };

	  VisualizationGraph.prototype.onHidePanelConfigure = function() {
	    return $('.visualization-graph-panel-configuration').removeClass('active');
	  };

	  VisualizationGraph.prototype.onNodesSync = function(nodes) {
	    this.nodesSync = true;
	    console.log('onNodesSync');
	    this.collection.nodes.bind('change', this.onCollectionChange, this);
	    if (this.nodesSync && this.relationsSync) {
	      return this.render();
	    }
	  };

	  VisualizationGraph.prototype.onRelationsSync = function(relations) {
	    this.relationsSync = true;
	    console.log('onRelationsSync');
	    this.collection.relations.bind('change', this.onCollectionChange, this);
	    if (this.nodesSync && this.relationsSync) {
	      return this.render();
	    }
	  };

	  VisualizationGraph.prototype.onCollectionChange = function(e) {
	    return console.log('Collection has changed', e);
	  };

	  VisualizationGraph.prototype.getDataFromCollection = function() {
	    var data;
	    data = {
	      nodes: this.collection.nodes.models.map(function(d) {
	        return d.attributes;
	      }),
	      relations: this.collection.relations.models.map(function(d) {
	        return d.attributes;
	      })
	    };
	    data.relations.forEach(function(d) {
	      d.source = d.source_id - 1;
	      return d.target = d.target_id - 1;
	    });
	    return data;
	  };

	  VisualizationGraph.prototype.render = function() {
	    console.log('render Graph');
	    this.visualizationGraphCanvas = new VisualizationGraphCanvas({
	      el: this.$el,
	      data: this.getDataFromCollection()
	    });
	    this.visualizationGraphConfiguration = new VisualizationGraphConfiguration;
	    this.visualizationGraphNavigation = new VisualizationGraphNavigation;
	    this.visualizationGraphInfo = new VisualizationGraphInfo;
	    Backbone.on('visualization.node.showInfo', this.onNodeShowInfo, this);
	    Backbone.on('visualization.node.name', this.onNodeChangeName, this);
	    Backbone.on('visualization.node.description', this.onNodeChangeDescription, this);
	    Backbone.on('visualization.node.visible', this.onNodeChangeVisible, this);
	    Backbone.on('visualization.config.toogleLabels', this.onToogleLabels, this);
	    Backbone.on('visualization.config.toogleNodesWithoutRelation', this.onToogleNodesWithoutRelation, this);
	    Backbone.on('visualization.config.updateParam', this.onUpdateParam, this);
	    Backbone.on('visualization.navigation.zoomin', this.onZoomIn, this);
	    Backbone.on('visualization.navigation.zoomout', this.onZoomOut, this);
	    return Backbone.on('visualization.navigation.fullscreen', this.onFullscreen, this);
	  };

	  VisualizationGraph.prototype.resize = function() {
	    if (this.visualizationGraphCanvas) {
	      return this.visualizationGraphCanvas.resize();
	    }
	  };

	  VisualizationGraph.prototype.onNodeShowInfo = function(e) {
	    console.log('show info', e.node);
	    return this.visualizationGraphInfo.show(e.node);
	  };

	  VisualizationGraph.prototype.onNodeChangeName = function(e) {
	    return this.visualizationGraphCanvas.updateNodeName(e.node.attributes, e.value);
	  };

	  VisualizationGraph.prototype.onNodeChangeDescription = function(e) {
	    return this.visualizationGraphCanvas.updateNodeDescription(e.node.attributes, e.value);
	  };

	  VisualizationGraph.prototype.onNodeChangeVisible = function(e) {
	    if (e.value) {
	      this.visualizationGraphCanvas.showNode(e.node.attributes);
	    } else {
	      this.visualizationGraphCanvas.hideNode(e.node.attributes);
	    }
	    return this.visualizationGraphCanvas.updateLayout();
	  };

	  VisualizationGraph.prototype.onToogleLabels = function(e) {
	    return this.visualizationGraphCanvas.toogleLabels(e.value);
	  };

	  VisualizationGraph.prototype.onToogleNodesWithoutRelation = function(e) {
	    return this.visualizationGraphCanvas.toogleNodesWithoutRelation(e.value);
	  };

	  VisualizationGraph.prototype.onUpdateParam = function(e) {
	    return this.visualizationGraphCanvas.updateForceLayoutParameter(e.name, e.value);
	  };

	  VisualizationGraph.prototype.onZoomIn = function(e) {
	    return this.visualizationGraphCanvas.zoomIn();
	  };

	  VisualizationGraph.prototype.onZoomOut = function(e) {
	    return this.visualizationGraphCanvas.zoomOut();
	  };

	  VisualizationGraph.prototype.onFullscreen = function(e) {
	    return this.visualizationGraphCanvas.toogleFullscreen();
	  };

	  return VisualizationGraph;

	})(Backbone.View);

	module.exports = VisualizationGraph;


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var Handsontable, VisualizationTableBase, VisualizationTableNodes,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Handsontable = __webpack_require__(44);

	VisualizationTableBase = __webpack_require__(52);

	VisualizationTableNodes = (function(superClass) {
	  extend(VisualizationTableNodes, superClass);

	  VisualizationTableNodes.prototype.el = '.visualization-table-nodes';

	  VisualizationTableNodes.prototype.nodes_type = null;

	  VisualizationTableNodes.prototype.tableColHeaders = ['', 'Name', 'Description', 'Type', 'Visible'];

	  VisualizationTableNodes.prototype.tableColumns = [
	    {
	      data: 'id',
	      type: 'numeric'
	    }, {
	      data: 'name'
	    }, {
	      data: 'description'
	    }, {
	      data: 'node_type',
	      type: 'autocomplete',
	      strict: false
	    }, {
	      data: 'visible',
	      type: 'checkbox'
	    }
	  ];

	  function VisualizationTableNodes(collection) {
	    this.collection = collection;
	    this.onTableChange = bind(this.onTableChange, this);
	    this.onNodesTypesSucess = bind(this.onNodesTypesSucess, this);
	    this.onCollectionSync = bind(this.onCollectionSync, this);
	    VisualizationTableNodes.__super__.constructor.call(this, this.collection);
	    this.table_options.colHeaders = this.tableColHeaders;
	    this.table_options.columns = this.tableColumns;
	  }

	  VisualizationTableNodes.prototype.onCollectionSync = function() {
	    VisualizationTableNodes.__super__.onCollectionSync.call(this);
	    console.log(this.table_options.data);
	    return this.getNodeTypes();
	  };

	  VisualizationTableNodes.prototype.getNodeTypes = function() {
	    console.log('getNodeTypes');
	    return $.ajax({
	      url: '/api/nodes/types.json',
	      dataType: 'json',
	      success: this.onNodesTypesSucess
	    });
	  };

	  VisualizationTableNodes.prototype.onNodesTypesSucess = function(response) {
	    this.nodes_type = response;
	    this.table_options.columns[3].source = this.nodes_type;
	    this.table_options.afterChange = this.onTableChange;
	    return this.setupTable();
	  };

	  VisualizationTableNodes.prototype.onTableChange = function(changes, source) {
	    var change, i, len, results;
	    if (source !== 'loadData') {
	      results = [];
	      for (i = 0, len = changes.length; i < len; i++) {
	        change = changes[i];
	        if (change[2] !== change[3]) {
	          results.push(this.updateNode(change));
	        } else {
	          results.push(void 0);
	        }
	      }
	      return results;
	    }
	  };

	  VisualizationTableNodes.prototype.updateNode = function(change) {
	    var key, model, obj, value;
	    console.log('change', change);
	    key = change[1];
	    value = change[3];
	    model = this.collection.at(change[0]);
	    if (key === 'visible' || key === 'name' || key === 'description') {
	      Backbone.trigger('visualization.node.' + key, {
	        value: value,
	        node: model
	      });
	    } else if (key === 'node_type' && !_.contains(nodes_type, value)) {
	      this.addNodeType(value);
	    }
	    obj = {};
	    obj[key] = value;
	    return model.save(obj);
	  };

	  VisualizationTableNodes.prototype.addNodeType = function(type) {
	    this.nodes_type.push(type);
	    return this.table_options.columns[3].source = this.nodes_type;
	  };

	  return VisualizationTableNodes;

	})(VisualizationTableBase);

	module.exports = VisualizationTableNodes;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var Handsontable, VisualizationTableBase, VisualizationTableRelations,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty;

	Handsontable = __webpack_require__(44);

	VisualizationTableBase = __webpack_require__(52);

	VisualizationTableRelations = (function(superClass) {
	  extend(VisualizationTableRelations, superClass);

	  VisualizationTableRelations.prototype.el = '.visualization-table-relations';

	  VisualizationTableRelations.prototype.nodes_type = null;

	  VisualizationTableRelations.prototype.tableColHeaders = ['', 'Source', 'Target', 'Type'];

	  VisualizationTableRelations.prototype.tableColumns = [
	    {
	      data: 'id',
	      type: 'numeric'
	    }, {
	      data: 'source_id'
	    }, {
	      data: 'target_id'
	    }, {
	      data: 'relation_type'
	    }
	  ];

	  function VisualizationTableRelations(collection) {
	    this.collection = collection;
	    this.onCollectionSync = bind(this.onCollectionSync, this);
	    VisualizationTableRelations.__super__.constructor.call(this, this.collection);
	    console.log('relations', this.collection);
	    this.table_options.colHeaders = this.tableColHeaders;
	    this.table_options.columns = this.tableColumns;
	  }

	  VisualizationTableRelations.prototype.onCollectionSync = function() {
	    VisualizationTableRelations.__super__.onCollectionSync.call(this);
	    return this.setupTable();
	  };

	  return VisualizationTableRelations;

	})(VisualizationTableBase);

	module.exports = VisualizationTableRelations;


/***/ }
/******/ ]);